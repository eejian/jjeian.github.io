<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>漫步小楼```</title>
  
  <subtitle>虽然还没想好写点什么，但是总觉得这里放句话比较和谐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jjeian.github.io/"/>
  <updated>2019-08-23T16:07:50.998Z</updated>
  <id>https://jjeian.github.io/</id>
  
  <author>
    <name>漫步小楼```</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://jjeian.github.io/2019/08/24/%E8%9A%82%E8%9A%81%E8%AF%BE%E5%A0%82/%E9%AB%98%E5%B9%B6%E5%8F%91%E9%99%90%E6%B5%81%E6%96%B9%E5%BC%8F/"/>
    <id>https://jjeian.github.io/2019/08/24/蚂蚁课堂/高并发限流方式/</id>
    <published>2019-08-23T16:07:50.998Z</published>
    <updated>2019-08-23T16:07:50.998Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>阿里内推Java一面题目</title>
    <link href="https://jjeian.github.io/2019/08/20/%E9%9D%A2%E8%AF%95/%E9%98%BF%E9%87%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://jjeian.github.io/2019/08/20/面试/阿里高级面试题/</id>
    <published>2019-08-20T13:37:42.161Z</published>
    <updated>2019-08-22T05:19:20.387Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h3><h4 id="1-使用mysql索引都有哪些原则索引什么数据结构btree-和-b-tree-什么区别"><a class="markdownIt-Anchor" href="#1-使用mysql索引都有哪些原则索引什么数据结构btree-和-b-tree-什么区别"></a> 1. 使用mysql索引都有哪些原则？？索引什么数据结构？？B+tree 和 B tree 什么区别？？</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、 对于查询频率高的字段创建索引；</span><br><span class="line">2、 对排序、分组、联合查询频率高的字段创建索引；</span><br><span class="line">3、 索引的数目不宜太多</span><br><span class="line">      原因：a、每创建一个索引都会占用相应的物理控件；</span><br><span class="line">　　          b、过多的索引会导致<span class="keyword">insert</span>、<span class="keyword">update</span>、<span class="keyword">delete</span>语句的执行效率降低；</span><br><span class="line"><span class="number">4</span>、若在实际中，需要将多个列设置索引时，可以采用多列索引</span><br><span class="line">      如：某个表(假设表名为Student)，存在多个字段(StudentNo, StudentName, Sex, Address, Phone, BirthDate)，其中需要对StudentNo,StudentName字段进行查询，对Sex字段进行分组，对BirthDate字段进行排序，此时可以创建多列索引</span><br><span class="line">      <span class="keyword">index</span> index_name (StudentNo, StudentName, Sex, BirthDate);      <span class="comment">#index_name为索引名</span></span><br><span class="line">      在上面的语句中只创建了一个索引，但是对4个字段都赋予了索引的功能。</span><br><span class="line">       创建多列索引，需要遵循BTree类型，</span><br><span class="line">       即第一列使用时，才启用索引。</span><br><span class="line">       在上面的创建语句中，只有mysql语句在使用到StudentNo字段时，索引才会被启用。</span><br><span class="line">       如:     <span class="keyword">select</span> * <span class="keyword">from</span> Student <span class="keyword">where</span> StudentNo = <span class="number">1000</span>;      <span class="comment">#使用到了StudentNo字段，索引被启用。</span></span><br><span class="line">       可以使用<span class="keyword">explain</span>检测索引是否被启用</span><br><span class="line">        如:<span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> Student <span class="keyword">where</span> StudentNo = <span class="number">1000</span>;</span><br><span class="line">5、选择唯一性索引</span><br><span class="line">        唯一性索引的值是唯一的，可以更快速的通过该索引来确定某条记录。例如，学生表中学号是具有唯一性的字段。为该字段建立唯一性索引可以很快的确定某个学生的信息。如果使用姓名的话，可能存在同名现象，从而降低查询速度。</span><br><span class="line">6、尽量使用数据量少的索引</span><br><span class="line">       如果索引的值很长，那么查询的速度会受到影响。例如，对一个CHAR(100)类型的字段进行全文检索需要的时间肯定要比对CHAR(10)类型的字段需要的时间要多。</span><br><span class="line">7、尽量使用前缀来索引</span><br><span class="line">     如果索引字段的值很长，最好使用值的前缀来索引。例如，TEXT和BLOG类型的字段，进行全文检索会很浪费时间。如果只检索字段的前面的若干个字符，这样可以提高检索速度。</span><br><span class="line">8、删除不再使用或者很少使用的索引.</span><br><span class="line">     表中的数据被大量更新，或者数据的使用方式被改变后，原有的一些索引可能不再需要。数据库管理员应当定期找出这些索引，将它们删除，从而减少索引对更新操作的影响</span><br></pre></td></tr></table></figure><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">B+ </span>tree树索引, <span class="keyword">B </span>tree, 散列</span><br></pre></td></tr></table></figure><h4 id="2mysql有哪些存储引擎都有啥区别要详细"><a class="markdownIt-Anchor" href="#2mysql有哪些存储引擎都有啥区别要详细"></a> 2.Mysql有哪些存储引擎？？都有啥区别？？要详细？？</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">InnoDB:</span> 事务型存储引擎,  并且有较高的并发读取频率</span><br><span class="line">MEMORY： 存储引擎，存放在内存中，数据量小， 速度快</span><br><span class="line"><span class="symbol">Merge:</span> </span><br><span class="line">ARCHIVE： 归档， 有很好的压缩机制</span><br></pre></td></tr></table></figure><h4 id="3设计高并发系统数据库层面该如何设计-数据库锁有哪些类型如何实现"><a class="markdownIt-Anchor" href="#3设计高并发系统数据库层面该如何设计-数据库锁有哪些类型如何实现"></a> 3.设计高并发系统数据库层面该如何设计？？ 数据库锁有哪些类型？？如何实现？？</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>分库分表： 同样量的数据平均存储在不同数据库相同表（或不同表）中，减轻单表压力，如果还是很大，就可以每个库在分多张表，根据hash取值或者其他逻辑判断将数据存储在哪张表中</span><br><span class="line"><span class="number">2.</span>读写分离： 数据库原本就有主从数据库之分，查询在从服务器，增删改在主服务器， </span><br><span class="line"><span class="number">3.</span>归档和操作表区分： 建一张归档表，将历史数据放入，需要操作的表数据单独存储</span><br><span class="line"><span class="number">4.</span>索引啊之类的创建，对于数据量很大，百万级别以上的单表，如果增删改操作不频繁的话， 可以创建bitMap索引，速度要快得多</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>共享锁：要等第一个人操作完，释放锁，才能操作</span><br><span class="line"><span class="number">2.</span>更新锁：解决死锁，别人可以读，但不能操作</span><br><span class="line"><span class="number">3.</span>排他锁：读写都被禁用</span><br><span class="line"><span class="number">4.</span>意向锁（xlock）： 对表中部分数据加锁，查询时，可以跳过</span><br><span class="line"><span class="number">5.</span>计划锁： 操作时，别的表连接不了这张表，</span><br></pre></td></tr></table></figure><h4 id="4数据库事务有哪些"><a class="markdownIt-Anchor" href="#4数据库事务有哪些"></a> 4.数据库事务有哪些？？</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>原子性： 所有操作要么全部成功，要么全部失败</span><br><span class="line"><span class="number">2.</span>一致性： 例如转账，一个事务执行前和执行后必须一致</span><br><span class="line"><span class="number">3.</span>隔离性： 防止脏读， 重复读问题</span><br><span class="line"><span class="number">4.</span>持久性： 永久性提交数据库</span><br></pre></td></tr></table></figure><h4 id="5-oracle常用函数有哪些"><a class="markdownIt-Anchor" href="#5-oracle常用函数有哪些"></a> 5. Oracle常用函数有哪些？？</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Concat:</span> 字符串拼接， 或者 ||</span><br><span class="line"><span class="symbol">Instr:</span> 指定字符串位置</span><br><span class="line"><span class="symbol">Length:</span> 长度</span><br><span class="line"><span class="symbol">Trim:</span> 去空格</span><br><span class="line"><span class="symbol">Lower:</span> 小写</span><br><span class="line"><span class="symbol">Upper:</span>大写</span><br><span class="line"><span class="symbol">Nvl:</span> 判断空</span><br><span class="line"><span class="symbol">Replace:</span> 替换</span><br><span class="line"><span class="symbol">Substr:</span> 截取</span><br><span class="line"><span class="symbol">Floor:</span> 向下取整</span><br><span class="line"><span class="symbol">To_number:</span></span><br><span class="line"><span class="symbol">To_char:</span></span><br><span class="line"><span class="symbol">To_date:</span></span><br><span class="line"><span class="symbol">Decode:</span> 判断函数等等</span><br></pre></td></tr></table></figure><h4 id="6-sql中哪些情况可能不会走索引"><a class="markdownIt-Anchor" href="#6-sql中哪些情况可能不会走索引"></a> 6. Sql中哪些情况可能不会走索引？？</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询谓词没有使用索引的主要边界,换句话说就是select *，可能会导致不走索引</span><br><span class="line"><span class="number">2.</span>单键值的b树索引列上存在<span class="literal">null</span>值，导致COUNT(*)不能走索引。索引列存在空值</span><br><span class="line"><span class="number">3.</span>索引列上有函数运算，导致不走索引</span><br><span class="line"><span class="number">4.</span>隐式类型转换导致不走索引。</span><br><span class="line"><span class="number">5.</span>表的数据库小或者需要选择大部分数据，不走索引</span><br><span class="line"><span class="number">6.</span>！=或者&lt;&gt;(不等于），可能导致不走索引 </span><br><span class="line"><span class="number">7.</span>表字段的属性导致不走索引，字符型的索引列会导致优化器认为需要扫描索引大部分数据且聚簇因子很大，最终导致弃用索引扫描而改用全表扫描方式，</span><br><span class="line"><span class="number">8.</span>使用like, <span class="keyword">in</span> 等， 可能导致不走索引</span><br></pre></td></tr></table></figure><h3 id="分库分表"><a class="markdownIt-Anchor" href="#分库分表"></a> 分库分表</h3><p>1.如何设计可以动态扩容缩容的分库分表方案？？<br>2.用过哪些分库表中间件， 有啥优缺点？？讲一下你了解的分库分表中间件的底层实现原理？？<br>3.我现在有一个未分库分表的系统，以后系统需分库分表，如何设计，让未分库分表的系统动态切换到分库分表的系统上？？<br>4.分布式事务知道么？ 你们怎么解决的？？ TCC ?? 那若吃醋先网络原因，网络连不通怎么办？？<br>5.为什么要分库分表？？<br>6.分布式寻址方式都有哪些算法？？ 知道一致性hash吗？？手写一下java实现代码？？你若userId取摸分片，那我要查一段连续时间里的数据怎么办？<br>7.如何解决分库分表主键问题？？有什么实现方案？</p><h3 id="分布式缓存"><a class="markdownIt-Anchor" href="#分布式缓存"></a> 分布式缓存</h3><p>1.Redis和memcheched 什么区别？？为什么单线程的redis比多线程的memched效率要高？？<br>2.Redis有什么数据类型？？都在哪些场景下使用？？<br>3.redis主从复制是怎么实现的？？Redis的集群模式是如何实现的？？redis的key是如何寻址的？？<br>4.使用redis如何设计分布式锁， 使用zk可以么？？如何实现？？这两种那个效率更高？？<br>5.知道redis的持久化么？？ 都有什么优缺点？？具体底层实现呢？？<br>6.Redis过期策略都有哪些？？LRU??写一下java版本的代码？？</p><h3 id="分布式服务框架"><a class="markdownIt-Anchor" href="#分布式服务框架"></a> 分布式服务框架</h3><p>1.说一下dubbo的实现过程？？注册中心挂了可以继续通信么？？<br>2.Zk原理知道吗？Zk都可以干什么？？Paxos算法知道吗？？说一下原理和实现？？<br>3.Dubbo支持哪些序列号协议？？Hessian？？说一下hession的数据结构？？PB知道吗？？为啥PB效率是最高的？？<br>4.知道netty么？？Netty可以干嘛啊？？NIO, BIO, AIO都是什么啊？有什么区别么？<br>5.Dubbo复制均衡策略和高可用策略都有哪些？？动态代理策略呢？？<br>6.为什么要进行系统拆分啊？？拆分不用dubbo可以吗？？Dubbo和thrift什么区别？？<br>7.Mq相关？</p><h3 id="java基础相关"><a class="markdownIt-Anchor" href="#java基础相关"></a> java基础相关</h3><h4 id="1-hashcode相等两个类相等么equals-呢-相反呢"><a class="markdownIt-Anchor" href="#1-hashcode相等两个类相等么equals-呢-相反呢"></a> 1. Hashcode相等，两个类相等么？？equals 呢？？ 相反呢？？</h4><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不一定相等，都不一定相当。 反过来（<span class="keyword">equals</span>相同，hashcode相同，则类相同）可能成立</span><br><span class="line"><span class="keyword">Equals</span>用来判断两个对象的值是否相等， </span><br><span class="line">==用来判断两个对象的引用地址和值是否相等</span><br></pre></td></tr></table></figure><h4 id="2介绍一下集合框架"><a class="markdownIt-Anchor" href="#2介绍一下集合框架"></a> 2.介绍一下集合框架？？</h4><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分两种： </span><br><span class="line">Collection: 包含独立元素， 可以重复，无序的， 继承了iterable接口，有一个iterator方法返回迭代器对象， 相关接口有<span class="built_in">list</span>, <span class="built_in">queue</span>， <span class="built_in">set</span></span><br><span class="line"><span class="built_in">Map</span>: 包含键值对的元素，key不重复，value允许重复， 实现接口TreeMap, HashMap, LinkedhashMap, concurrentHashMap, hasTable</span><br></pre></td></tr></table></figure><h4 id="3hashmap-hashtable底层实现什么区别hashtable-和concurrenthashmap呢"><a class="markdownIt-Anchor" href="#3hashmap-hashtable底层实现什么区别hashtable-和concurrenthashmap呢"></a> 3.Hashmap ， hashtable底层实现什么区别？？Hashtable 和concurrenthashMap呢？？</h4><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hashmap非线程安全的，<span class="built_in">key</span>和<span class="built_in">value</span>可以接收nul值</span><br><span class="line">Hashtable线程安全的，不能接受<span class="built_in">null</span></span><br><span class="line">单线程下，hashmap比hashtable快得多</span><br><span class="line">concurrentHashMap融合了hashtable和hashmap的优点，写可以多线程写，并且是线程安全的，读线程不受限制</span><br></pre></td></tr></table></figure><h4 id="4hashmap-和treemap-什么区别底层数据结构是什么"><a class="markdownIt-Anchor" href="#4hashmap-和treemap-什么区别底层数据结构是什么"></a> 4.Hashmap 和treemap 什么区别？？底层数据结构是什么？？</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Hashmap:</span> 数组方式存储， 线程非安全，可存储<span class="literal">null</span>, 无序</span><br><span class="line"><span class="string">Treemap:</span> 基于二叉树实现方式， 线程非安全，不允许<span class="literal">null</span>, 存入元素需实现comparable接口， 自定义排序规则。</span><br></pre></td></tr></table></figure><h4 id="5线程池用过么都有什么参数底层如何实现的"><a class="markdownIt-Anchor" href="#5线程池用过么都有什么参数底层如何实现的"></a> 5.线程池用过么？？都有什么参数？？底层如何实现的？？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">核心池大小</span><br><span class="line">线程池最大线程数</span><br><span class="line">保持多久时间会终止</span><br><span class="line">阻塞队列，存储等待执行的任务</span><br><span class="line">；</span><br><span class="line">Java通过Executors可以提供四种线程池</span><br></pre></td></tr></table></figure><h4 id="6sychnized和lock什么区别sychnize-什么情况情况下是对象锁什么时候是全局锁为什么"><a class="markdownIt-Anchor" href="#6sychnized和lock什么区别sychnize-什么情况情况下是对象锁什么时候是全局锁为什么"></a> 6.Sychnized和lock什么区别？？Sychnize 什么情况，情况下是对象锁？？什么时候是全局锁？？为什么？？</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="selector-class">.synchnized</span> 是关键字，在方法出错之后由java虚拟机自动解除锁定，而 Lock属于Api级别的锁，它需要自己在 finally方法后面保证锁的释放。</span><br><span class="line"><span class="number">2</span><span class="selector-class">.synchnized</span> 不能实现公平锁，而 Lock可以，Lock还可以添加多个监听条件来对锁进行控制，可以中断。</span><br><span class="line"><span class="number">3</span><span class="selector-class">.synchronized</span> 作用在普通方法上属于对象锁，作用在静态方法，类<span class="selector-class">.class</span> 上面，属于全局锁。对象锁只对同一个对象加锁，作用对象是同一个对象。而类锁是对类加锁，对整个类都有效。 </span><br><span class="line">如果锁住的是一般方法就是对象锁，对象锁只会对同一个对象起作用，如果是锁住了static 方法则是全局锁，会对全局对象都管用，如果想在普通方法中使用全局锁需要锁住class对象。</span><br></pre></td></tr></table></figure><h4 id="7threadlocal-是什么-底层如何实现写一个例子呗"><a class="markdownIt-Anchor" href="#7threadlocal-是什么-底层如何实现写一个例子呗"></a> 7.ThreadLocal 是什么？？ 底层如何实现？？写一个例子呗？？</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ThreadLocal 底层是存储在 线程本地Map里面的一个对象，它跟当前线程绑定，以 ThreadLocal 对象本身为 key，以ThreadLocal里面存的值为值，目的是为了实现线程之间的数据的隔离。</span><br><span class="line"><span class="built_in">public</span> static final ThreadLocal <span class="keyword">session</span> = <span class="built_in">new</span> ThreadLocal();   </span><br><span class="line">   <span class="built_in">public</span> static <span class="keyword">Session</span> getCurrentSession() &#123;   </span><br><span class="line">       <span class="keyword">Session</span> s = (<span class="keyword">Session</span>)<span class="keyword">session</span>.<span class="keyword">get</span>();   </span><br><span class="line">       <span class="keyword">if</span>(s == <span class="keyword">null</span>)&#123;   </span><br><span class="line">           s = sessionFactory.openSession();   </span><br><span class="line">           <span class="keyword">session</span>.<span class="keyword">set</span>(s);   </span><br><span class="line">       &#125;   </span><br><span class="line">       <span class="keyword">return</span> s;   </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>8.Volitile的工作原理？？</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">实例化一个对象其实可以分为三个步骤：</span><br><span class="line">　　（<span class="number">1</span>）分配内存空间。</span><br><span class="line">　　（<span class="number">2</span>）初始化对象。</span><br><span class="line">　　（<span class="number">3</span>）将内存空间的地址赋值给对应的引用。</span><br><span class="line">多线程情况下，Volitile修饰的变量会被加一个lock指令，这个指令做两件事情，</span><br><span class="line"><span class="number">1.</span>在变量改变之后，会立刻从cpu高速缓存写到内存</span><br><span class="line"><span class="number">2.</span>会通知其他cpu缓存中的该变量的值设置成无效，用到该变量时会到内存中重新读取该变量的值。</span><br><span class="line"></span><br><span class="line">Lock指令保证了缓存一致性原理</span><br></pre></td></tr></table></figure><p>9.Cas知道么？？如何实现的？？</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CAS（<span class="built_in">Compare</span> <span class="keyword">and </span><span class="keyword">Swap）即比较并替换，实现并发算法时常用到的一种技术,</span></span><br><span class="line"><span class="keyword">三个参数，比较是否相等，当内存值和预期值相等时，才会将第三个值更新，并返回true</span></span><br></pre></td></tr></table></figure><p>10.请用至少四种写法， 写一个单例模式呗？？</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 实例静态类</span><br><span class="line"><span class="number">2.</span> volitile修饰，sychnized修饰</span><br><span class="line"><span class="number">3.</span> 枚举使用（推荐）</span><br></pre></td></tr></table></figure><h3 id="jvm"><a class="markdownIt-Anchor" href="#jvm"></a> JVM</h3><p>1.请介绍一下jvm内存模型？？ 用过什么垃圾回收器？？ 都说说吧？？<br>2.线上发送频繁full gc如何处理？？ cpu使用率过高怎么办？？ 如何定位问题？？如何解决？？说一下解决思路和处理方法？？<br>3.知道字节码么？字节码都有哪些？Integer x =5 , int y = 5 , 比较x == y 都需要经过哪些步骤？？<br>4.讲讲类加载机制呗？？都有哪些类加载器？？这写类加载器都加载哪些文件？？手写一下类加载demo??<br>5.知道osgi么？？他是如何实现的？？<br>6.请问你做过哪些JVM优化？？使用什么方法？？达到什么效果？？<br>7.Class.forName(“java.lang.String”)和String.class.getClassLoader().loadClass(“java.lang.String”)有什么区别么？？</p><h3 id="spring"><a class="markdownIt-Anchor" href="#spring"></a> Spring</h3><p>1.spring都有哪些机制？？AOP底层如何实现的？？IOC呢？？<br>2.Cglib知道么？？他和jdk动态代理什么区别？？手写一个jdk动态代理吧？？</p><h3 id="分布式消息队列"><a class="markdownIt-Anchor" href="#分布式消息队列"></a> 分布式消息队列</h3><p>1.为什么是用消息队列？？消息队列有什么优点和缺点？？<br>2.如何保证消息队列的高可用性？？如何保证消息不被重复消费？？<br>3.Kafka， activemq , rabbitmq, rocketmq 都有什么优缺点？？<br>4.如果让你写一个消息队列， 该如何进行架构设计？？说一下你的思路</p><h3 id="分布式搜索引擎"><a class="markdownIt-Anchor" href="#分布式搜索引擎"></a> 分布式搜索引擎</h3><p>1.Es的工作过程实现是如何的？？ 如何实现分布式的？？<br>2.Es在数据量很大的情况下（数十亿级别）如何提高查询效率？？<br>3.Es的查询是一个怎么的工作过程？？底层lucence介绍一下？？倒排索引知道么？？Es和mongdb什么区别啊？？都在什么场景下使用啊？？</p><h3 id="高并发高可用架构设计"><a class="markdownIt-Anchor" href="#高并发高可用架构设计"></a> 高并发高可用架构设计</h3><p>1.如何设计一个高并发高可用系统？？<br>2.如何限流？？工程中怎么做的？？说一下具体实现？？<br>3.缓存如何使用的？？缓存使用不当会造成什么后果？？<br>4.如何熔断啊？？熔断框架都有哪些？？具体实现原理知道吗？？<br>5.如何降级？？如何进行系统拆分？？如何数据库拆分？？</p><h3 id="通信协议"><a class="markdownIt-Anchor" href="#通信协议"></a> 通信协议</h3><p>1.说一下TCP/IP四层？？<br>2.http的工作流程？？http1.0, http1.1 , http2.0 具体哪些区别？？<br>3.Tcp三次握手， 四层分手的工作流程??画一下流程图？？为什么不是四次五次或者二次啊？？<br>4.画一下https的工作原理？？具体如何实现的，如何防止被抓包啊？？</p><h3 id="算法"><a class="markdownIt-Anchor" href="#算法"></a> 算法</h3><p>1.比较简单， 我一个文件， 有45亿个阿拉伯数字， 如何进行去重啊？？如何找出最大的那个数啊？？</p><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><p>1.二叉树和红黑数等？？</p><hr><h3 id="java集合相关"><a class="markdownIt-Anchor" href="#java集合相关"></a> java集合相关</h3><p>请简要描述一下J2EE应用中的class loader的层次结构？<br>java1.7 和1.8中，hashmap的区别<br>mybatis一级缓存，二级缓存，缓存策略<br>osi七层网络模型，五层网络模型，每次层分别有哪些协议<br>死锁产生的条件， 以及如何避免死锁，银行家算法，产生死锁后如何解决<br>如何判断链表有环<br>虚拟机类加载机制，双亲委派模型，以及为什么要实现双亲委派模型<br>虚拟机调优参数<br>拆箱装箱的原理<br>JVM垃圾回收算法<br>CMS G1<br>hashset和hashmap的区别，haspmap的底层实现put操作，扩容机制，currenthashmap如何解决线程安全,1.7版本以及1.8版本的不同md5加密的原理<br>有多少种方法可以让线程阻塞，能说多少说多少<br>synchronized和reetrantlock锁<br>AQS同步器框架，countdowmlatch，cyclebarrier，semaphore，读写锁</p><h3 id="阿里内推java二面题目"><a class="markdownIt-Anchor" href="#阿里内推java二面题目"></a> 阿里内推Java二面题目</h3><p>B-Tree索引，myisam和innodb中索引的区别<br>BIO和NIO的应用场景<br>讲讲threadlocal<br>数据库隔离级别，每层级别分别用什么方法实现，三级封锁协议,共享锁排它锁，mvcc多版本并发控制协议，间隙锁<br>数据库索引？B+树？为什么要建索引？什么样的字段需要建索引，建索引的时候一般考虑什么？索引会不会使插入、删除作效率变低，怎么解决？<br>数据库表怎么设计的？数据库范式？设计的过程中需要注意什么？<br>共享锁与非共享锁、一个事务锁住了一条数据，另一个事务能查吗？<br>Spring bean的生命周期？默认创建的模式是什么？不想单例怎么办？</p><h3 id="阿里内推java三面题目"><a class="markdownIt-Anchor" href="#阿里内推java三面题目"></a> 阿里内推Java三面题目</h3><p>高并发时怎么限流<br>线程池的拒接任务策略<br>springboot的启动流程<br>集群、负载均衡、分布式、数据一致性的区别与关系<br>数据库如果让你来垂直和水平拆分，谁先拆分，拆分的原则有哪些(单表数据量多大拆)<br>最后谈谈Redis、Kafka、 Dubbo，各自的设计原理和应用场景</p><hr><p>6，唤醒一个阻塞的线程<br>如因为Sleep，wait，join等阻塞，可以使用interrupted exception异常唤醒。</p><p>8，redis使用单线程模型，数据顺序提交，redis支持主从模式，mencache只支持一致性hash做分布式；redis支持数据落地，rdb定时快照和aof实时记录操作命令的日志备份，memcache不支持；redis数据类型丰富，有string，hash，set，list， sort set，而memcache只支持简单数据类型；memcache使用cas乐观锁做一致性。</p><p>9，Class.forName()将类加载到JVM，还会对类解释，执行static块，而ClassLoader也加载到JVM，但是不会执行static块，并且只有调用了new Instance方法才会调用构造函数。</p><p>10，java反射机制。<br>可以在运行时判断一个对象所属的类，构造一个类的对象，判断类具有的成员变量和方法，调用1个对象的方法。4个关键的类：Class，Constructor，Field，Method。    getConstructor获得构造函数/getDeclardConstructor； getField/getFields/getDeclardFields获得类所生命的所有字段；getMethod/getMethods/getDeclardMethod获得类声明的所有方法，正常方法是一个类创建对象，而反射是1个对象找到1个类。</p><p>11，Object类中的方法：clone()，但是使用该方法必须实现Java.lang.Cloneable接口，equal()方法判断引用是否一致，指向同一对象，即相等于==，只有覆写了equals()方法之后，才可以说不同。hashcode()，对象的地址， toString()， finalize()。</p><p>12，序列化和反序列化<br>序列化和反序列化即对象和字节序列间的转化，进程间传送文本图片音频等以二进制传送。JDK中ObjectOuputStream和ObjectInputStream为输出输入流，只有实现SeriaLizable/Externalizable接口的类才能被序列化。如Person对象传递给内存流使用DataConstractJsonSeralizer， MemoryStream stream = new MemoryStream(); DataConstractJsonSeralizer SER = new DataConstractJsonSeralizer(typeof(person));  ser.writeObjectStream(stream, person);显示json输出，StramReader sr = new StreamReader(stream1); sr.ReadToEnd()。</p><p>13，讲讲分布式唯一ID。<br>确定ID存储用64位，1个64位二进制1是这样的00000000…1100…0101，切割64位，某段二进制表示成1个约束条件，前41位为毫秒时间，后紧接9位为IP，IP之后为自增的二进制，记录当前面位数相同情况下是第几个id，如现在有10台机器，这个id生成器生成id极限是同台机器1ms内生成2的14次方个ID。</p><p>分布式唯一ID = 时间戳 &lt;&lt; 41位， int类型服务器编号 &lt;&lt; 10，序列自增sequence。每个时间戳内只能生成固定数量如（10万）个自增号，达到最大值则同步等待下个时间戳，自增从0开始。将毫秒数放在最高位，保证生成的ID是趋势递增的，每个业务线、每个机房、每个机器生成的ID都是不同的。如39bit毫秒数|4bit业务线|2bit机房|预留|7bit序列号。高位取2016年1月1日1到现在的毫秒数，系统运行10年，至少需要10年x365天x24小时x3600秒x1000毫秒=320x10~9，差不多39bit给毫秒数，每秒单机高峰并发小于100，差不多7bit给每毫秒的自增号，5年内机房小于100台机器，预留2bit给机房，每个机房小于100台机器，预留7bit给每个机房，业务线小于10个，预留4bit给业务线标识。</p><p>64bit分布式ID（42bit毫秒+5bit机器ID+12位自增）等</p><p>生成分布式ID的方式：A，2个自增表，步长相互隔开   B，时间的毫秒或者纳秒  C，UUID         D，64位约束条件（如上）</p><p>14，NIO和IO的区别</p><p>第一点，NIO少了1次从内核空间到用户空间的拷贝。</p><p>ByteBuffer.allocateDirect()分配的内存使用的是本机内存而不是Java堆上的内存，和网络或者磁盘交互都在操作系统的内核空间中发生。allocateDirect()的区别在于这块内存不由java堆管理, 但仍然在同一用户进程内。</p><p>第二点，NIO以块处理数据，IO以流处理数据</p><p>第三点，非阻塞，NIO1个线程可以管理多个输入输出通道</p><p>15，内存泄漏</p><p>未对作废数据内存单元置为null，尽早释放无用对象的引用，使用临时变量时，让引用变量在推出活动域后自动设置为null，暗示垃圾收集器收集；程序避免用String拼接，用StringBuffer，因为每个String会占用内存一块区域；尽量少用静态变量（全局不会回收）；不要集中创建对象尤其大对象，可以使用流操作；尽量使用对象池，不再循环中创建对象，优化配置；创建对象到单例getInstance中，对象无法回收被单例引用；服务器session时间设置过长也会引起内存泄漏。</p><p>16，对象克隆和实现方式</p><p>克隆的对象可能包含一些已经修改过的属性，而new1个对象属性都还是初始化时候的值，被复制克隆的类要实现Clonable接口，覆盖clone()方法，访问修饰符为public，方法中调用super.clone()得到所需要的复制方法，类中的属性类也需要实现Clonable接口，覆写clone()方法，并在super中也调用子属性类的clone()复制，才可以实现深拷贝。</p><p>或者写到流中序列化的方式来实现，不必考虑引用类型中还包含引用类型，直接用序列化来实现对象的深复制拷贝，即将对象写到流，再从流中读出来，需要实现seriazation接口。</p><p>17，redis内存数据上升到一定大小会执行数据淘汰策略，redis提供了6种数据淘汰策略。</p><p>LRU：从已设置过期时间的数据集合中挑选最近最少使用的数据淘汰</p><p>random：从已设置过期时间的数据中挑选任意数据淘汰</p><p>ttl：从已设置过期时间的数据集合中挑选将要过期的数据淘汰。</p><p>notenvision：禁止驱逐数据</p><p>如mysql中有2千万数据，redis只存储20万的热门数据。LRU或者TTL都满足热点数据读取较多，不太可能超时特点。</p><p>redis特点：速度块，O(1)，丰富的数据类型，支持事物原子性，可用于缓存，比memecache速度块，可以持久化数据。</p><p>常见问题和解决：Master最好不做持久化如RDB快照和AOF日志文件；如果数据比较重要，某分slave开启AOF备份数据，策略为每秒1次，为了主从复制速度及稳定，MS主从在同一局域网内；主从复制不要用图状结构，用单向链表更为稳定 M-S-S-S-S。。。。；redis过期采用懒汉+定期，懒汉即get/set时候检查key是否过期，过期则删除key，定期遍历每个DB，检查制定个数个key；结合服务器性能调节并发情况。</p><p>过期淘汰，数据写入redis会附带1个有效时间，这个有效时间内该数据被认为是正确的并不关心真实情况，例如对支付等业务采用版本号实现，redis中每一份数据都维持1个版本号，DB中也维持1份，只有当redis的与DB中的版本一致时，才会认为redis为有效的，不过仍然每次都要访问DB，只需要查询version版本字段即可。</p><p>18，异步化，生产接口每秒钟10万并发，消费者用异步慢慢消费。缓存模式空间换时间，把1两亿的数据名单打到缓存。服务降级，把不重要的任务放弃；静态资源离线包下载机制，在wify下会主动提前把静态下载前端层保护可请将用户请求延长，点击后主动给它随机等待2s的时间/2分钟之内不能请求；后端做部分接口的开关，设置超短耗时时间，原来只用5ms的只给20ms。</p><p>系统一段时间内会自动重试，重试多次后就认为是失败了，检查支付接口返回该订单的钱，支付操作如果回复错误则回滚扣库存的事务，没返回则会记录进行中pendding状态，结束整个过程，等通知失败/成功，AB系统之间会出现死循环补偿，如B退单不成功，一般就是记录错误日志了。超时每隔一段时间去定时回调服务定时回滚，一定次数还是超时则提示用户联系客服，订单库存可以不会滚，记录状态，如果一直调用支付不成功，则让用户自己去处理联系客服，可以不回滚用户的数据，金额扣了才算真正完成，是一种简单粗暴的做法。</p><p>公共配置抽象成存储到zookeeper配置中心或者redis等，DB也存储一份，各应用监听ZK的配置变化，可以建一个配置web管理页面。</p><p>19，dubbo用ProxyFactoty代理工厂将HelloServiceImpl封装成1个Inoke执行，即ProxyFactory.getInvoke(ref, (Class)接口，注册URL，解码参数)，并将Invoke导出成1个Exporter，包括去注册中心ZK注册服务。Invoke有本地执行的Invoke，远程通信执行的Invoke。</p><p>20，每次扣减库存时加上1个请求流水编号，上层请求扣减库存没拿到结果的话，重新查询1次做重试操作，量不大都是加锁处理。减少锁的时间，牺牲幂等性，扣减为DB下地操作，查询扣减和设置合成1步，中间没有网络请求。利用缓存，通过写log记录操作，异步合并日志及更新，重启时cache失效，读log恢复，避免重复提交，写操作不建议重试快速失败。多个商品同时增减库存，可使用订单号做幂等处理，应用层对单个商品减库存，操作排队，商品消息ID路由在1个应用server处理，读本地缓存，失效再redis，DB采用乐观锁，组提交，1次减库存多个订单的购买量。可将同一个key下库存m分为n组k1…kn，每组数为m/n，扣减依次在各组扣减，减少并发冲突。队列装满后关闭队列进入，然后用户轮训自己是否抢到了异步ajax，用户资源队列固定长度。2个队列，1个销售的资源队列放入redis，有另外1个队列用来装抢购的会员的uid。</p><p>红包状态正常，并成功将状态改为“已领取”，且消息发送成功，用户端开始消费该消息，如果消费失败/超时，用MQ做重试做幂等，直到成功，每条消息有唯一编号且保证消息处理成功与去重表的日志同时出现。</p><p>热点将hot data拆分，分在不同库和不同表，分散热点Data，减轻DB并发更新热点带来RT升高和应用连接超时。SQL在mysql层加以限制，SQL超时/thradrunning到1定值则拒绝SQL执行，一定时间异步将结果写入DB，nginx对IP做限制，可能误杀。</p><p>21，SpringAOP，XML配置<a href="aop:config" target="_blank" rel="noopener">aop:config</a>，切面<a href="aop:aspect" target="_blank" rel="noopener">aop:aspect</a>切点<a href="aop:pointcut" target="_blank" rel="noopener">aop:pointcut</a>，连接切点和通知方法<a href="aop:before" target="_blank" rel="noopener">aop:before</a>和<a href="aop:after" target="_blank" rel="noopener">aop:after</a>等，注解可以直接使用@before执行方法@after ，@before(“pointcut()”) ，@after(“pointcut”)， @Aroud(&quot;excutete())，@AfteReturning，@AfterThrowing，可作日志事务，权限等待，AOP即通过把具体的类创建对应的 代理类，从代理类来对具体进行操作。</p><p>目标实现了接口，默认采用JDK实现AOP，也可以强制使用CGlib来实现AOP，目标没有实现接口的话，则必须采用CGlib，Spring自动在JDK和CGlib切换。如果要求spring强制使用CGlib实现AOP，则可以配置，添加Cglib库。。。jar， Spring配置文件中加入&lt;aop:aspecj-autoproxy proxy-target-Class=true&gt;</p><p>22，MyISM采用表级锁，对Myism表读不会阻塞读，会阻塞同表写，对Myism写则会阻塞读和写，即一个线程获得1个表的写锁后，只有持有锁的线程可以对表更新操作，其他线程的读和写都会等待。</p><p>InnoDB，采用行级锁，支持事务，例如只对a列加索引，如果update …where a=1 and b=2其实也会锁整个表， select 使用共享锁，update insert delete采用排它锁，commit会把锁取消，当然select by id for update也可以制定排它锁。</p><p>23，实时队列采用双队列模式，生产者将行为记录写入Queue1，worker服务从Queue1消费新鲜数据，如果异常则写入Queue2（主要保存异常数据），RetryWorker会监听Queue2，消费异常数据，如果还未处理成功按照一定的策略等待或者将异常数据再写入Queue2，如果数据发生积压可以调整worker的消费游标，从最新数据重新开始消费，保证了最新data得到处理，中间未处理的一段则可以启动backupWorker指定起止游标在消费完指定区间的数据后，backupWorker会自动停止。</p><p>DB降级开关后，可直接写入redis（storm），同时将数据写入一份到Retry队列，在开启DB降级开关后消费Retry队列中的数据，从而把数据写入到mysql中，达到最终一致性。MYSQL切分为分片为2的N次方，例如原来分为两个库d0和d1均放在s0服务器上，s0同时有备机s1，扩容只要几步骤：确保s0到s1服务器同步顺利，没有明显延迟；s0暂时关闭读写权限；确保s1已经完全同步到s0更新；s1开放读写权限；d1的dns由s0切换到s1；s0开放读写权限。</p><p>24，DB的特性和隔离级别</p><p>4大特性：原子性，一致性，分离性，持久性</p><p>隔离级别：</p><p>读提交：写事务禁止读</p><p>读未提交：写事务允许读</p><p>可重复读：写事务禁止读事务，读禁止写</p><p>序列化：全部禁止</p><p>详细说明：读提交1个事务开始写则全部禁止其他事务访问该行。读未提交1个事务开始写则不允许其他事务同时写，但可以读。可重复读 读事务会禁止写事务，写事物则禁止其他任何事务。序列化性能最低，全部禁止，串行执行。 MYSQL默认的是可重复读。</p><p>25，帖子服务、元数据服务、帖子搜索服务，提供索引数据存储，tid和uid查询直接从帖子服务从元数据返回，其他检索查询有帖子搜索服务从索引数据检索并返回，帖子服务增删改查用MQ同步到帖子搜索服务，搜索服务修改索引的数据（索引树，倒排表），索引表t_mapping（tid，uid）。</p><p>300亿数据在全量索引库中，数百万一天内修改过的数据在一天库中，50万小时内修改过的数据在小时库中，在update请求时，只会操作最低级别的索引例如小时库。小时库，1小时合并一次，合并到天库，天库一天合并1次，合并到全量库中。</p><p>26，讲一下NIO和网络传输</p><p>NIO Reactor反应器模式，例如汽车是乘客访问的实体reactor，乘客上车后到售票员处Acceptor登记，之后乘客便可休息睡觉了，到达乘客目的地后，售票员Aceptor将其唤醒即可。持久TCP长链接每个client和server之间有存在一个持久连接，当CCU（用户并发数量）上升，阻塞server无法为每个连接运行1个线程，自己开发1个二进制协议，将message压缩至3-6倍，传输双向且消息频率高，假设server链接了2000个client，每个client平均每分钟传输1-10个message，1个messaged的大小为几百字节/几千字节，而server也要向client广播其他玩家的当前信息，需要高速处理消息的能力。Buffer，网络字节存放传输的地方，从channel中读写，从buffer作为中间存储格式，channel是网络连接与buffer间数据通道，像之前的socket的stream。</p><p>27，缓存击透</p><p>预加载；</p><p>加载DB时同步，其他则等待；</p><p>DB端做SQL合并，Queue合并排队处理；</p><p>部分缓存设置为永不过期；</p><p>先清除缓存，读取数据时候则等待500ms，500ms缓存应该已经加载完成；</p><p>采用双key缓存，A1为原始缓存，A2为拷贝缓存；</p><p>如果DB为空null则g给redis设置1个NFC空nei容。</p><p>28，Dubbo源码使用了哪些设计模式</p><p>A，工厂模式，ExtenstionLoader.getExtenstionLoader(Protocol.class).getAdaptiveExtenstion()</p><p>B，装饰器模式+责任链，以provider的调用链为例，具体调用链代码是在protocolFilterWrapper的buildInvokeChain完成的,将注解中含有group=provider的Filter实现，调用顺序为EchoFilter -&gt; ClassLoaderFilter -&gt; GenericFilter -&gt; ContextFilter -&gt; ExceptionFilter -&gt; TimeoutFilter -&gt; MonitorFilter -&gt; TraceFilter。装饰器模式和责任链混合使用，Echo是回声测试请求，ClassLoaderFilter则只是在其主功能上添加了功能。</p><p>C，观察者模式，provider启动时需要与注册中心交互，先注册自己的服务，再订阅自己的服务，订阅时采用了观察者模式，注册中心每5s定时检查是否有服务更新，有更新则向服务提供者发送1个notify消息后即可运行NotifyListener的notity方法，执行监听器方法。</p><p>D，动态代理模式。  扩展JDK的ExtensionLoaderdeAdaptive实现，根据调用阶段动态参数决定调用哪个类，生成代理类的代码是ExtensionLoader的createAdaptiveExtenstionClassLoader方法。</p><p>29，平衡二叉树，左右高度之差不超过1，Add/delete可能造成高度&gt;1，此时要旋转，维持平衡状态，避免二叉树退化为链表，让Add/Delete时间复杂度但控制在O(log2N)，旋转算法2个方法，1是求树的高度，2是求2个高度最大值，1个空树高度为-1，只有1个根节点的树的高度为0，以后每一层+1，平衡树任意节点最多有2个儿子，因此高度不平衡时，此节点的2棵子树高度差为2。例如单旋转，双旋转，插入等。</p><p>红黑树放弃完全平衡，追求大致平衡，保证每次插入最多要3次旋转就能平衡。</p><p>30，多线程同步锁</p><p>A，RentrantLock，可重入的互斥锁，可中断可限时，公平锁，必须在finally释放锁，而synchronize由JVM释放。可重入但是要重复退出，普通的lock()不能响应中断，lock.lockInterruptbly()可响应中断，可以限时tryLock()，超时返回false，不会永久等待构成死锁。</p><p>B，Confition条件变量，signal唤醒其中1个在等待的线程，signalall唤醒所有在等待的线程await()等待并释放锁，与lock结合使用。</p><p>C，semaphore信号量，多个线程比（额度=10）进入临界区，其他则阻塞在临界区外。</p><p>D，ReadWriteLock，读读不互斥，读写互斥，写写互斥。</p><p>E，CountDownLantch倒数计时器，countdown()和await()</p><p>F，CyCliBarrier</p><p>G，LockSupport，方法park和unpark</p><p>31，栈溢出的原因</p><p>是否递归的调用；大量循环；全局变量是否过多；数组，List，Map数据是否过大；用DDMS工具检查地方。</p><p>内存溢出的原因</p><p>过多使用了static；static最好只用int和string等基本类型；大量的递归或者死循环；大数据项的查询，如返回表的所有记录，应该采用分页查询。检查是否有数组、List、map中存放的是对象的引用而不是对象，这些引用会让对应对象不能被释放。</p><p>栈过大会导致内存占用过多，频繁页交换阻碍效率。</p><p>32，说一下http/2</p><p>Http/2采用二进制格式而不是文本</p><p>Http/2是完全多路复用的，而非有序并阻塞的。</p><p>Http/2使用报头压缩</p><p>Http/2让服务器可以将响应主动推送到客户端缓存中。</p><p>33，说一下内存泄露</p><p>A，HashMap,vector等容易（静态集合类）， 和应用程序生命周期一样，所引用的所有对象Object也不能释放。</p><p>B，当集合类里面的对象属性被修改后，再调用remove()不起作用，hashcode值发生了改变</p><p>C，其对象add监听器，但是往往释放对象时忘记去删除这些监听器</p><p>D，各种连接记得关闭</p><p>E，内部类的引用</p><p>F，调用其他模块，对象作用参数</p><p>G，单例模式，持有外部对象引用无法收回。</p><p>内存泄露例子</p><p>Vector<string> A = new Vector<string>();</string></string></p><p>for(int i = 0; i &lt; 100; i++){</p><p>Object o = new Object ();</p><p>A.add(o);</p><p>o = null;</p><p>}</p><p>…</p><p>内存溢出的例子</p><p>StringBuffer b = new StringBuffer ();</p><p>for(int i =0; i &lt; 100; i++){</p><p>for(int j =0; i &lt; 100; j++){</p><p>b.append(*);</p><p>}</p><p>}</p><p>34，SpirngMVC的生命周期 和 SpringBean的生命周期</p><p>SpirngMVC的生命周期 ：</p><p>A，DispatcherSerlvet（前端控制器）</p><p>B，-》 HandlerMapping（处理器映射器），根据xml注解查找对应的Hander -》 返回Handler</p><p>C，-》处理器适配器去执行Handler</p><p>D，-》Handler执行完成后给处理器适配器返回ModelAndView</p><p>E，-》前端控制器请求视图解析器去执行视图解析，根据逻辑视图名解析成真正的视图JSP，向前端控制器返回view</p><p>F，-》前端控制器进行视图渲染，将模型数据放到request-》返回给用户</p><p>SpringBean的生命周期：</p><p>Instance实例化-》设置属性值-》调用BeanNameAware的setBeanName方法-》调用BeanPostProsessor的预初始化方法-》调用InitializationBean的afterPropertiesSet()的方法-》调用定制的初始化方法callCustom的init-method-》调用BeanPostProsessor的后初始化方法-》Bean可以使用了 -》 容器关闭-》 调用DisposableBean的destroy方法-》调用定制的销毁方法CallCustom的destroy-method。</p><p>35，AQS，抽象队列同步器</p><p>AQS定义2种资源共享方式：独占与share共享</p><p>独占：只能有1个线程运行</p><p>share共享：多个线程可以同p执行如samphore/countdownlanch</p><p>AQS负责获取共享state的入队和/唤醒出队等，AQS在顶层已经实现好了，AQS有几种方法：acquire()是独占模式下线程共享资源的顶层入口，如获取到资源，线程直接返回，否则进入等待队列，直到获取到资源为止。tryAcquire()将线程加入等待队列的尾部，并标志为独占。acquireQueued()使线程在等待队列中获取资源，一直到获取资源后不返回，如果过程被中断也返回true，否则false。</p><p>线程在等待过程中被中断是不响应的，获取资源才补上中断。将线程添加到队列尾部用了CAS自旋（死循环直到成功），类似于AutomicInteger的CAS自旋volatile变量。</p><p>start-&gt;tryAcquire -&gt; 入队 -&gt; 找安全点 -&gt; park等待状态 -&gt; 当前节点成对头 -&gt; End</p><p>36，单例模式的7种写法</p><p>懒汉2种，枚举，饿汉2种，静态内部类，双重校验锁（推荐）。</p><p>37，lucence倒排索引</p><p>三个文件：字典文件，频率文件，位置文件。词典文件不仅保存有每个关键词，还保留了指向频率文件和位置文件的指针，通过指针可以找到该关键字的频率信息和位置信息。</p><p>field的概念，用于表达信息所在位置（如标题中，文章中，url中），在建索引中，该field信息也记录在词典文件中，每个关键词都有一个field信息(因为每个关键字一定属于一个或多个field)。</p><p>关键字是按字符顺序排列的（lucene没有使用B树结构），因此lucene可以用二元搜索算法快速定位关键词。</p><p>假设要查询单词 “live”，lucene先对词典二元查找、找到该词，通过指向频率文件的指针读出所有文章号，然后返回结果。词典通常非常小，因而，整个过程的时间是毫秒级的。</p><p>对词典文件中的关键词进行了压缩，关键词压缩为&lt;前缀长度，后缀&gt;，例如：当前词为“阿拉伯语”，上一个词为“阿拉伯”，那么“阿拉伯语”压缩为&lt;3，语&gt;。对数字的压缩，数字只保存与上一个值的差值。</p><p>38，ZooKeeper分布式高可用</p><p>ZooKeeper 运行期间，集群中至少有过半的机器保存了最新数据。集群超过半数的机器能够正常工作，集群就能够对外提供服务。</p><p>zookeeper可以选出N台机器作主机，它可以实现M:N的备份；keepalive只能选出1台机器作主机，所以keepalive只能实现M:1的备份。</p><p>通常有以下两种部署方案：双机房部署（一个稳定性更好、设备更可靠的机房，这个机房就是主要机房，而另外一个机房则更加廉价一些，例如，对于一个由 7 台机器组成的 ZooKeeper 集群，通常在主要机房中部署 4 台机器，剩下的 3 台机器部署到另外一个机房中）；三机房部署（无论哪个机房发生了故障，剩下两个机房的机器数量都超过半数。在三个机房中都部署若干个机器来组成一个 ZooKeeper 集群。假设机器总数为 N，各机房机器数：N1 = (N-1)/2 ，N2=1~(N-N1)/2 ，N3 = N - N1 - N2 ）。</p><p>水平扩容就是向集群中添加更多机器，Zookeeper2种方式（不完美），一种是集群整体重启，另外一种是逐台进行服务器的重启。</p><p>39，如何将数据分布在redis第几个库？</p><p>答：redis 本身支持16个数据库，通过 数据库id 设置，默认为0。<br>例如jedis客户端设置。一：JedisPool(org.apache.commons.pool.impl.GenericObjectPool.Config poolConfig, String host, int port, int timeout, String password, int database);<br>第一种通过指定构造函数database字段选择库，不设置则默认0库。二：jedis.select(index);调用jedis的select方法指定。</p><p>40，类加载器的双亲委派加载机制？</p><p>答：当一个类收到了类加载请求，他首先不会尝试自己去加载这个类，而是把这个请求委派给父类去完成，每一个层次类加载器都是如此，因此所有的加载请求都应该传送到启动类加载其中，只有当父类加载器反馈自己无法完成这个请求的时候（在它的加载路径下没有找到所需加载的Class），子类加载器才会尝试自己去加载。</p><p>41，kafka高性能的原因？</p><p>答：</p><p>A，Broker NIO异步消息处理，实现了IO线程与业务线程分离；</p><p>B，磁盘顺序写；</p><p>C， 零拷贝（跳过用户缓冲区的拷贝，建立一个磁盘空间和内存的直接映射，数据不再复制到用户态缓冲区）；</p><p>D，分区/分段（每次文件操作都是对一个小文件的操作，非常轻便，同时也增加了并行处理能力）；</p><p>F，批量发送 (可以指定缓存的消息达到某个量的时候就发出去，或者缓存了固定的时间后就发送出去，大大减少服务端的I/O次数)</p><p>E，数据压缩</p><p>42，幂等的处理方式？</p><p>答：一、查询与删除操作是天然幂等</p><p>二、唯一索引，防止新增脏数据</p><p>三、token机制，防止页面重复提交</p><p>四、悲观锁  for update</p><p>五、乐观锁（通过版本号/时间戳实现， 通过条件限制where avai_amount-#subAmount# &gt;= 0）</p><p>六、分布式锁</p><p>七、状态机幂等（如果状态机已经处于下一个状态，这时候来了一个上一个状态的变更，理论上是不能够变更的，这样的话，保证了有限状态机的幂等。）</p><p>八、select + insert（并发不高的后台系统，或者一些任务JOB，为了支持幂等，支持重复执行）</p><p>43，HTTPS工作流程？<br>a、客户端发送自己支持的加密规则给服务器，代表告诉服务器要进行连接了<br>b、服务器从中选出一套加密算法和hash算法以及自己的身份信息(地址等)以证书的形式发送给浏览器，证书中包含服务器信息，加密公钥，证书的办法机构<br>c、客户端收到网站的证书之后要做下面的事情：<br>c1、验证证书的合法性<br>c2、如果验证通过证书，浏览器会生成一串随机数作为密钥K，并用证书中的公钥进行加密<br>c3、用约定好的hash算法计算握手消息，然后用生成的密钥K进行加密，然后一起发送给服务器<br>d、服务器接收到客户端传送来的信息，要求下面的事情：<br>d1、用私钥解析出密码，用密码解析握手消息，验证hash值是否和浏览器发来的一致<br>d2、使用密钥加密消息，回送<br>如果计算法hash值一致，握手成功</p><p>44，RabbitMQ消息堆积怎么处理？</p><p>答：</p><p>增加消费者的处理能力(例如优化代码)，或减少发布频率<br>单纯升级硬件不是办法，只能起到一时的作用<br>考虑使用队列最大长度限制，RabbitMQ 3.1支持<br>给消息设置年龄，超时就丢弃<br>默认情况下，rabbitmq消费者为单线程串行消费，设置并发消费两个关键属性concurrentConsumers和prefetchCount，concurrentConsumers设置的是对每个listener在初始化的时候设置的并发消费者的个数，prefetchCount是每次一次性从broker里面取的待消费的消息的个数<br>建立新的queue，消费者同时订阅新旧queue<br>生产者端缓存数据，在mq被消费完后再发送到mq<br>打破发送循环条件，设置合适的qos值，当qos值被用光，而新的ack没有被mq接收时，就可以跳出发送循环，去接收新的消息；消费者主动block接收进程，消费者感受到接收消息过快时主动block，利用block和unblock方法调节接收速率，当接收线程被block时，跳出发送循环。<br>新建一个topic，partition是原来的10倍；然后写一个临时的分发数据的consumer程序，这个程序部署上去消费积压的数据，消费之后不做耗时的处理，直接均匀轮询写入临时建立好的10倍数量的queue；接着临时征用10倍的机器来部署consumer，每一批consumer消费一个临时queue的数据；等快速消费完积压数据之后，得恢复原先部署架构，重新用原先的consumer机器来消费消息；<br>45，RabbitMQ的消息丢失解决方案？</p><p>答：</p><p>消息持久化：Exchange 设置持久化：durable:true；Queue 设置持久化；Message持久化发送。<br>ACK确认机制：消息发送确认；消息接收确认。<br>46，负载均衡算法？</p><p>常见6种负载均衡算法：轮询，随机，源地址哈希，加权轮询，加权随机，最小连接数。</p><p>nginx5种负载均衡算法：轮询，weight，ip_hash，fair（响应时间），url_hash</p><p>dubbo负载均衡算法：随机，轮询，最少活跃调用数，一致性Hash</p><p>47，JVM内存区域划分？</p><p>答：</p><p>堆：Java中的堆是用来存储对象本身的以及数组（当然，数组引用是存放在Java栈中的），是Java垃圾收集器管理的主要区域。堆是被所有线程共享的，在JVM中只有一个堆。<br>虚拟机栈：虚拟机栈中存放的是一个个的栈帧，每个栈帧对应一个被调用的方法，在栈帧中包括局部变量表、操作数栈、指向当前方法所属的类的运行时常量池的引用、方法返回地址和一些额外的附加信息。当线程执行一个方法时，就会随之创建一个对应的栈帧，并将建立的栈帧压栈。当方法执行完毕之后，便会将栈帧出栈。<br>本地方法栈：本地方法栈则是为执行本地方法（Native Method）服务的，在HotSopt虚拟机中直接就把本地方法栈和Java栈合二为一<br>方法区：方法区与堆一样，是被线程共享的区域。方法区存储了类的信息（包括类的名称、方法信息、字段信息）、静态变量、常量以及编译器编译后的代码等。在方法区中有一个非常重要的部分就是运行时常量池，它是每一个类或接口的常量池的运行时表示形式，在类和接口被加载到JVM后，对应的运行时常量池就被创建出来。当然并非Class文件常量池中的内容才能进入运行时常量池，在运行期间也可将新的常量放入运行时常量池中，比如String的intern方法。当方法区无法满足内存分配需求时，则抛出OutOfMemoryError异常。在HotSpot虚拟机中，用永久代来实现方法区，将GC分代收集扩展至方法区，但是这样容易遇到内存溢出的问题。JDK1.7中，已经把放在永久代的字符串常量池移到堆中。JDK1.8撤销永久代，引入元空间。<br>程序计数器（线程私有）：是当前线程所执行的字节码的行号指示器，每条线程都要有一个独立的程序计数器，这类内存也称为“线程私有”的内存。正在执行java方法的话，计数器记录的是虚拟机字节码指令的地址（当前指令的地址）。如果还是Native方法，则为空。<br>直接内存：在JDK1.4中新加入的NOI类，引入了一种基于通道与缓冲区的I/O方式，它可以使用Native函数直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用进行操作。<br>48，jvm YGC和FGC发生的具体场景？</p><p>答：</p><p>正在处理的实现事务功能，下次自动回滚。</p><p>队列实现持久化储存，下次启动自动载入。</p><p>添加标志位，未处理 0，处理中 1，已处理 2。每次启动的时候，把所有状态为 1 的，置为 0。</p><p>关键性的应用就给电脑配个 UPS。</p><p>YGC ：对新生代堆进行gc。频率比较高，因为大部分对象的存活寿命较短，在新生代里被回收。性能耗费较小。<br>FGC ：全堆范围的gc。默认堆空间使用到达80%(可调整)的时候会触发fgc。以我们生产环境为例，一般比较少会触发fgc，有时10天或一周左右会有一次。</p><p>YGC发生场景：edn空间不足<br>FGC发生场景：old空间不足，perm空间不足，调用方法System.gc() ，ygc时的悲观策略, dump live的内存信息时(jmap –dump:live)</p><p>49，一个线程池正在处理服务如果忽然断电该怎么办？</p><p>答：</p><p>队列实现持久化储存，下次启动自动载入。<br>但是实际需要看情况，大体思路是这样。<br>添加标志位，未处理 0，处理中 1，已处理 2。每次启动的时候，把所有状态为 1 的，置为 0。或者定时器处理<br>关键性的应用就给电脑配个 UPS。</p><p>50，SpringBoot的优点？</p><p>答：</p><p>快速构建项目，极大的提高了开发、部署效率。<br>对主流开发框架的无配置集成。<br>项目可独立运行，无须外部依赖Servlet容器。<br>提供运行时的应用监控。</p><p>51，DoS，DDoS，DRDoS攻击分别是什么？</p><p>答：DoS是Denial of Service的简写就是拒绝服务。</p><p>DDoS就是Distributed Denial of Service的简写就是分布式拒绝服务。</p><p>DRDoS就是Distributed Reflection Denial of Service的简写,分布反射式拒绝服务。</p><p>DoS、DDos以及DRDoS攻击手段和防范措施<br>52，服务限流的方式？</p><p>答：</p><p>漏桶：水(请求)先进入到漏桶里,漏桶以一定的速度出水(接口有响应速率),当水流入速度过大会直接溢出(访问频率超过接口响应速率),然后就拒绝请求。<br>令牌桶算法：系统会按恒定1/QPS时间间隔(如果QPS=100,则间隔是10ms)往桶里加入Token，如果桶已经满了就不再加了.新请求来临时,会各自拿走一个Token,如果没有Token就拒绝服务。<br>基于redis实现的限流：假设每分钟访问次数不能超过10次，在Redis中创建一个键，过期60秒，对此服务接口的访问就把键值加1，在60秒内增加到10的时候，禁止访问服务接口。<br>计数器，滑动窗口<br>53，Quartz实现原理?</p><p>答：A、scheduler是一个计划调度器容器（总部），容器里面可以盛放众多的JobDetail和trigger，当容器启动后，里面的每个JobDetail都会根据trigger按部就班自动去执行。<br>B、JobDetail是一个可执行的工作，它本身可能是有状态的。<br>C、Trigger代表一个调度参数的配置，什么时候去调。<br>D、当JobDetail和Trigger在scheduler容器上注册后，形成了装配好的作业（JobDetail和Trigger所组成的一对儿），就可以伴随容器启动而调度执行了。<br>E、scheduler是个容器，容器中有一个线程池，用来并行调度执行每个作业，这样可以提高容器效率。</p><p>54，数据库的锁？</p><p>答：行锁（共享锁和排他锁），表锁，页级锁，页级锁，意向锁，读锁，写锁，悲观锁，乐观锁等</p><p>55，简述ThreadPoolExecutor内部工作原理？</p><p>答：</p><p>先查看当前运行状态，如果不是RUNNING 状态会拒绝执行任务，如果是RUNNING状态，就会查看当前运行的线程数量，如果小于核心线程数，会创建新的线程来执行这个任务，如果不小于核心线程，会将这个任务放到阻塞队列去等代执行，直到上一个任务执行完再来执行这个任务。如果失败会创建一个非核心线程来执行这个任务如果当前线程数大于最大线程数，会直接拒绝该任务。</p><p>56，聚集索引和非聚集索引的区别？</p><p>答：</p><p>聚集索引：<br>索引中键值的逻辑顺序决定了表中相应行的物理顺序（索引中的数据物理存放地址和索引的顺序是一致的），可以这么理解：只要是索引是连续的，那么数据在存储介质上的存储位置也是连续的。<br>比方说：想要到字典上查找一个字，我们可以根据字典前面的拼音找到该字，注意拼音的排列时有顺序的。<br>聚集索引就像我们根据拼音的顺序查字典一样，可以大大的提高效率。在经常搜索一定范围的值时，通过索引找到第一条数据，根据物理地址连续存储的特点，然后检索相邻的数据，直到到达条件截至项。<br>非聚集索引<br>索引的逻辑顺序与磁盘上的物理存储顺序不同。非聚集索引的键值在逻辑上也是连续的，但是表中的数据在存储介质上的物理顺序是不一致的，即记录的逻辑顺序和实际存储的物理顺序没有任何联系。索引的记录节点有一个数据指针指向真正的数据存储位置。<br>总结如下：<br>如果一个主键被定义了，那么这个主键就是作为聚集索引<br>如果没有主键被定义，那么该表的第一个唯一非空索引被作为聚集索引<br>如果没有主键也没有合适的唯一索引，那么innodb内部会生成一个隐藏的主键作为聚集索引，这个隐藏的主键是一个6个字节的列，改列的值会随着数据的插入自增。<br>InnoDB引擎会为每张表都加一个聚集索引，而聚集索引指向的的数据又是以物理磁盘顺序来存储的，自增的主键会把数据自动向后插入，避免了插入过程中的聚集索引排序问题。如果对聚集索引进行排序，这会带来磁盘IO性能损耗是非常大的。</p><p>57，java并发包下有哪些类？</p><p>答：ConcurrentHashMap，ConcurrentSkipListMap，ConcurrentNavigableMap</p><p>CopyOnWriteArrayList</p><p>BlockingQueue，BlockingDeque （ArrayBlockingQueue，LinkedBlockingDeque，LinkedBlockingQueue，DelayQueue，PriorityBlockingQueue，SynchronousQueue）</p><p>ConcurrentLinkedDeque，ConcurrentLinkedQueue，TransferQueue，LinkedTransferQueue</p><p>CopyOnWriteArraySet，ConcurrentSkipListSet</p><p>CyclicBarrier，CountDownLatch</p><p>Lock（ReetrantLock，ReetrantReadWriteLock）</p><p>Atomic包</p><p>58，threadlocal为什么会出现oom？</p><p>答：ThreadLocal里面使用了一个存在弱引用的map, map的类型是ThreadLocal.ThreadLocalMap. Map中的key为一个threadlocal实例。这个Map的确使用了弱引用，不过弱引用只是针对key。每个key都弱引用指向threadlocal。 当把threadlocal实例置为null以后，没有任何强引用指向threadlocal实例，所以threadlocal将会被gc回收。<br>但是，我们的value却不能回收，而这块value永远不会被访问到了，所以存在着内存泄露。因为存在一条从current thread连接过来的强引用。只有当前thread结束以后，current thread就不会存在栈中，强引用断开，Current Thread、Map value将全部被GC回收。最好的做法是将调用threadlocal的remove方法。</p><p>在ThreadLocal的get(),set(),remove()的时候都会清除线程ThreadLocalMap里所有key为null的value，但是这些被动的预防措施并不能保证不会内存泄漏：</p><p>（1）使用static的ThreadLocal，延长了ThreadLocal的生命周期，可能导致内存泄漏。<br>（2）分配使用了ThreadLocal又不再调用get(),set(),remove()方法，那么就会导致内存泄漏，因为这块内存一直存在。</p><p>59，mysql数据库锁表怎么解决？</p><p>答：查询锁表信息<br>当前运行的所有事务<br>select * from information_schema.innodb_trx<br>当前出现的锁<br>select * from information_schema.innodb_locks<br>锁等待的对应关系<br>select * from information_schema.innodb_lock_waits</p><p>通过 select * from information_schema.innodb_trx 查询 trx_mysql_thread_id然后执行 kill 线程ID<br>KILL   8807;//后面的数字即时进程的ID</p><p>60，java 判断对象是否是某个类的类型方法？</p><p>instanceof 运算符是用来在运行时指出对象是否是特定类的一个实例。instanceof通过返回一个布尔值来指出，这个对象是否是这个特定类或者是它的子类的一个实例。<br>getClass判断，如o.getClass().equals(ClassA.class)。（使用instanceof来判断一个对象是不是属于某个类，但是有时候这个类是继承于一个父类的，所以，不能严格判断出是不是自己的类，而不是自己的父类。）<br>61，Spring+MyBatis实现读写分离简述？</p><p>答：</p><p>方案一：通过MyBatis配置文件创建读写分离两个DataSource，每个SqlSessionFactoryBean对象的mapperLocations属性制定两个读写数据源的配置文件。将所有读的操作配置在读文件中，所有写的操作配置在写文件中。<br>方案二：通过Spring AOP在业务层实现读写分离，在DAO层调用前定义切面，利用Spring的AbstractRoutingDataSource解决多数据源的问题，实现动态选择数据源<br>方案三：通过Mybatis的Plugin在业务层实现数据库读写分离，在MyBatis创建Statement对象前通过拦截器选择真正的数据源，在拦截器中根据方法名称不同（select、update、insert、delete）选择数据源。<br>方案四：通过spring的AbstractRoutingDataSource和mybatis Plugin拦截器实现非常友好的读写分离，原有代码不需要任何改变。推荐第四种方案<br>62，红黑树的特点？</p><p>答：（1）每个节点或者是黑色，或者是红色。<br>（2）根节点是黑色。<br>（3）每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]<br>（4）如果一个节点是红色的，则它的子节点必须是黑色的。<br>（5）从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。[这里指到叶子节点的路径]</p><p>63，kafka消息会不会丢失？</p><p>答：Kafka消息发送分同步(sync)、异步(async)两种方式。默认是使用同步方式，可通过producer.type属性进行配置；Kafka保证消息被安全生产，有三个选项分别是0,1,-1。<br>通过request.required.acks属性进行配置：<br>0代表：不进行消息接收是否成功的确认(默认值)；<br>1代表：当Leader副本接收成功后，返回接收成功确认信息；<br>-1代表：当Leader和Follower副本都接收成功后，返回接收成功确认信息；</p><p>网络异常<br>acks设置为0时，不和Kafka集群进行消息接受确认，当网络发生异常等情况时，存在消息丢失的可能；<br>客户端异常<br>异步发送时，消息并没有直接发送至Kafka集群，而是在Client端按一定规则缓存并批量发送。在这期间，如果客户端发生死机等情况，都会导致消息的丢失；<br>缓冲区满了<br>异步发送时，Client端缓存的消息超出了缓冲池的大小，也存在消息丢失的可能；<br>Leader副本异常<br>acks设置为1时，Leader副本接收成功，Kafka集群就返回成功确认信息，而Follower副本可能还在同步。这时Leader副本突然出现异常，新Leader副本(原Follower副本)未能和其保持一致，就会出现消息丢失的情况；<br>以上就是消息丢失的几种情况，在日常应用中，我们需要结合自身的应用场景来选择不同的配置。<br>想要更高的吞吐量就设置：异步、ack=0；想要不丢失消息数据就选：同步、ack=-1策略</p><p>64，kafka的leader副本选举？</p><p>答：如果某个分区patition的Leader挂了,那么其它跟随者将会进行选举产生一个新的leader,之后所有的读写就会转移到这个新的Leader上,在kafka中,其不是采用常见的多数选举的方式进行副本的Leader选举,而是会在Zookeeper上针对每个Topic维护一个称为ISR（in-sync replica，已同步的副本）的集合,显然还有一些副本没有来得及同步。只有这个ISR列表里面的才有资格成为leader(先使用ISR里面的第一个，如果不行依次类推，因为ISR里面的是同步副本，消息是最完整且各个节点都是一样的)。<br>  通过ISR,kafka需要的冗余度较低，可以容忍的失败数比较高。假设某个topic有f+1个副本，kafka可以容忍f个不可用,当然,如果全部ISR里面的副本都不可用,也可以选择其他可用的副本,只是存在数据的不一致。</p><p>65，kafka消息的检索？</p><p>答：其实很简单主要是用二分查找算法,比如我们要查找一条offest=10000的文件,kafka首先会在对应分区下的log文件里采用二分查看定位到某个记录该offest<br>=10000这条消息的log,然后从相应的index文件定位其偏移量,然后拿着偏移量到log里面直接获取。这样就完成了一个消息的检索过程。</p><p>66，RabbitMQ 集群方式？</p><p>答：</p><p>1）普通集群：</p><p>以两个节点（rabbit01、rabbit02）为例来进行说明。<br>rabbit01和rabbit02两个节点仅有相同的元数据，即队列的结构，但消息实体只存在于其中一个节点rabbit01（或者rabbit02）中。<br>当消息进入rabbit01节点的Queue后，consumer从rabbit02节点消费时，RabbitMQ会临时在rabbit01、rabbit02间进行消息传输，把A中的消息实体取出并经过B发送给consumer。所以consumer应尽量连接每一个节点，从中取消息。即对于同一个逻辑队列，要在多个节点建立物理Queue。否则无论consumer连rabbit01或rabbit02，出口总在rabbit01，会产生瓶颈。当rabbit01节点故障后，rabbit02节点无法取到rabbit01节点中还未消费的消息实体。如果做了消息持久化，那么得等rabbit01节点恢复，然后才可被消费；如果没有持久化的话，就会产生消息丢失的现象。</p><p>2）镜像集群：</p><p>在普通集群的基础上，把需要的队列做成镜像队列，消息实体会主动在镜像节点间同步，而不是在客户端取数据时临时拉取，也就是说多少节点消息就会备份多少份。该模式带来的副作用也很明显，除了降低系统性能外，如果镜像队列数量过多，加之大量的消息进入，集群内部的网络带宽将会被这种同步通讯大大消耗掉。所以在对可靠性要求较高的场合中适用<br>由于镜像队列之间消息自动同步，且内部有选举master机制，即使master节点宕机也不会影响整个集群的使用，达到去中心化的目的，从而有效的防止消息丢失及服务不可用等问题</p><p>67，ElasticSearch如何解决深度分页的问题？</p><p>答：使用scroll（有状态）和search after（无状态）的游标方式。</p><p>68，java代码优化(一)</p><p>答：尽量指定类、方法的final修饰符。<br>尽量重用对象。<br>尽可能使用局部变量。<br>及时关闭流。<br>尽量减少对变量的重复计算。<br>尽量采用懒加载的策略，即在需要的时候才创建。<br>慎用异常。<br>不要在循环中使用try…catch…，应该把其放在最外层。<br>如果能估计到待添加的内容长度，为底层以数组方式实现的集合、工具类指定初始长度。<br>当复制大量数据时，使用System.arraycopy()命令。<br>乘法和除法使用移位操作。<br>循环内不要不断创建对象引用。<br>基于效率和类型检查的考虑，应该尽可能使用array，无法确定数组大小时才使用ArrayList。<br>尽量使用HashMap、ArrayList、StringBuilder，除非线程安全需要，否则不推荐使用Hashtable、Vector、StringBuffer，后三者由于使用同步机制而导致了性能开销。<br>不要将数组声明为public static final。</p><p>69，java代码优化(二)</p><p>答：尽量在合适的场合使用单例。<br>尽量避免随意使用静态变量。<br>及时清除不再需要的会话。<br>实现RandomAccess接口的集合比如ArrayList，应当使用最普通的for循环而不是foreach循环来遍历<br>使用同步代码块替代同步方法。<br>将常量声明为static final，并以大写命名。<br>不要创建一些不使用的对象，不要导入一些不使用的类。<br>程序运行过程中避免使用反射。<br>使用数据库连接池和线程池。<br>使用带缓冲的输入输出流进行IO操作。<br>顺序插入和随机访问比较多的场景使用ArrayList，元素删除和中间插入比较多的场景使用LinkedList。<br>不要让public方法中有太多的形参。<br>字符串变量和字符串常量equals的时候将字符串常量写在前面。<br>请知道，在java中if (i == 1)和if (1 == i)是没有区别的，但从阅读习惯上讲，建议使用前者。<br>不要对数组使用toString()方法。<br>不要对超出范围的基本数据类型做向下强制转型。</p><p>70，java代码优化(三)</p><p>答:公用的集合类中不使用的数据一定要及时remove掉。<br>把一个基本数据类型转为字符串，基本数据类型.toString()是最快的方式、String.valueOf(数据)次之、数据+&quot;“最慢<br>使用最有效率的方式去遍历Map。<br>对资源的close()建议分开操作。<br>对于ThreadLocal使用前或者使用后一定要先remove。<br>切记以常量定义的方式替代魔鬼数字，魔鬼数字的存在将极大地降低代码可读性，字符串常量是否使用常量定义可以视情况而定。<br>long或者Long初始赋值时，使用大写的L而不是小写的l，因为字母l极易与数字1混淆，这个点非常细节，值得注意。<br>所有重写的方法必须保留@Override注解。<br>推荐使用JDK7中新引入的Objects工具类来进行对象的equals比较，直接a.equals(b)，有空指针异常的风险。<br>循环体内不要使用”+&quot;进行字符串拼接，而直接使用StringBuilder不断append。<br>不捕获Java类库中定义的继承自RuntimeException的运行时异常类。<br>避免Random实例被多线程使用，虽然共享该实例是线程安全的，但会因竞争同一seed导致的性能下降，JDK7之后，可以使用ThreadLocalRandom来获取随机数。<br>静态类、单例类、工厂类将它们的构造函数置为private。</p><p>71，单点登录原理与简单实现？</p><p>答：相比于单系统登录，sso需要一个独立的认证中心，只有认证中心能接受用户的用户名密码等安全信息，其他系统不提供登录入口，只接受认证中心的间接授权。间接授权通过令牌实现，sso认证中心验证用户的用户名密码没问题，创建授权令牌，在接下来的跳转过程中，授权令牌作为参数发送给各个子系统，子系统拿到令牌，即得到了授权，可以借此创建局部会话，局部会话登录方式与单系统的登录方式相同。这个过程，也就是单点登录的原理，用下图说明</p><p>单点登录自然也要单点注销，在一个子系统中注销，所有子系统的会话都将被销毁，用下面的图来说明</p><p>72，MQ做数据同步也会造成不一致，又需要引入监控，实时计算2个集群的数据同步，做一致性同步。大部分来说，同步es和solr不要在代码中去同步，同步失败无法保证事务，而且业务耦合。可以使用Databug和cancel等工具去做代码解耦，MQ支持重试，存储失败后抛出异常下次再处理。数据做异构，对外服务时任意拼装，MYSQL在半同步复制上做了一些优化，保证了一致性，引入了诸如paxos等主流算法保证强一致性问题。<br>当DB（监听从库），binlog有变化，cancel监听到时候解析过滤发送MQ（表名字，主键等）到变化的实时从库中查询数据同步到ES聚合表，MQ可以重试，系统解耦。事务log挖掘县城会对DB的事务log监听，并把这些事件发布到消息代理。</p><p>73，分布式服务调用可以实现跟踪系统，可以在业务日志中添加调用链ID，各个环节RPC均添加调用时延,QPS等。</p><p>非业务组件应该少加入业务代码，服务调用采用买点，也会采用配置采样率方式，买点即当前节点的上下文信息，包含TraceId，RPCId，开始结束时间，类型，协议，调用方IP，端口，服务名等，以及其他异常信息，报文等扩展，日志采用离线+实时的如flume结合kafka等，应按照TraceId汇总日志后按RPCId顺序整理。</p><p>74，Sentinel 工作原理？</p><p>答：（1）每个 Sentinel 以每秒钟一次的频率向它所知的 Master，Slave 以及其他 Sentinel 实例发送一个 PING 命令；<br>（2）如果一个实例（instance）距离最后一次有效回复 PING 命令的时间超过 down-after-milliseconds 选项所指定的值， 则这个实例会被 Sentinel 标记为主观下线；<br>（3）如果一个 Master 被标记为主观下线，则正在监视这个 Master 的所有 Sentinel 要以每秒一次的频率确认 Master 的确进入了主观下线状态；<br>（4）当有足够数量的 Sentinel（大于等于配置文件指定的值）在指定的时间范围内确认 Master 的确进入了主观下线状态，则 Master 会被标记为客观下线；<br>（5）在一般情况下， 每个 Sentinel 会以每 10 秒一次的频率向它已知的所有 Master，Slave 发送 INFO 命令；<br>当 Master 被 Sentinel 标记为客观下线时，Sentinel 向下线的 Master 的所有 Slave 发送 INFO 命令的频率会从 10 秒一次改为每秒一次；<br>（6）若没有足够数量的 Sentinel 同意 Master 已经下线， Master 的客观下线状态就会被移除；<br>（7）若 Master 重新向 Sentinel 的 PING 命令返回有效回复， Master 的主观下线状态就会被移除。</p><p>监控（ Monitoring ）： Redis Sentinel 实时监控主服务器和从服务器运行状态；<br>自动故障转移：如果一个 master 不正常运行了，哨兵可以启动一个故障转移进程，将一个 slave 升级成为 master，其他的 slave 被重新配置使用新的 master，并且应用程序使用 Redis 服务端通知的新地址；</p><p>75，高性能统计UV的方式？</p><p>（1）使用redis的set集合</p><p>（2）使用redis的bitmap（注意内存消耗）</p><p>76，Hbase二级索引，索引海量数据实现方案？</p><p>答：</p><p>(1) 方案1:使用开源的hbase-indexer，是借助于hbase的WAL实现，不会影响hbase性能</p><p><a href="https://blog.csdn.net/xiahoujie_90/article/details/53400044" target="_blank" rel="noopener">https://blog.csdn.net/xiahoujie_90/article/details/53400044</a></p><p>(2)  方案2：基于ES自己实现，利用habse的协处理器实现，会影响hbase性能</p><p>关键注意点：因为数据是存在Hbase中，ES充当的是索引角色，所以在创建ES的mapping时，</p><p>应指定_source为enabled:false。关闭存储原始文档。</p><p><a href="https://wenku.baidu.com/view/422722fdd0f34693daef5ef7ba0d4a7303766c71.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/422722fdd0f34693daef5ef7ba0d4a7303766c71.html</a></p><p>77，Elasticsearch分片使用优化?</p><p>答：(1)拆分集群<br>对于存在明显分界线的业务，可以按照业务、地域使用不同集群，这种拆分集群的思路是非常靠谱的。对于我们的场景，已经按照地域拆分了集群，且同一地域的子业务间分界线不明显，拆分过多的集群维护成本较高。<br>(2)调整滚动周期<br>根据保留时长调整index滚动周期是最简单有效的思路。例如保留3天的数据按天滚动，保留31天的数据按周滚动，保留一年的数据按月滚动。合理的滚动周期，可以在存储成本增加不大的情况下，大幅降低分片数量。<br>对于我们的场景，大部分数据保留31天，在按周滚动的情况下，集群的总分片数可以下降到6.5w~个。<br>(3)合理设置分片数和副本数<br>除个别子业务压力较高外，大部分业务压力较小，合理设置单Index的分片数效果也不错。我们的经验是单个分片的大小在10GB~30GB之间比较合适，对于压力非常小的业务可以直接分配1个分片。其他用户可结合具体场景考虑，同时注意单分片的记录条数不要超过上限2,147,483,519。<br>在平衡我们的业务场景对数据可靠性的要求 及 不同副本数对存储成本的开销 两个因素之后，我们选择使用一主一从的副本策略。<br>目前我们集群单Index的平均分配数为3，集群的总分片数下降到3w~个。<br>(4)分片分配流程优化<br>默认情况下，ES在分配分片时会考虑分片relocation对磁盘空间的影响。在分片数较少时，这个优化处理的副作用不明显。但随着单机分片数量的上升，这个优化处理涉及的多层循环嵌套过程耗时愈发明显。可通过cluster.routing.allocation.disk.include_relocations: false关闭此功能，这对磁盘均衡程度影响不明显。<br>(5)预创建Index<br>对于单集群3w分片的场景，集中在每周某天0点创建Index，对集群的压力还是较大，且存储空间存在波动。考虑到集群的持续扩展能力和可靠性，我们采用预创建方式提前创建分片，并把按Index的创建时间均匀打散到每周的每一天。<br>(6)持续调整分片数<br>对于集群分片的调整，通常不是一蹴而就的。随着业务的发展，不断新增的子业务 或 原有子业务规模发生突变，都需要持续调整分片数量。<br>默认情况下，新增的子业务会有默认的分片数量，如果不足，会在测试阶段及上线初期及时发现。随着业务发展，系统会考虑Index近期的数据量、写入速度、集群规模等因素，动态调整分片数量。</p><p>78，如何编写高质量代码151建议？</p><p>答：</p><p>一、Java开发中通用的方法和准则<br>不要在常量和变量中出现易混淆的字母;<br>莫让常量蜕变成变量;<br>三元操作符的类型务必一致;<br>避免带有变长参数的方法重载;<br>别让null值和空值威胁到变长方法;<br>覆写变长方法也要循规蹈矩;<br>警惕字增的陷阱;<br>不要让旧语法困扰你;<br>少用静态导入;<br>不要在本类中覆盖静态导入的变量和方法;<br>养成良好习惯，显示声明UID;<br>避免用序列化类在构造函数中为不变量赋值;<br>避免为final变量复杂赋值;<br>使用序列化类的私有方法巧妙解决部分属性持久化问题;<br>break万万不可忘;<br>易变业务使用脚本语言编写;<br>慎用动态编译;<br>避免instantceof非预期结果;<br>断言对决不是鸡肋;<br>不要只替换一个类;</p><p>二、基本类型<br>使用偶判断，不用奇判断;<br>用整数类型处理货币;<br>不要让类型默默转换;<br>边界，边界，还是边界;<br>不要让四舍五入亏了一方;<br>提防包装类型的null值;<br>谨慎包装类型的大小比较;<br>优先使用整型池;<br>优先选择基本类型;<br>不要随便设置随机种子;</p><p>三、类、对象及方法<br>在接口中不要存在实现代码;<br>静态变量一定要先声明后赋值;<br>不要覆写静态方法;<br>构造函数尽量简化;<br>避免在构造函数中初始化其他类;<br>使用构造代码块精炼程序;<br>使用静态内部类提供封装性;<br>使用匿名类的构造函数;<br>匿名类的构造函数很特殊;<br>让多重继承成为现实;<br>让工具类不可实例化;<br>避免对象的浅拷贝;<br>推荐使用序列化实现对象的拷贝;<br>覆写equals方法时不要识别不出自己;<br>equals应该考虑null值情景;<br>在equals中使用getClass进行类型判断;<br>覆写equals方法必须覆写hashCode方法;<br>推荐覆写toString方法;<br>使用package-info类为包服务;<br>不要主动进行垃圾回收;</p><p>四、字符串<br>推荐使用String直接量赋值;<br>注意方法中传递的参数要求;<br>正确使用String、StringBuffer、StringBuilder;<br>注意字符串的位置;<br>自由选择字符串拼接方法;<br>推荐在复杂字符串操作中使用正则表达式;<br>强烈建议使用UTF编码;<br>对字符串排序持一种宽容的心态;</p><p>五、数组和集合<br>性能考虑，数组是首选;<br>若有必要，使用变长数组;<br>警惕数组的浅拷贝;<br>在明确的场景下，为集合指定初始容量;<br>多种最值方法，适时选择;<br>避开基本类型数组转换列表陷阱;<br>asList方法产生的List对象不可更改;<br>不同的列表选择不同的遍历方法;<br>频繁插入和删除时使用LinkedList;<br>列表相等只需关心元素数据;<br>推荐使用subList处理局部列表;<br>生成子表后不要再操作原列表;<br>使用Comparator进行排序;<br>不推荐使用binarySearch对列表进行检索;<br>集合中的元素必须做到compareTo和equals同步;<br>集合运算时使用更优雅的方式;<br>使用shuffle大乱列表;<br>减少HashMap中元素的数量;<br>集合中的哈希码不要重复;<br>多线程使用Vector或者HashTable;<br>非稳定排序推荐使用List;</p><p>六、枚举和注解<br>推荐使用枚举定义常量;<br>使用构造函数协助描述枚举项;<br>小心switch带来的空值异常;<br>在switch的default代码块中增加AssertionError错误;<br>使用valueOf前必须进行校验;<br>用枚举实现工厂方法模式更简洁;<br>枚举项的数量限制在64个以内;<br>小心注解继承;<br>枚举和注解结合使用威力更大;<br>注意@Override不同版本的区别;</p><p>七、枚举和注解<br>Java的泛型是类型擦除的;<br>不能初始化泛型参数和数组;<br>强制声明泛型的实际类型;<br>不同的场景使用不同的泛型通配符;<br>警惕泛型是不能协变和逆变的;<br>建议采用的顺序是List<t>、List&lt;?&gt;、List<object>;<br>严格限定泛型类型采用多重界限;<br>数组的真实类型必须是泛型类型的子类型;<br>注意Class类的特殊性;<br>适时选择getDeclaredXXX和getXXX;<br>反射访问属性或方法时将Accessible设置为true;<br>使用forName动态加载类文件;<br>动态加载不合适数组;<br>动态代理可以使代理模式更加灵活;<br>反射让模板方法模式更强大;<br>不需要太多关注反射效率;</object></t></p><p>八、异常<br>提倡异常封装;<br>采用异常链传递异常;<br>受检异常尽可能转化为非受检异常;<br>不要在finally块中处理返回值;<br>使用Throwable获取栈信息;<br>异常只为异常服务;<br>多使用异常，把性能问题放一边;</p><p>九、多线程和并发<br>不推荐覆写start方法;<br>启动线程前stop方法是不可靠的;<br>不使用stop方法停止线程;<br>线程优先级只使用三个等级;<br>使用线程异常处理器提升系统可靠性;<br>volatile不能保证数据同步;<br>异步运算多考虑使用Callable接口;<br>优先选择线程池;<br>适时选择不同的线程池来实现;<br>Lock与synchronized是不一样的;<br>预防线程死锁;<br>适当设置阻塞队列长度;<br>使用CountDownLatch协调子线程;<br>CyclicBarrier让多线程齐步走;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;数据库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据库&quot;&gt;&lt;/a&gt; 数据库&lt;/h3&gt;
&lt;h4 id=&quot;1-使用mysql索引都有哪些原则索引什么数据结构btree-和-b-tree-什么区别&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
      <category term="面试" scheme="https://jjeian.github.io/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试记录" scheme="https://jjeian.github.io/tags/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/"/>
    
      <category term="面试" scheme="https://jjeian.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>19年面试</title>
    <link href="https://jjeian.github.io/2019/08/20/%E9%9D%A2%E8%AF%95/19%E5%B9%B4%E9%9D%A2%E8%AF%95/"/>
    <id>https://jjeian.github.io/2019/08/20/面试/19年面试/</id>
    <published>2019-08-20T13:37:42.158Z</published>
    <updated>2019-08-22T05:16:18.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="答应别人的东西-一定要准时反馈"><a class="markdownIt-Anchor" href="#答应别人的东西-一定要准时反馈"></a> 答应别人的东西， 一定要准时反馈；</h2><h3 id="1-自我介绍-总共做过几年java-公司介绍-最近两年项目介绍使用或接触过的技术介绍-目前在职主要做哪些方面的工作"><a class="markdownIt-Anchor" href="#1-自我介绍-总共做过几年java-公司介绍-最近两年项目介绍使用或接触过的技术介绍-目前在职主要做哪些方面的工作"></a> 1. 自我介绍， 总共做过几年java , 公司介绍， 最近两年项目介绍，使用或接触过的技术介绍， 目前在职主要做哪些方面的工作；</h3><h3 id="2-项目中数据库层面如何设计的"><a class="markdownIt-Anchor" href="#2-项目中数据库层面如何设计的"></a> 2. 项目中数据库层面如何设计的？</h3><h3 id="3-项目中涉及多线程如何处理的"><a class="markdownIt-Anchor" href="#3-项目中涉及多线程如何处理的"></a> 3. 项目中涉及多线程如何处理的？</h3><h3 id="4-app做的是用html5-一些vue-mui-阿拉丁的一些js-融合的框架-做的嵌套开发不是原生页面-做的是插件-是放在别人的app平台进行部署"><a class="markdownIt-Anchor" href="#4-app做的是用html5-一些vue-mui-阿拉丁的一些js-融合的框架-做的嵌套开发不是原生页面-做的是插件-是放在别人的app平台进行部署"></a> 4. app做的是用html5 + 一些vue , mui, 阿拉丁的一些js 融合的框架， 做的嵌套开发，不是原生页面， 做的是插件， 是放在别人的app平台进行部署。</h3><h3 id="5-数据锁方面有涉及么"><a class="markdownIt-Anchor" href="#5-数据锁方面有涉及么"></a> 5. 数据锁方面有涉及么？</h3><pre><code>共享锁下其它用户可以并发读取，查询数据。但不能增删改数据和资源共享，加了共享锁可以继续加共享锁，不能加排他锁； 排他锁下不能加其他锁，排他锁内可以读写， 其他用户只能等当前用户锁释放掉后，才能读写； 共享锁只用于表级， 使用lock命令 ，排他锁用于行级 ，使用for update； 解锁需要dba的权限，找到当前锁的sid, 然后kill掉即可。</code></pre><h3 id="6-后台框架用的什么"><a class="markdownIt-Anchor" href="#6-后台框架用的什么"></a> 6. 后台框架用的什么？</h3><pre><code>Spring+springmvc+mybatis 框架 ， Dubbo， zookeeper, maven,  log4j, redis , 常用的一些设计模式思想要记， socket , rocketmq , quartz , ESB,  webservice </code></pre><h3 id="7-springmvc这块熟悉么"><a class="markdownIt-Anchor" href="#7-springmvc这块熟悉么"></a> 7. springmvc这块熟悉么？</h3><p><img src="https://img-blog.csdnimg.cn/20190717100857589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="8-spring的哪些地方用到了哪些设计模式-你能说出来一些么"><a class="markdownIt-Anchor" href="#8-spring的哪些地方用到了哪些设计模式-你能说出来一些么"></a> 8. spring的哪些地方用到了哪些设计模式， 你能说出来一些么？</h3><pre><code>简单工厂(例如在配置文件中定义一个bean), </code></pre><p>单例模式（可以在xml中指定使用单例还是每次new新的实例），<br>适配器，<br>观察者模式（监听器的实现），<br>策略模式（定义不同算法，根据不同客户需求调用不同方法），<br>模板方法（jdbc连接池这块，将变化的东西集中写在一个地方，然后通过传入回调给模板对象，即完成调用），</p><h3 id="9-aop-ioc-分别代表什么意思"><a class="markdownIt-Anchor" href="#9-aop-ioc-分别代表什么意思"></a> 9. aop， ioc 分别代表什么意思？</h3><pre><code>AOP切面编程，  实现原理是基于动态代理实现的。动态代理相当于中转，所有客户端的请求，我可以集中到一份方法进行处理，可以根据我自己的处理逻辑控制是否进行转接， 也相当于增强，在实际调用的过程中，顺带执行点其他任务 ；使用场景：安全校验，事务，权限管理，日志等。Ioc 控制反转，xml中bean的注入， 我们需要的对象不需要自己手动去new了，全都交给spring容器进行管理，用到什么直接从spring中取就行了。</code></pre><h3 id="10-aop-用到了什么设计模式呢"><a class="markdownIt-Anchor" href="#10-aop-用到了什么设计模式呢"></a> 10. aop 用到了什么设计模式呢？</h3><pre><code>动态代理模式</code></pre><h3 id="11-ioc用到了什么设计模式呢"><a class="markdownIt-Anchor" href="#11-ioc用到了什么设计模式呢"></a> 11. ioc用到了什么设计模式呢？</h3><pre><code> 依赖注入模式</code></pre><p>单例模式<br>代理模式<br>工厂模式<br>模板方法模式</p><h3 id="12-代理模式了解过么-aop有没有用到代理模式呢"><a class="markdownIt-Anchor" href="#12-代理模式了解过么-aop有没有用到代理模式呢"></a> 12. 代理模式了解过么？ aop有没有用到代理模式呢？</h3><pre><code>了解过， 为某个对象提供一个代理，来控制对这个对象的直接访问， aop使用的是jdk的动态代理， 提供前置增强，后置增强或过程中增强；</code></pre><h3 id="13-spring-通常有一些配置-都有哪些"><a class="markdownIt-Anchor" href="#13-spring-通常有一些配置-都有哪些"></a> 13. spring 通常有一些配置， 都有哪些？</h3><pre><code>Bean的定义， 静态文件过滤， 上传下载文件配置，数据库连接池配置，事务配置，持久层配置，外包文件引入， 常用注解, 缓存配置：@AspectJ（注解切面， @EnableAspectJAutoProxy注解开启Spring对AspectJ代理的支持）， xml中可配置bean是否单例模式使用，自定义监听器， 自定义拦截器， @Import（导入配置项）， @Scheduled（配置定时任务），事务注解@Transactional</code></pre><h3 id="14-事务配置用的多么"><a class="markdownIt-Anchor" href="#14-事务配置用的多么"></a> 14. 事务配置用的多么？</h3><pre><code>  用过，  xml中引入tx标签，定义事务； 项目service层使用@Transactional注解，实现事务操作，可声明只读或写； 使用拦截器配置事务；xml中定义bean, 装配spring的事务类，通过属性赋值，实现事务配置；</code></pre><h3 id="15-spring中有两大块-aop-ioc-主要用到的技术层面有哪些"><a class="markdownIt-Anchor" href="#15-spring中有两大块-aop-ioc-主要用到的技术层面有哪些"></a> 15. spring中有两大块， aop, ioc ， 主要用到的技术层面有哪些？</h3><pre><code>   单例模式，代理模式，模板方法，工厂模式等</code></pre><h3 id="16-反射你是怎么理解的"><a class="markdownIt-Anchor" href="#16-反射你是怎么理解的"></a> 16. 反射你是怎么理解的？</h3><pre><code>   反射，jvm在类的编译加载过程中，将对应的类，属性登记在册，然后反射通过在类加载运行过程中，通过对应的类的名称或者他的一个实例对象，去找对应这个类的所有方法和属性，如果明确知道哪个方法，还可以通过传参来执行这个方法。 </code></pre><h3 id="17-aop的应用场景有哪些"><a class="markdownIt-Anchor" href="#17-aop的应用场景有哪些"></a> 17. aop的应用场景有哪些？</h3><pre><code>   事务，安全验证，日志， 权限管理， 拦截过滤等。</code></pre><h3 id="18-aop常用的注解有哪些"><a class="markdownIt-Anchor" href="#18-aop常用的注解有哪些"></a> 18. aop常用的注解有哪些？</h3><pre><code>@Aspect（配置切面）</code></pre><p>@Before（前置增强，都会执行）<br>@After（后置增强，都会执行）<br>@AfterReturning（后置增强，目标方法执行成功后才会执行）<br>@AfterThrowing（后置增强， 抛出异常后会执行）<br>@Around（环绕增强， 相当于前置增强和后置目标方法执行成功后会执行）<br>@annotation(可以指定切面执行时，只要有请求就可以执行，不用指定具体的代码层级)</p><h3 id="19-oracle常用的一些函数有哪些"><a class="markdownIt-Anchor" href="#19-oracle常用的一些函数有哪些"></a> 19. oracle常用的一些函数有哪些？</h3><pre><code>Concat: 字符串拼接， 或者 ||</code></pre><p>Instr: 指定字符串位置<br>Length: 长度<br>Trim: 去空格<br>Lower: 小写<br>Upper:大写<br>Nvl: 判断空<br>Replace: 替换<br>Substr: 截取<br>Floor: 向下取整<br>To_number:<br>To_char:<br>To_date:<br>Decode: 判断函数等等</p><h3 id="20-sql调优的话你了解有哪些"><a class="markdownIt-Anchor" href="#20-sql调优的话你了解有哪些"></a> 20. sql调优的话，你了解有哪些？</h3><pre><code>  创建索引</code></pre><p>避免在索引上使用计算<br>使用预编译查询（使用参数化sql, 因为数据库可以预编译，下次执行速度更快）<br>调整Where字句中的连接顺序<br>尽量将多条SQL语句压缩到一句SQL中<br>用where字句替换HAVING字句<br>使用表的别名（并把别名放在列名上）<br>用union all替换union<br>考虑使用“临时表”暂存中间结果（这样每次查询就避免扫描主表）<br>查询select语句优化（不要使用select * ）</p><h3 id="20-索引创建原则-哪些情况不会走索引"><a class="markdownIt-Anchor" href="#20-索引创建原则-哪些情况不会走索引"></a> 20. 索引创建原则？ 哪些情况不会走索引？</h3><h2 id="对于查询频率高的字段创建索引索引的数目不宜太多选择唯一性索引尽量使用列数据量少的索引尽量使用前缀来索引删除不再使用或者很少使用的索引"><a class="markdownIt-Anchor" href="#对于查询频率高的字段创建索引索引的数目不宜太多选择唯一性索引尽量使用列数据量少的索引尽量使用前缀来索引删除不再使用或者很少使用的索引"></a> 对于查询频率高的字段创建索引<br>索引的数目不宜太多<br>选择唯一性索引<br>尽量使用列数据量少的索引<br>尽量使用前缀来索引<br>删除不再使用或者很少使用的索引</h2><p>select *，可能会导致不走索引<br>索引列上存在null值，可能不能走索引<br>索引列上有函数运算，导致不走索引<br>隐式类型转换导致不走索引<br>！=或者&lt;&gt;(不等于），可能导致不走索引<br>使用like, in 等， 可能导致不走索引</p><h3 id="21-乐观锁和悲观锁介绍区别主要是什么"><a class="markdownIt-Anchor" href="#21-乐观锁和悲观锁介绍区别主要是什么"></a> 21. 乐观锁和悲观锁介绍？区别主要是什么？</h3><p>乐观锁适用于写比较少的情况下（多读场景）；<br>一般多写的场景下用悲观锁就比较合适（共享资源每次只给一个线程使用，其它线程阻塞，用完后再把资源转让给其它线程）</p><h3 id="22-常用的集合类有哪些-如何我想插入数据块的话用哪个list"><a class="markdownIt-Anchor" href="#22-常用的集合类有哪些-如何我想插入数据块的话用哪个list"></a> 22. 常用的集合类有哪些？ 如何我想插入数据块的话，用哪个list？</h3><pre><code>大类有iterator,  collection , map ,arrayIterator包括： ListIterator,Collection包括： list, set, linkedlist, arraylist,hashset, linkedhashset, treeset（使用二叉树排序）, sortedsetMap包括： hashmap, ConcurrentHashMap , treemap , sortedmap自定义集合内部排序，需要实现comparable 接口</code></pre><h3 id="23-hashmap的原理-存储原理和排序原理-jdk8-和-7对于hashmap有哪些区别-存储方式是以键值对存储的怎么根据key找到对应的值的-map中有两个hash值是一样的-怎么找到对应的value-或者key"><a class="markdownIt-Anchor" href="#23-hashmap的原理-存储原理和排序原理-jdk8-和-7对于hashmap有哪些区别-存储方式是以键值对存储的怎么根据key找到对应的值的-map中有两个hash值是一样的-怎么找到对应的value-或者key"></a> 23. hashmap的原理？ 存储原理和排序原理？ jdk8 和 7对于hashmap有哪些区别？ 存储方式是以键值对存储的，怎么根据key找到对应的值的？ map中有两个hash值是一样的， 怎么找到对应的value 或者key ?</h3><pre><code>存储的方式是键值对，底层是数组和链表的形式存在，实现类是Entry总结：HashMap的实现原理：</code></pre><p>利用key的hashCode重新hash计算出当前对象的元素在数组中的下标<br>存储时，如果出现hash值相同的key，此时有两种情况。(1)如果key相同，则覆盖原始值；(2)如果key不同（出现冲突），则将当前的key-value放入链表中<br>获取时，直接找到hash值对应的下标，在进一步判断key是否相同，从而找到对应值。<br>理解了以上过程就不难明白HashMap是如何解决hash冲突的问题，核心就是使用了数组的存储方式，然后将冲突的key的对象放入链表中，一旦发现冲突就在链表中做进一步的对比。<br>Jdk7，8的区别： jdk8添加了红黑树，在元素个数超过8个才会使用，  jdk7中有一个内部类Entry, jdk8使用的是Node类， 使用hashmap要注意如果key存储的是对象,则一定要重新hashcode和equal方法<br>Map先根据key的hash值到table数组中找对应的下标，获取对应的entry, 如果一个位置存在多个entry，那么hash值肯定也是相等的，遍历所有entry， 去比较entry的key值，如果与传递过来的key值相等，则返回entry对应的value值， 最后都没有找到则返回null</p><h3 id="24-创建线程有几种方式-线程启动用的哪个方法-为什么不用run-而用start"><a class="markdownIt-Anchor" href="#24-创建线程有几种方式-线程启动用的哪个方法-为什么不用run-而用start"></a> 24. 创建线程有几种方式？ 线程启动用的哪个方法？ 为什么不用run 而用start?</h3><pre><code>创建线程有4种方式：实现runnable接口， 继承thread类， 使用线程池Executor，实现callable通过创建FutureTask类对象，这个可以自定义返回类型。Run方法是普通的方法，有方法体，如果使用run方法，程序需要一步一步走完，才能执行下一个方法，就达不到多线程的目的，使用start方法，将线程放在等待开始调用队列中，等待cpu去调度，jvm去运行。 </code></pre><h3 id="25-liunx常用操作命令介绍"><a class="markdownIt-Anchor" href="#25-liunx常用操作命令介绍"></a> 25. liunx常用操作命令介绍？</h3><pre><code>Less, cat, ll , la, grep , tail , curl, vi, top, telnet , rm –rf , scop , mkdir , mv , pwd , </code></pre><h3 id="26-工作这几年有没有让你印象比较深刻的事情或者让你比较自豪的事情"><a class="markdownIt-Anchor" href="#26-工作这几年有没有让你印象比较深刻的事情或者让你比较自豪的事情"></a> 26. 工作这几年，有没有让你印象比较深刻的事情，或者让你比较自豪的事情？</h3><pre><code>印象深刻：有一天凌晨4点，是我做的一个年检项目关联系统上线，需要做止付和解止付接口验证操作，需要生产上通过调用我的接口验证他们的功能上线是否成功， 把我留在公司一整宿，验证完没有问题，系统验证搞得我很紧张，还担心自己的功能出问题，结果一夜很精神，就直接在公司打代码到早上上班，这是我第一次通宵在公司打代码到第二天早上上班。比较自豪：18年初，后端架构升级到微服务开发部署，前端架构改造使用新的框架vue, 后端是我自己看着api文档一步步搭建起来的，各个组件拆分部署也是自己弄的， 另外新架构那时候刚开始引入git, vue， 10几个java开发，还都是我最先用起来，并且抽空给他们开会做过几次技术培训。而且现在我在项目中不管是开发问题查找，业务需求还是环境，部署问题，基本上每天都有2，3个人来找我咨询。</code></pre><h3 id="27-有没有做过性能调优方面的东西"><a class="markdownIt-Anchor" href="#27-有没有做过性能调优方面的东西"></a> 27. 有没有做过性能调优方面的东西？</h3><pre><code>Sql优化，jvm参数调优，java代码性能调优做过：</code></pre><p>1.不要直接将项目整体做优化，要有确切的定位哪些确实需要优化，哪些不需要优化；<br>2.检查需要优化的代码部分，使用分析器来定位性能瓶颈在哪些地方；<br>3.经常定义一些日志在关键的地方，用来定位分析性能卡顿的代码，并且分析性能瓶颈；<br>4.尽量使用基本类型来代替使用包装类型；<br>5.避免使用bigInteger, bigDecimal 因为占用内存太高；<br>6.使用日志前，判断当前日志级别是否能被显示；<br>7.尽可能使用缓存来来避免执行耗时或频繁使用的代码片段；<br>8.慎用线程同步的方法；<br>9.尽量使用局部变量，因为局部变量保存在栈中，方法结束就会被gc清理，速度也快， 而类变量保存在堆中，耗费内存，访问也慢；<br>10.创建集合尽量指定一个初始大小；<br>11.尽量在适合的场合使用单例，例如数据共享，资源并发访问等；</p><h3 id="28-有没有做过压测-压测tps比较低的话通常有哪些方法可以去调有没有通过工具去查找分析他性能瓶颈的地方"><a class="markdownIt-Anchor" href="#28-有没有做过压测-压测tps比较低的话通常有哪些方法可以去调有没有通过工具去查找分析他性能瓶颈的地方"></a> 28. 有没有做过压测？ 压测tps比较低的话，通常有哪些方法可以去调？有没有通过工具去查找分析他性能瓶颈的地方？</h3><pre><code> 有做过；</code></pre><p>tps比较低的话， 找几个地方进行分析：1. 网络带宽限制；2.连接池大小资源限制（例如tomcat与数据库连接池大小限制，超过则等待）；3. 数据库sql性能影响；4.硬件资源限制（内存，cpu等）；5. 业务逻辑较为复杂；6. 缓存策略或配置等；7. Java编码方式问题；<br>使用过jmeter开多并发来测试过；</p><h3 id="29-你了解架构方面么"><a class="markdownIt-Anchor" href="#29-你了解架构方面么"></a> 29. 你了解架构方面么？</h3><pre><code>了解； 架构搭建部署有几个点需要注意：整体敏捷度，组件拆分合理性；部署方面，模块之间耦合度； 单元测试是否方便；性能方面；开发便捷性和代码重用性；</code></pre><h3 id="30-比如行内新出一个需求要做设计出方案这块有没有做过"><a class="markdownIt-Anchor" href="#30-比如行内新出一个需求要做设计出方案这块有没有做过"></a> 30. 比如行内新出一个需求，要做设计，出方案，这块有没有做过？</h3><pre><code>做过，最近刚做了一个小鹰助手的需求设计方案；</code></pre><h3 id="31-懂技术架构懂性能调优"><a class="markdownIt-Anchor" href="#31-懂技术架构懂性能调优"></a> 31. 懂技术架构，懂性能调优？</h3><h3 id="32-设计模式的思想介绍"><a class="markdownIt-Anchor" href="#32-设计模式的思想介绍"></a> 32. 设计模式的思想介绍：</h3><p>开闭原则：开闭原则就是说对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码。<br>针对接口编程，真对接口编程，依赖于抽象而不依赖于具体。<br>尽量使用合成/聚合的方式，而不是使用继承。<br>一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。<br>使用多个隔离的接口，比使用单个接口要好。<br>里氏代换原则：（1）子类的能力必须大于等于父类，即父类可以使用的方法，子类都可以使用。（2）返回值也是同样的道理。假设一个父类方法返回一个List，子类返回一个ArrayList，这当然可以。如果父类方法返回一个ArrayList，子类返回一个List，就说不通了。这里子类返回值的能力是比父类小的。（3）还有抛出异常的情况。任何子类方法可以声明抛出父类方法声明异常的子类。<br>而不能声明抛出父类没有声明的异常</p><h3 id="33-同步锁的几种方式"><a class="markdownIt-Anchor" href="#33-同步锁的几种方式"></a> 33. 同步锁的几种方式？</h3><p>synchronized<br>1.使用synchronized修饰方法实现同步机制；<br>2.使用volatile修饰变量实现线程同步；<br>3.使用阻塞队列实现线程同步；</p><h3 id="34-es简单介绍"><a class="markdownIt-Anchor" href="#34-es简单介绍"></a> 34. es简单介绍？</h3><h3 id="35-redis简单介绍"><a class="markdownIt-Anchor" href="#35-redis简单介绍"></a> 35. redis简单介绍？</h3><h3 id="36-springboot-面试题相关"><a class="markdownIt-Anchor" href="#36-springboot-面试题相关"></a> 36. springboot 面试题相关？</h3><h3 id="37-logback相关"><a class="markdownIt-Anchor" href="#37-logback相关"></a> 37. logback相关？</h3><h3 id="38-hbase简单介绍"><a class="markdownIt-Anchor" href="#38-hbase简单介绍"></a> 38. hbase简单介绍？</h3><h3 id="39-高并发的情况说出你的解决方案"><a class="markdownIt-Anchor" href="#39-高并发的情况说出你的解决方案"></a> 39. 高并发的情况，说出你的解决方案？</h3><h3 id="40-jvm内部的一些原理-堆和栈的区别"><a class="markdownIt-Anchor" href="#40-jvm内部的一些原理-堆和栈的区别"></a> 40. jvm内部的一些原理？ 堆和栈的区别？</h3><h3 id="41-二分算法介绍-红黑树-二叉树-冒泡排序"><a class="markdownIt-Anchor" href="#41-二分算法介绍-红黑树-二叉树-冒泡排序"></a> 41. 二分算法介绍？ 红黑树？ 二叉树？ 冒泡排序？</h3><h3 id="42-hashcode-equal-的重写"><a class="markdownIt-Anchor" href="#42-hashcode-equal-的重写"></a> 42. hashcode, equal 的重写?</h3><pre><code> 重写equals ,也要重写hashcode, Equals相等，则hashcode也相等；</code></pre><h3 id="43cglib-动态代理介绍为什么比jdk动态代理高效"><a class="markdownIt-Anchor" href="#43cglib-动态代理介绍为什么比jdk动态代理高效"></a> 43.cglib 动态代理介绍？为什么比jdk动态代理高效？</h3><pre><code> jdk通过发射的方式来调用</code></pre><p>cglib 通过继承类的方式来调用，为代理类和被代理类各生成一个class,并且分配一个index方法，通过index方法直接定位要执行的方法进行调用，不用反射调用，所以效率比较高一点。</p><h3 id="44-面试的时候讲的高端一些"><a class="markdownIt-Anchor" href="#44-面试的时候讲的高端一些"></a> 44. 面试的时候讲的高端一些？</h3><h3 id="45-平常开发测试人少访问量性能看不出来但是一到生产就会很慢很卡生产上如何进行分析性能出现在哪地方的问题-分析工具常用-的有哪些"><a class="markdownIt-Anchor" href="#45-平常开发测试人少访问量性能看不出来但是一到生产就会很慢很卡生产上如何进行分析性能出现在哪地方的问题-分析工具常用-的有哪些"></a> 45. 平常开发测试人少访问量，性能看不出来，但是一到生产，就会很慢，很卡，生产上如何进行分析，性能出现在哪地方的问题？ 分析工具常用 的有哪些？</h3><pre><code>1. 生产上的话， 通过观察日志， 2. 使用性能分析工具， 与eclipse集成的几款工具，profile, jConsole,  使用cat监控工具</code></pre><h3 id="46-sql性能如何分析"><a class="markdownIt-Anchor" href="#46-sql性能如何分析"></a> 46. sql性能如何分析？</h3><pre><code> 通过任务计划观察索引执行情况</code></pre><h3 id="47-高并发解决方案或者分析方案-jmeter-loadrunner-做性能测试-各有什么特点如何进行分析"><a class="markdownIt-Anchor" href="#47-高并发解决方案或者分析方案-jmeter-loadrunner-做性能测试-各有什么特点如何进行分析"></a> 47. 高并发解决方案或者分析方案？ Jmeter, loadrunner 做性能测试， 各有什么特点，如何进行分析？</h3><pre><code> 使用乐观锁，队列 ， 和增加版本号来控制高并发提交数据</code></pre><h3 id="48-自己有没有做过压测如何做的"><a class="markdownIt-Anchor" href="#48-自己有没有做过压测如何做的"></a> 48. 自己有没有做过压测，如何做的？</h3><pre><code>1. 使用jmeter工具，模拟高并发请求，观察tps2. 或者自己使用多线程模拟高并发来观察接口压力情况</code></pre><h3 id="49-spring和springmvc-有什么区别"><a class="markdownIt-Anchor" href="#49-spring和springmvc-有什么区别"></a> 49. spring和springmvc 有什么区别？</h3><p>spring提供了一整套流程处理，包括业务层，数据层,事务支持等，并且提供了两大核心功能aop（面向切面，可以用来解决一些公共问题）和ioc（bean的创建和注入简化并便于维护）,<br>Springmvc主要作为控制层来实现，从请求到controller，业务处理完成后，返回视图和数据给客户端。</p><p>2）springmvc的流程：<br>1、 用户发送请求至前端控制器DispatcherServlet；<br>2、DispatcherServlet收到请求调用HandlerMapping处理器映射器；<br>3、处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet；<br>4、DispatcherServlet通过HandlerAdapter处理器适配器调用处理器，执行处理器(Controller，也叫后端控制器)；<br>5、Controller执行完成返回ModelAndView，并返回给HandlerAdapter，HandlerAdapter将结果返回给DispatcherServlet；<br>6、DispatcherServlet将ModelAndView传给ViewReslover视图解析器，ViewReslover解析后返回具体View给DispatcherServlet；<br>7、DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）后返回给给客户</p><h3 id="50-什么是分布式架构有没有做过分布式系统-分布式系统中如何实现数据共享和服务器中间通信-链表结构有没有了解过"><a class="markdownIt-Anchor" href="#50-什么是分布式架构有没有做过分布式系统-分布式系统中如何实现数据共享和服务器中间通信-链表结构有没有了解过"></a> 50. 什么是分布式架构？有没有做过分布式系统？ 分布式系统中如何实现数据共享和服务器中间通信？ 链表结构有没有了解过？</h3><pre><code>1. 将相同的应用组件部署多份，2. 业务拆分多个模块，分别部署链表结构，可比喻为火车，每个链表都是一节车厢，数据存储在车厢中， 而每个火车节都有一个指针，连接着下一个火车节。</code></pre><h3 id="51-服务端系统之间调用的话如果访问量很大或者调用很频繁的话-系统资源就会消耗很大"><a class="markdownIt-Anchor" href="#51-服务端系统之间调用的话如果访问量很大或者调用很频繁的话-系统资源就会消耗很大"></a> 51. 服务端，系统之间调用的话，如果访问量很大或者调用很频繁的话， 系统资源就会消耗很大？</h3><pre><code>服务端通信有几种方式： </code></pre><p>socket方式通信，短连接（通信完立马断掉），长连接（同步和异步方式）<br>mq方式同步或者通信<br>Webervice方式<br>Redis发布订阅</p><h3 id="52-rocketmq-架构介绍-如何保证mq数据不丢失和数据重复问题"><a class="markdownIt-Anchor" href="#52-rocketmq-架构介绍-如何保证mq数据不丢失和数据重复问题"></a> 52. rocketMq 架构介绍？ 如何保证mq数据不丢失和数据重复问题？</h3><p>Name Server 为 producer 和 consumer 提供路由信息;<br>Broker 接收来自生产者的消息，储存以及为消费者拉取消息的请求做好准备;<br>生产者（Producer）;<br>消费者（Consumer）;<br>2). 首先从生产者方面考虑，每条消息发送成功与否都会有一个状态对应，如果失败状态，则重发一遍即可。并且还可以日志来查询是否发送并成功存储进boker块当中；<br>3)从broker块分析，消息支持持久化到日志里面，即使宕机重启，未读消息还是可以加载出来，而且broker支持主从同步，使得消息也不会丢失；<br>4)从消费者角度考虑，消费者自身维护一个持久化的offset,标记已经成功消费或者消费失败时，发给broker的消息下标，如果消费失败，并且borker挂掉了，那么消费者会定时重试发送动作，如果消费者和broker一起挂了，那么重启后，会继续从拉去offset之前的消息到本地。<br>a) mq有发送日志记录，每条发送消息都有对应的消息id, 他发送给消费者时会自动判断并去重， 还有就是可以自己在业务端处理重复问题。</p><h3 id="53-redis常见面试题-redis持久化"><a class="markdownIt-Anchor" href="#53-redis常见面试题-redis持久化"></a> 53. redis常见面试题？ Redis持久化？</h3><pre><code>持久化，就是把数据写到内存中;Redis支持数据类型： list , hash , set , zset , String ;Redis有一种通讯协议RESP，可以实现客户端于服务端通信， 类型websocket ;Redis有几种架构部署模式： </code></pre><p>单机模式： 搭建简单，内存容量有限，无法扩容<br>集群模式：节点之间通过数据共享，<br>哨兵模式：通过间隔时间监听master节点，出现master节点不可用时，会通过投票选举新的master, 节点直接数据也是通过master同步到各个节点，master写压力比较大<br>主从复制：有一个master主节点，多个slave从节点，数据更新的话， master都会同步到slave从节点，用来保证数据一致，无法保证高可用，master写压力比较大</p><h3 id="54-组合索引-只有一列条件会不会走索引"><a class="markdownIt-Anchor" href="#54-组合索引-只有一列条件会不会走索引"></a> 54. 组合索引， 只有一列条件，会不会走索引？</h3><pre><code>如果这一列是组合索引的第一个字段的话， 会走索引，不是则不走</code></pre><h3 id="55hashmap-和-concurrentmap-有什么区别"><a class="markdownIt-Anchor" href="#55hashmap-和-concurrentmap-有什么区别"></a> 55.hashmap 和 concurrentmap 有什么区别？</h3><p>一个是线程安全，一个不是线程安全的， 因为concurrentmap使用了分段锁，将map数据分成一段一段存储，然后给每一段数据加上一把锁，就实现了高并发。</p><h3 id="56-map底层的链表是用来做什么的"><a class="markdownIt-Anchor" href="#56-map底层的链表是用来做什么的"></a> 56. map底层的链表是用来做什么的？</h3><pre><code>链表存储的是Entry泛型接口， 包含key, value 以及next(指向下一个entry对象元素)</code></pre><h3 id="57-乐观锁悲观锁有什么区别"><a class="markdownIt-Anchor" href="#57-乐观锁悲观锁有什么区别"></a> 57. 乐观锁，悲观锁有什么区别？</h3><pre><code>乐观锁假设认为数据一般情况下不会造成冲突，所以在数据进行提交更新的时候，才会正式对数据的冲突与否进行检查，（通过对比版本号，查询的时候会带一个数据库版本号，更新的时候用来做对比）悲观锁， 每次它去拿数据的时候都会上锁，知道锁释放，别人才能操作，不适用于高并发</code></pre><h3 id="58-重写equal时-一定要重写hashcode-因为比较相等时基于hashcode实现的"><a class="markdownIt-Anchor" href="#58-重写equal时-一定要重写hashcode-因为比较相等时基于hashcode实现的"></a> 58. 重写equal时， 一定要重写hashcode, 因为比较相等时基于hashcode实现的，</h3><h3 id="59-final修饰对象-修饰方法修饰类变量"><a class="markdownIt-Anchor" href="#59-final修饰对象-修饰方法修饰类变量"></a> 59. final修饰对象， 修饰方法，修饰类，变量？</h3><p>final修饰类是不能被继承；<br>final修饰对象不能在被创建；<br>fianl修饰方法不能在子类中被覆盖；<br>final修饰变量，称为常量，初始化以后不能改变值。</p><h3 id="60equal如何比较两个对象相等的-又是如何比较的"><a class="markdownIt-Anchor" href="#60equal如何比较两个对象相等的-又是如何比较的"></a> 60.equal如何比较两个对象相等的？ == 又是如何比较的？</h3><p>equals 通常用来比较两个对象的内容是否相等， ‘<mark>’ 通常用来比较两个对象的地址是否相等<br>equals默认等同于‘</mark>’<br>如果判断一个类或对象是否相等， 如果没有重写equals方法，则判断方式就按照‘==’判断</p><h3 id="61java注入bean有哪几种方式"><a class="markdownIt-Anchor" href="#61java注入bean有哪几种方式"></a> 61.java注入bean有哪几种方式？</h3><p>Javabean注入有两种方式： 构造函数注入，set/get方式注入<br>Spring注入bean有如下几种方式：<br>Xml注入；使用注解@Autowired； 使用java方式注入；通过构建applicationContext对象方式注入</p><h3 id="62bean-注入循环如何解决"><a class="markdownIt-Anchor" href="#62bean-注入循环如何解决"></a> 62.Bean 注入循环如何解决？</h3><p>Spring的ioc容器会进行检查，如果是通过xml中通过set属性注入, 对于不是propertype属性注入的bean，spring可以提前缓存创建的bean，如果存在就直接使用。</p><h3 id="63mybatis有遇到什么技术难点"><a class="markdownIt-Anchor" href="#63mybatis有遇到什么技术难点"></a> 63.Mybatis有遇到什么技术难点？</h3><p>其实也没有什么技术难点，基本遇到的问题都能及时解决，例如sql中&lt;,&gt; 号，sql结尾加了；，没有写#号等等， 都能根据报错提示很快定位并进行修正。</p><h3 id="64mybatis-都用过哪些插件-简单介绍下如何使用的"><a class="markdownIt-Anchor" href="#64mybatis-都用过哪些插件-简单介绍下如何使用的"></a> 64.Mybatis 都用过哪些插件？ 简单介绍下如何使用的？</h3><p>Mybatis-generators 自动生成dao,xml,bean的反向生成插件<br>Mybatis-plugins 自动关联dao,xml文件，并可以检测属性值是否错误<br>Mybatis-pagehelper 分页插件，是通过spring的aop实现的，可以在执行sql的时候，把相关数据在执行一遍， 将当前表作为临时表，预编译sql之后执行</p><h3 id="65aop如何实现事务的"><a class="markdownIt-Anchor" href="#65aop如何实现事务的"></a> 65.Aop如何实现事务的？</h3><p>Aop方式可以在xml配置中体现出来，通过配置增强来实现事务的配置；<br>但是还有一种比较方便的配置方式，在xml中配置一行代码tx:annotation-driven , 然后在要实现事务的方法上添加@transaction注解，<br>事务回滚的情况，超时，抛异常都会导致事务回滚</p><h3 id="66如何根据key值找到map数组的下标-map底层是数组存储那么数组的下标和扩容是如何做的如何判断不会超出"><a class="markdownIt-Anchor" href="#66如何根据key值找到map数组的下标-map底层是数组存储那么数组的下标和扩容是如何做的如何判断不会超出"></a> 66.如何根据key值找到map数组的下标？ Map底层是数组存储，那么数组的下标和扩容是如何做的？如何判断不会超出？</h3><p>首先存储的时候，根据key值通过散列算法得出对应的下标，算法会尽可能随机均匀的将数据分布在每个数组下，而扩容时根据对应的算法进行实现。<br><a href="https://www.cnblogs.com/williamjie/p/9358291.html" target="_blank" rel="noopener">https://www.cnblogs.com/williamjie/p/9358291.html</a></p><h3 id="67线程的wait-sleep-方法是干什么用的"><a class="markdownIt-Anchor" href="#67线程的wait-sleep-方法是干什么用的"></a> 67.线程的wait, sleep 方法是干什么用的？</h3><p>sleep方法：<br>　　属于Thread类中的方法；会导致程序暂停执行指定的时间，让出cpu该其他线程，但是他的监控状态依然保持着，当指定时间到了之后，又会自动恢复运行状态；在调用sleep方法的过程中，线程不会释放对象锁。（只会让出CPU，不会导致锁行为的改变）<br>wait方法：<br>　　属于Object类中的方法；在调用wait方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用notify方法后本线程才进入对象锁定池准备。获取对象锁进入运行状态。（不仅让出CPU，还释放已经占有的同步资源锁）</p><h3 id="68线程使用wait之前-线程都干了什么"><a class="markdownIt-Anchor" href="#68线程使用wait之前-线程都干了什么"></a> 68.线程使用wait之前， 线程都干了什么？</h3><p>添加同步锁，wait则是释放当前同步锁，并让出cpu资源<br><a href="https://my.oschina.net/HerrySun/blog/714156" target="_blank" rel="noopener">https://my.oschina.net/HerrySun/blog/714156</a></p><h3 id="69那么wait-和notify是和什么配合使用的"><a class="markdownIt-Anchor" href="#69那么wait-和notify是和什么配合使用的"></a> 69.那么wait 和notify，是和什么配合使用的？</h3><p>Synchronized</p><h3 id="70java线程同步有哪几种方式-lock与synchronized的区别"><a class="markdownIt-Anchor" href="#70java线程同步有哪几种方式-lock与synchronized的区别"></a> 70.Java线程同步有哪几种方式？ lock与synchronized的区别？</h3><p>1.使用volitail,<br>2.使用wait , nofity,<br>3.使用synchronized,<br>4.使用ThreadLocal线程变量<br>----------------------------------------------------------------------<br>1.首先synchronized是java内置关键字，在jvm层面，Lock是个java类；<br>2.synchronized无法判断是否获取锁的状态，Lock可以判断是否获取到锁；<br>3.synchronized会自动释放锁(a 线程执行完同步代码会释放锁 ；b 线程执行过程中发生异常会释放锁)，Lock需在finally中手工释放锁（unlock()方法释放锁），否则容易造成线程死锁；<br>4.用synchronized关键字的两个线程1和线程2，如果当前线程1获得锁，线程2线程等待。如果线程1阻塞，线程2则会一直等待下去，而Lock锁就不一定会等待下去，如果尝试获取不到锁，线程可以不用一直等待就结束了；<br>5.synchronized的锁可重入、不可中断、非公平，而Lock锁可重入、可判断、可公平（两者皆可）<br>6.Lock锁适合大量同步的代码的同步问题，synchronized锁适合代码少量的同步问题。</p><h3 id="71java类加载过程"><a class="markdownIt-Anchor" href="#71java类加载过程"></a> 71.Java类加载过程？</h3><p>Jvm将.java文件编译成…class文件，然后通过classloader类加载器将类信息加载到虚拟机内存中，在使用的时候在去创建这个对象。</p><h3 id="72多线程高并发做过么"><a class="markdownIt-Anchor" href="#72多线程高并发做过么"></a> 72.多线程高并发做过么？</h3><p>高并发： 高并发是一种状态，如果大量请求访问网关接口。这种情况会发生大量执行操作，如数据库操作、资源请求、硬件占用等。这就需要对接口进行优化，而多线程是处理高并发的一种手段<br>多线程：是一种异步处理的一种方式，在同一时刻最大限度的利用计算机资源</p><h3 id="73微服务了解么"><a class="markdownIt-Anchor" href="#73微服务了解么"></a> 73.微服务了解么？</h3><p>微服务架构系统是一个分布式系统，按照业务划分不同的组件或应用，可以独立部署和使用</p><h3 id="74多线程里面的参数都有哪些-分别代表什么意思"><a class="markdownIt-Anchor" href="#74多线程里面的参数都有哪些-分别代表什么意思"></a> 74.多线程里面的参数都有哪些？ 分别代表什么意思？</h3><p>核心线程数，最大线程数，线程存活时间，线程队列<br>比如去火车站买票, 有10个售票窗口, 但只有5个窗口对外开放. 那么对外开放的5个窗口称为核心线程数, 而最大线程数是10个窗口.如果5个窗口都被占用, 那么后来的人就必须在后面排队, 但后来售票厅人越来越多, 已经人满为患, 就类似于线程队列已满.这时候火车站站长下令, 把剩下的5个窗口也打开, 也就是目前已经有10个窗口同时运行. 后来又来了一批人,10个窗口也处理不过来了, 而且售票厅人已经满了, 这时候站长就下令封锁入口,不允许其他人再进来, 这就是线程异常处理策略.而线程存活时间指的是, 允许售票员休息的最长时间, 以此限制售票员偷懒的行为.</p><h3 id="75threadlocal有用过么"><a class="markdownIt-Anchor" href="#75threadlocal有用过么"></a> 75.ThreadLocal有用过么？</h3><p>将私有线程和该线程存放的副本对象做一个映射，各个线程变量之间互不影响，不共享数据，线程安全，一般存储为静态类型，可以在其他地方进行调用</p><h3 id="76java异常有那几大类java异常类一般怎么抛出的你是如何处理outofmemoryerror异常的"><a class="markdownIt-Anchor" href="#76java异常有那几大类java异常类一般怎么抛出的你是如何处理outofmemoryerror异常的"></a> 76.Java异常有那几大类？Java异常类一般怎么抛出的？你是如何处理OutOfMemoryError异常的？</h3><p><img src="https://img-blog.csdnimg.cn/20190717100833284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>非检查异常：Error 和 RuntimeException 以及他们的子类；这样的异常多半是代码写的有问题，数组越界，强制类型转换等。<br>检查异常：除了Error 和 RuntimeException 以及他们的子类之外的异常；程序本身运行环境中出现的异常，需要使用try … catch扑捉。</p><p>内存溢出博文：<a href="http://outofmemory.cn/c/java-outOfMemoryError" target="_blank" rel="noopener">http://outofmemory.cn/c/java-outOfMemoryError</a></p><h4 id="导致outofmemoryerror异常的常见原因有以下几种"><a class="markdownIt-Anchor" href="#导致outofmemoryerror异常的常见原因有以下几种"></a> 导致OutOfMemoryError异常的常见原因有以下几种：</h4><p>内存中加载的数据量过于庞大，如一次从数据库取出过多数据；<br>集合类中有对对象的引用，使用完后未清空，使得JVM不能回收；<br>代码中存在死循环或循环产生过多重复的对象实体；<br>使用的第三方软件中的BUG；<br>启动参数内存值设定的过小</p><h4 id="错误常见的错误提示"><a class="markdownIt-Anchor" href="#错误常见的错误提示"></a> 错误常见的错误提示：</h4><p>tomcat:java.lang.OutOfMemoryError: PermGen space<br>tomcat:java.lang.OutOfMemoryError: Java heap space<br>weblogic:Root cause of ServletException java.lang.OutOfMemoryError<br>resin:java.lang.OutOfMemoryError<br>java:java.lang.OutOfMemoryError</p><h4 id="需要重点排查以下几点"><a class="markdownIt-Anchor" href="#需要重点排查以下几点"></a> 需要重点排查以下几点：</h4><p>检查代码中是否有死循环或递归调用。<br>检查是否有大循环重复产生新对象实体。<br>检查对数据库查询中，是否有一次获得全部数据的查询。一般来说，如果一次取十万条记录到内存，就可能引起内存溢出。这个问题比较隐蔽，在上线前，数据库中数据较少，不容易出问题，上线后，数据库中数据多了，一次查询就有可能引起内存溢出。因此对于数据库查询尽量采用分页的方式查询。<br>检查List、MAP等集合对象是否有使用完后，未清除的问题。List、MAP等集合对象会始终存有对对象的引用，使得这些对象不能被GC回收。</p><h3 id="77jira插件有用过么"><a class="markdownIt-Anchor" href="#77jira插件有用过么"></a> 77.Jira插件有用过么？</h3><h3 id="78dubbo简单介绍下另外项目中有用过么-怎么用的"><a class="markdownIt-Anchor" href="#78dubbo简单介绍下另外项目中有用过么-怎么用的"></a> 78.Dubbo简单介绍下，另外项目中有用过么？ 怎么用的？</h3><h4 id="dubbo的使用方式"><a class="markdownIt-Anchor" href="#dubbo的使用方式"></a> Dubbo的使用方式：</h4><p>（1）导入dubbo、zookeeper依赖<br>（2）在服务提供者端，编写服务接口，服务接口的实现类，编写配置文件<br>（3）修改web.xml读取配置文件<br>（4）在服务消费者，即客户端，调用服务接口，调用服务实现类，编写配置文件<br>这样系统间就可以互相通信，从而感觉像在本地使用一样。</p><h4 id="调用流程"><a class="markdownIt-Anchor" href="#调用流程"></a> 调用流程：</h4><p>·  服务容器负责启动，加载，运行服务提供者。<br>·  服务提供者在启动时，向注册中心注册自己提供的服务。<br>·  服务消费者在启动时，向注册中心订阅自己所需的服务。<br>·  注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。<br>·  服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。<br>·  服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。<br><img src="https://img-blog.csdnimg.cn/20190717150516183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="79介绍下常用的数据结构"><a class="markdownIt-Anchor" href="#79介绍下常用的数据结构"></a> 79.介绍下常用的数据结构？</h3><p>枚举（Enumeration）<br>位集合（BitSet）<br>向量（Vector）<br>栈（Stack）<br>字典（Dictionary）<br>哈希表（Hashtable）<br>属性（Properties）<br>数组array<br>链表linkedList<br>Collection<br>Map</p><h3 id="80分布式事务介绍下"><a class="markdownIt-Anchor" href="#80分布式事务介绍下"></a> 80.分布式事务介绍下？</h3><p>简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。本质上来说，分布式事务就是为了保证不同数据库的数据一致性。</p><h3 id="81arratlist查询比linkedlist快是因为一个是数组一个是链表存储数组下表具有连续性可以通过偏移量查询链表存储内存是不连续的需要通过全部便利查询"><a class="markdownIt-Anchor" href="#81arratlist查询比linkedlist快是因为一个是数组一个是链表存储数组下表具有连续性可以通过偏移量查询链表存储内存是不连续的需要通过全部便利查询"></a> 81.arratlist查询比linkedlist快是因为一个是数组，一个是链表存储，数组下表具有连续性，可以通过偏移量查询，链表存储内存是不连续的，需要通过全部便利查询</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;答应别人的东西-一定要准时反馈&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#答应别人的东西-一定要准时反馈&quot;&gt;&lt;/a&gt; 答应别人的东西， 一定要准时反馈；&lt;/h2&gt;
&lt;h3 id=&quot;1-自我介绍-总共做过几年java-公司介绍-最近两
      
    
    </summary>
    
      <category term="面试" scheme="https://jjeian.github.io/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试记录" scheme="https://jjeian.github.io/tags/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/"/>
    
      <category term="面试" scheme="https://jjeian.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Liunx常用命令</title>
    <link href="https://jjeian.github.io/2019/08/20/%E7%8E%AF%E5%A2%83/liunx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://jjeian.github.io/2019/08/20/环境/liunx常用命令/</id>
    <published>2019-08-20T13:37:42.151Z</published>
    <updated>2019-08-20T05:30:46.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="liunx常用命令"><a class="markdownIt-Anchor" href="#liunx常用命令"></a> liunx常用命令</h2><ol><li>su root  切换root用户</li><li>上传文件需要切换到root用户\</li><li>wget  <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>  下载文件</li><li>解压.tgz结尾文件：  tar     -zxvf   文件名.tgz</li><li>jar -cvf  jar包名.jar  【指定目录或*.class】</li><li>tar -zxf hadoop-2.7.1-src.tar.gz -C  …/softwares/    解压压缩包到指定位置wad</li><li>yum install  -y  lrzsz   通过yum命令安装上传文件命令,  安装好以后,  可以通过rz命令来打开窗口选择解压包</li><li>scp -r zookeeper-3.4.9/ @s202:/usr/local/     远程copy文件[夹]到其他主机上</li><li>远程复制:  scp -r core-site.xml hdfs-site.xml slaves ej@hadoop-slave1:/opt/work/cdh/hadoop/etc/hadoop/</li></ol><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//临时关闭防火墙</span></span><br><span class="line">systemctl <span class="keyword">stop</span> firewalld</span><br><span class="line"><span class="comment">//禁止开机启动</span></span><br><span class="line">systemctl <span class="keyword">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>=====================================================</p><ol><li>liunx常用编辑命令vim ;<br>关机命令： init  0   ;   halt<br>重启命令： init  6   ;   reboot</li><li>管道符号用法：</li><li>追加/覆盖： &gt;&gt;       &gt;<br>— 把前一个的输出结果追加/覆盖到某一个文件里面</li></ol><hr><ol start="2"><li>liunx各版本下载地址 ：  fedora版本桌面好看</li></ol><h4 id="使用ifconfig-总是过一段时间看不到ip-解决方案是配置静态ip"><a class="markdownIt-Anchor" href="#使用ifconfig-总是过一段时间看不到ip-解决方案是配置静态ip"></a> 使用ifconfig 总是过一段时间看不到ip, 解决方案是配置静态ip:</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">编辑文件： sudo vi  /etc/network/<span class="built_in">int</span>erfaces, 添加如下配置，ip地址改下</span><br><span class="line"><span class="built_in">auto</span> lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"><span class="built_in">auto</span> ens33</span><br><span class="line">iface ens33 inet static</span><br><span class="line">address <span class="number">192.168</span><span class="number">.57</span><span class="number">.129</span></span><br><span class="line">netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">gateway <span class="number">192.168</span><span class="number">.57</span><span class="number">.2</span></span><br><span class="line">dns-nameserver <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line">      b) 重启网卡服务（<span class="number">2</span>步）： </span><br><span class="line">sudo /etc/init.d/networking restart</span><br><span class="line">sudo systemctl restart network-manager.service</span><br><span class="line">      c) 重启虚拟机，使用ifconfig查看</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;liunx常用命令&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#liunx常用命令&quot;&gt;&lt;/a&gt; liunx常用命令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;su root  切换root用户&lt;/li&gt;
&lt;li&gt;上传文件需要切换到root用户\&lt;/
      
    
    </summary>
    
      <category term="环境" scheme="https://jjeian.github.io/categories/%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="命令" scheme="https://jjeian.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop 搭建常用命令记录</title>
    <link href="https://jjeian.github.io/2019/08/20/%E7%8E%AF%E5%A2%83/hadoop%20%E6%90%AD%E5%BB%BA%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
    <id>https://jjeian.github.io/2019/08/20/环境/hadoop 搭建常用命令记录/</id>
    <published>2019-08-20T13:37:42.149Z</published>
    <updated>2019-08-20T05:29:01.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hadoop-搭建-常用命令记录"><a class="markdownIt-Anchor" href="#hadoop-搭建-常用命令记录"></a> hadoop 搭建 常用命令记录</h2><p>快捷键安装在/user/local/bin目录下</p><ol><li><p>nano 文件名<br>ctrl + k   剪切一行<br>ctrl + o  保存并重命名，不重命名直接enter<br>ctrl + x   退出<br>ctrl + u   粘贴</p></li><li><p>启动： <a href="http://start-dfs.sh" target="_blank" rel="noopener">start-dfs.sh</a>  +  <a href="http://start-yarn.sh" target="_blank" rel="noopener">start-yarn.sh</a></p></li><li><p>hdfs 文件目录 root01的：/usr/local/centos/hadoophdfs 文件目录 root01的：/usr/local/centos/hadoop</p></li><li><p>修改hdfs文件目录的权限：    hdfs dfs -chmod 777 /usr/local/centos/hadoop修改hdfs文件目录的权限：    hdfs dfs -chmod 777 /usr/local/centos/hadoop</p></li><li><p>hdfs 特点：</p><ul><li>支持大文件存储</li><li>流式数据访问</li><li>商用硬件【遇到故障不会明显感到中断，照样可以使用】</li><li>低时间延迟的数据访问【几十毫秒以内的响应不适合hdfs上运行，可使用hbase】</li><li>大量的小文件</li><li>多用户写入， 任意修改文件【不支持多用户同时写入同一个文件】</li></ul></li><li><p>linux下打开eclipse ,   在eclipse安装解压目录下，  用命令     ./eclipse  &amp;      打开</p></li></ol><hr><ol start="7"><li><p>hadoop</p><ul><li>API<br>Configuration    //配置类  fs.defaultFS (file:///)<br>FileSystem       //抽象类</li><li>核心配置文件<br>core-site.xml  //文件系统+本地临时目录 hadoop.tmp.dir<br>hdfs-site.xml  //relication = 3<br>mapred-site.xml  //yarn<br>yarn-site.xml    //rm</li><li>blocksize<br>128m<br>寻址时间   ~=10<br>磁盘io速度= 100M/s<br>寻址时间是读取时间的1%</li><li>centos</li><li>hadoop<br>hadoop/share/hadoop/common|hdfs|yarn|mapred|…/lib/jars</li></ul></li><li><p>window 与linux 之间共享文件夹目录， 可以存放文件共享并保持读写<br>$ sudo mount -t cifs -o username=Jinc,password=ej <a href="//192.160.12.103/linux_share">//192.160.12.103/linux_share</a> window_share<br>注：  linux下共享目录在   /usr/local/window_share    ,     window下共享目录在E:/linux_share  ,</p></li><li><p>查看hadoop文件 内容<br>hadoop fs -text /usr/local/centos/hadoop/out_words/part-r-00000</p></li><li><p>复制文件到hadoop文件系统<br>hadoop fs -put words /usr/local/centos/hadoop/words</p></li><li><p>运行mapreduce， 将java导出jar文件在hadoop上运行，并将结果输出到另一个地方【前路径是要加载的文件，后路径是要计算后输出的文件位置，这个位置不能存在】<br>hadoop jar MR.jar cn.demo.WordCount /usr/local/centos/hadoop/words /usr/local/centos/hadoop/out_words<br>另一种执行mapredce的方法： bin/yarn jar test_data/hdfs-project.jar /input  /usr/local/hadoop/wsssss</p></li><li><p>IntWritable , Text ,  LongWritable</p></li><li><p>java中int  =  IntWritable  .get();       new  IntWritable(num);</p></li><li><p>注： mapreduce  又几个重写方法， map, reduce， setup, cleanup ,  其中， 最先执行的是setup, 然后是map,reduce ， 其次是cleanup 【这些都是内部类执行的顺序】</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hadoop-搭建-常用命令记录&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hadoop-搭建-常用命令记录&quot;&gt;&lt;/a&gt; hadoop 搭建 常用命令记录&lt;/h2&gt;
&lt;p&gt;快捷键安装在/user/local/bin目录下&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="环境" scheme="https://jjeian.github.io/categories/%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="环境" scheme="https://jjeian.github.io/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>Ssm+ssh框架原理介绍</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/ssm+ssh%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>https://jjeian.github.io/2019/08/20/技术原理/ssm+ssh框架原理简单介绍/</id>
    <published>2019-08-20T13:37:42.142Z</published>
    <updated>2019-08-21T04:33:47.723Z</updated>
    
    <content type="html"><![CDATA[<h4 id="为什么使用handleradapter"><a class="markdownIt-Anchor" href="#为什么使用handleradapter"></a> 为什么使用HandlerAdapter?</h4><pre><code>    SpringMVC使用一个Servlet(DispacherServlet)代理所有的请求 ,    SpringMVC中的处理器是方法级别的处理器，而非类级别的处理，这样只要不定义类变量，就很容易在单例的情况下保证线程安全。同时对处理器进行统一封装，最大程度重用代码。</code></pre><p><img src="https://img-blog.csdnimg.cn/20190126162545874.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190126162624627.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190126162659833.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="总结流程"><a class="markdownIt-Anchor" href="#总结流程"></a> 总结流程</h4><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  Spring工作流程描述</span><br><span class="line">      1. 用户向服务器发送请求，请求被Spring 前端控制Servelt DispatcherServlet捕获；</span><br><span class="line">      2. DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI）。然后根据该URI，调用HandlerMapping获得该<span class="keyword">Handler</span>配置的所有相关的对象（包括<span class="keyword">Handler</span>对象以及<span class="keyword">Handler</span>对象对应的拦截器），最后以HandlerExecutionChain对象的形式返回；</span><br><span class="line">      <span class="number">3.</span> DispatcherServlet 根据获得的<span class="keyword">Handler</span>，选择一个合适的HandlerAdapter。（附注：如果成功获得HandlerAdapter后，此时将开始执行拦截器的preHandler(...)方法）</span><br><span class="line">       <span class="number">4.</span>  提取Request中的模型数据，填充<span class="keyword">Handler</span>入参，开始执行<span class="keyword">Handler</span>（Controller)。 在填充<span class="keyword">Handler</span>的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：</span><br><span class="line">      HttpMessageConveter： 将请求消息（如<span class="keyword">Json</span>、<span class="keyword">xml</span>等数据）转换成一个对象，将对象转换为指定的响应信息</span><br><span class="line">      数据转换：对请求消息进行数据转换。如<span class="keyword">String</span>转换成<span class="built_in">Integer</span>、<span class="keyword">Double</span>等</span><br><span class="line">      数据根式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等</span><br><span class="line">      数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或<span class="keyword">Error</span>中</span><br><span class="line">      <span class="number">5.</span>  <span class="keyword">Handler</span>执行完成后，向DispatcherServlet 返回一个ModelAndView对象；</span><br><span class="line">      <span class="number">6.</span>  根据返回的ModelAndView，选择一个适合的ViewResolver（必须是已经注册到Spring容器中的ViewResolver)返回给DispatcherServlet ；</span><br><span class="line">      <span class="number">7.</span> ViewResolver 结合<span class="keyword">Model</span>和<span class="keyword">View</span>，来渲染视图</span><br><span class="line">      <span class="number">8.</span> 将渲染结果返回给客户端。</span><br><span class="line"></span><br><span class="line">Spring工作流程描述</span><br><span class="line">    为什么Spring只使用一个Servlet(DispatcherServlet)来处理所有请求？</span><br><span class="line">     详细见J2EE设计模式-前端控制模式</span><br><span class="line">    Spring为什么要结合使用HandlerMapping以及HandlerAdapter来处理<span class="keyword">Handler</span>?</span><br><span class="line">    符合面向对象中的单一职责原则，代码架构清晰，便于维护，最重要的是代码可复用性高。如HandlerAdapter可能会被用于处理多种<span class="keyword">Handler</span>。</span><br></pre></td></tr></table></figure><h4 id="springmvc-与struts2对比"><a class="markdownIt-Anchor" href="#springmvc-与struts2对比"></a> springmvc 与struts2对比</h4><ul><li><p>struts2是类级别的拦截， 一个类对应一个request上下文，<br>springmvc是方法级别的拦截，一个方法对应一个request上下文，而方法同时又跟一个url对应<br>所以说从架构本身上 spring3 mvc就容易实现restful url<br>而struts2的架构实现起来要费劲<br>因为struts2 action的一个方法可以对应一个url<br>而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了</p></li><li><p>spring3mvc的方法之间基本上独立的，独享request response数据<br>请求数据通过参数获取，处理结果通过ModelMap交回给框架<br>方法之间不共享变量<br>而struts2搞的就比较乱，虽然方法之间也是独立的，但其所有Action变量是共享的<br>这不会影响程序运行，却给我们编码 读程序时带来麻烦</p></li><li><p>由于Struts2需要针对每个Request进行封装，把Request，Session等Servlet生命周期的变量封装成一个一个Map，<br>供给每个Action使用，并保证线程安全。所以在原则上，是比较耗费内存的.</p></li><li><p>运行性能上：<br>Jsp+servlet&gt;struts1&gt;spring mvc&gt;struts2+freemarker&gt;&gt;struts2,ognl,值栈。<br>开发效率上,基本正好相反。值得强调的是，spring mvc开发效率和struts2不相上下。<br>Struts2的性能低的原因是因为OGNL和值栈造成的。所以，如果你的系统并发量高，可以使用freemaker进行显示，而不是采用OGNL和值栈。这样，在性能上会有相当大得提高。</p></li><li><p>Struts2的优点<br>Struts2 是一个相当强大的Java Web开源框架，是一个基于POJO的Action的MVC Web框架。它基于当年的Webwork和XWork框架，继承其优点，同时做了相当的改进。<br>1、Struts2基于MVC架构,框架结构清晰，开发流程一目了然，开发人员可以很好的掌控开发的过程。(开发人员可以把大部分关注点转移到业务逻辑的实现上)<br>2、使用OGNL进行参数传递。(使用标签可以更方便的访问各个域或者参数的值)<br>3、强大的拦截器.(异常处理，文件上传，登录验证，权限验证)</p></li></ul><h4 id="看完了spring是什么再来看看spring有哪些优点"><a class="markdownIt-Anchor" href="#看完了spring是什么再来看看spring有哪些优点"></a> 看完了Spring是什么，再来看看Spring有哪些优点</h4><p>Spring是一个轻量级的ioc(控制反转)和AOP(依赖注入)容器框架。</p><ul><li>使用Spring的IOC容器，将对象之间的依赖关系交给Spring，降低组件之间的耦合性，让我们更专注于应用逻辑</li><li>可以提供众多服务，事务管理，WS等。</li><li>AOP的很好支持，方便面向切面编程。</li><li>对主流的框架提供了很好的集成支持，如hibernate,Struts2,JPA等</li><li>Spring DI机制降低了业务对象替换的复杂性。</li><li>Spring属于低侵入，代码污染极低。</li><li>Spring的高度可开放性，并不强制依赖于Spring，开发者可以自由选择Spring部分或全部</li></ul><h4 id="hibernate优点"><a class="markdownIt-Anchor" href="#hibernate优点"></a> Hibernate优点</h4><ul><li>对象/关系数据库映射(ORM)<br>它使用时只需要操纵对象，使开发更对象化，抛弃了数据库中心的思想，完全的面向对象思想</li><li>透明持久化(persistent)<br>带有持久化状态的、具有业务功能的单线程对象，此对象生存期很短。这些对象可能是普通的JavaBeans/POJO，这个对象没有实现第三方框架或者接口，唯一特殊的是他们正与（仅仅一个）Session相关联。一旦这个Session被关闭，这些对象就会脱离持久化状态，这样就可被应用程序的任何层自由使用。（例如，用作跟表示层打交道的数据传输对象。）</li><li>事务Transaction(org.hibernate.Transaction)<br>应用程序用来指定原子操作单元范围的对象，它是单线程的，生命周期很短。它通过抽象将应用从底层具体的JDBC、JTA以及CORBA事务隔离开。某些情况下，一个Session之内可能包含多个Transaction对象。尽管是否使用该对象是可选的，但无论是使用底层的API还是使用Transaction对象，事务边界的开启与关闭是必不可少的。</li><li>它没有侵入性，即所谓的轻量级框架</li><li>移植性会很好</li><li>缓存机制，提供一级缓存和二级缓存</li><li>简洁的HQL编程</li></ul><h4 id="hibernate缺点"><a class="markdownIt-Anchor" href="#hibernate缺点"></a> Hibernate缺点</h4><ul><li>Hibernate在批量数据处理时有弱势</li><li>针对单一对象简单的增删查改，适合于Hibernate,而对于批量的修改，删除，不适合用Hibernate,这也是OR框架的弱点；要使用数据库的特定优化机制的时候，不适合用Hibernate<br>这里有更详细的：<br><a href="http://blog.sina.com.cn/s/blog_4fef5df10100nxmm.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_4fef5df10100nxmm.html</a><ul><li>Hibernate的优缺点：<br>优点：1、程序更加面向对象；<br>2、提高了生产率；<br>3、方便移植（修改配置文件）；<br>4、无侵入性。<br>缺点：<br>1、效率比JDBC略差；<br>2、不适合批量操作。</li></ul></li></ul><h4 id="hibernate适用场景"><a class="markdownIt-Anchor" href="#hibernate适用场景"></a> hibernate适用场景</h4><p>hibernate只适合做中小型项目,因为其性能是个大问题,ps:当然能把hibernate性能优化的很好是例外,</p><h4 id="hibernate有四种查询方案"><a class="markdownIt-Anchor" href="#hibernate有四种查询方案"></a> Hibernate有四种查询方案：</h4><ul><li>get,load方法，根据id查找对象;   注:区别(1) .get是直接到数据库查询;load是生成一个代理,用的时候在去查,性能好点   2). get使用id获取对象不存在,报null指针异常, load不会)</li><li>HQL–hibernate query language（查询对象：Query)</li><li>Criteria–标准查询语言（查询对象：Criteria，查询条件：Criterion）</li><li>通过sql来查（查询对象：SQLQuery）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;为什么使用handleradapter&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#为什么使用handleradapter&quot;&gt;&lt;/a&gt; 为什么使用HandlerAdapter?&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    SpringMV
      
    
    </summary>
    
      <category term="技术原理" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="技术原理" scheme="https://jjeian.github.io/tags/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>线程池简单用法</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/%E7%AE%80%E5%8D%95%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%94%A8%E6%B3%95/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/简单线程池用法/</id>
    <published>2019-08-20T13:37:42.135Z</published>
    <updated>2019-08-20T05:22:44.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="高并发多线程插入数据写法示例"><a class="markdownIt-Anchor" href="#高并发多线程插入数据写法示例"></a> 高并发多线程插入数据写法示例</h2><h3 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 固定声明10个线程</span></span><br><span class="line"><span class="keyword">private</span>  ExecutorService executorService = <span class="module-access"><span class="module"><span class="identifier">Executors</span>.</span></span><span class="keyword">new</span> <span class="constructor">FixedThreadPool(10)</span>;</span><br><span class="line"><span class="keyword">private</span> ThreadPoolExecutor executor = (ThreadPoolExecutor)executorService;</span><br><span class="line"><span class="comment">// 使用队列插入数据，后面如果改造成批处理之类的也好执行</span></span><br><span class="line"><span class="keyword">private</span> LinkedBlockingDeque&lt;DataModel&gt; queue = <span class="keyword">new</span> LinkedBlockingDeque&lt;DataModel&gt;<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> void  insert<span class="constructor">Record(DataModel <span class="params">dataModel</span>)</span>&#123;</span><br><span class="line">queue.add(queryModel);</span><br><span class="line">InsertRecordThread task = <span class="keyword">new</span> <span class="constructor">InsertRecordThread(<span class="params">jjgExamQuesLoadDao</span>, <span class="params">queue</span>)</span>;</span><br><span class="line">executor.execute(task);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  这里不用executor.shutdown(),关闭线程池 ， 因为线程池一直开着，没有就不会启用，用就可以直接执行， 不要将线程池关闭。</span></span><br></pre></td></tr></table></figure><h3 id="线程执行类"><a class="markdownIt-Anchor" href="#线程执行类"></a> 线程执行类</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public class  InsertRecordThread  implements  Runnable&#123;</span><br><span class="line"></span><br><span class="line">private  JjgExamQuesLoadDao   jjgExamQuesLoadDao;</span><br><span class="line"></span><br><span class="line">private  LinkedBlockingDeque&lt;DataModel&gt;  queue;</span><br><span class="line"></span><br><span class="line">public  InsertRecordThread(JjgExamQuesLoadDao jjg , LinkedBlockingDeque&lt;DataModel&gt; queue)&#123;</span><br><span class="line">this.jjgExamQuesLoadDao = jjg;</span><br><span class="line">this.queue = queue;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line">public void  <span class="builtin-name">run</span>()&#123;</span><br><span class="line">try&#123;</span><br><span class="line">DataModel event = queue.poll();</span><br><span class="line">jjgExamQuesLoadDao.insertAnswerRecord(event);</span><br><span class="line">&#125;catch(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>到此项目结束， 之前因为不太会用多线程，总感觉会出现问题，不敢用，其实用多了，考虑周全也没什么问题， 而且效率还会大大提升。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;高并发多线程插入数据写法示例&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#高并发多线程插入数据写法示例&quot;&gt;&lt;/a&gt; 高并发多线程插入数据写法示例&lt;/h2&gt;
&lt;h3 id=&quot;使用方法&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https://jjeian.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java模拟多ip请求</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/%E6%A8%A1%E4%BB%BF%E5%A4%9Aip%E5%B9%B6%E5%8F%91%E8%AE%BF%E9%97%AE/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/模仿多ip并发访问/</id>
    <published>2019-08-20T13:37:42.133Z</published>
    <updated>2019-08-21T04:32:32.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模仿多ip并发访问某个地址"><a class="markdownIt-Anchor" href="#模仿多ip并发访问某个地址"></a> 模仿多ip并发访问某个地址</h2><p>package url_demo;<br>import java.io.BufferedReader;<br>import java.io.IOException;<br>import java.io.InputStreamReader;<br>import java.io.PrintWriter;<br>import java.net.URL;<br>import java.net.URLConnection;<br>import java.util.Random;</p><p>public class HttpUtilTest {</p><pre><code>private int index = 0;public String sendPost(String url, String param) {PrintWriter out = null;BufferedReader in = null;String result = &quot;&quot;;try {URL realUrl = new URL(url);URLConnection conn = realUrl.openConnection();// 随机生成ipString ip = randIP();conn.setRequestProperty(&quot;X-Forwarded-For&quot;, ip);conn.setRequestProperty(&quot;HTTP_X_FORWARDED_FOR&quot;, ip);conn.setRequestProperty(&quot;HTTP_CLIENT_IP&quot;, ip);conn.setRequestProperty(&quot;REMOTE_ADDR&quot;, ip);conn.setRequestProperty(&quot;Host&quot;, &quot;&quot;);conn.setRequestProperty(&quot;Connection&quot;, &quot;keep-alive&quot;);conn.setRequestProperty(&quot;Content-Length&quot;, &quot;17&quot;);conn.setRequestProperty(&quot;Accept&quot;, &quot;application/json&quot;);conn.setRequestProperty(&quot;Origin&quot;, &quot;ORIGIN&quot;);conn.setRequestProperty(&quot;User-Agent&quot;,&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot;);conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);conn.setRequestProperty(&quot;Referer&quot;, &quot;REFERER&quot;);conn.setRequestProperty(&quot;Accept-Encoding&quot;, &quot;gzip, deflate&quot;);conn.setRequestProperty(&quot;Accept-Language&quot;, &quot;zh-CN,zh;q=0.8,en;q=0.6,ja;q=0.4,pt;q=0.2&quot;);conn.setDoOutput(true);conn.setDoInput(true);out = new PrintWriter(conn.getOutputStream());out.print(param);out.flush();in = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;while ((line = in.readLine()) != null) {result += line;}synchronized (this) {DemoUtl.index = DemoUtl.index + 1;}System.out.println(&quot;第&quot; + DemoUtl.index + &quot;次访问； --&gt;  || 当前线程：&quot; + param + &quot;  || 请求成功！ || 模拟ip: &quot; + ip+ &quot; || 返回结果： &quot; + result.toString().hashCode());} catch (Exception e) {// System.out.println(&quot;发送 POST 请求出现异常！&quot; + e);// e.printStackTrace();} finally {try {if (out != null) {out.close();}if (in != null) {in.close();}} catch (IOException ex) {ex.printStackTrace();}}return result;}public static String randIP() {Random random = new Random(System.currentTimeMillis());return (random.nextInt(255) + 1) + &quot;.&quot; + (random.nextInt(255) + 1) + &quot;.&quot; + (random.nextInt(255) + 1) + &quot;.&quot;+ (random.nextInt(255) + 1);}</code></pre><p>}</p><p>package url_demo;</p><p>import java.util.Random;</p><p>public class DemoUtl {</p><pre><code>public static int index = 0;public static void main(String[] args) throws InterruptedException {try {for (int i = 0; i &lt; 100000; i++) {Thread.sleep((new Random()).nextInt(200) + 100);new Thread(new Runnable() {@Overridepublic void run() {for (int j = 0; j &lt; 100000; j++) {try {Thread.sleep((new Random()).nextInt(3200) + 1500);HttpUtilTest tt = new HttpUtilTest();tt.sendPost(&quot;https://www.baidu.com&quot;,Thread.currentThread().getName());} catch (InterruptedException e) {e.printStackTrace();}}}}).start();}} catch (Exception e) {e.printStackTrace();}}</code></pre><p>}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;模仿多ip并发访问某个地址&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#模仿多ip并发访问某个地址&quot;&gt;&lt;/a&gt; 模仿多ip并发访问某个地址&lt;/h2&gt;
&lt;p&gt;package url_demo;&lt;br&gt;
import java.io.Bu
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https://jjeian.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Mq集群方式搭建</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/rocketmq%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/rocketmq简单搭建/</id>
    <published>2019-08-20T13:37:42.130Z</published>
    <updated>2019-08-20T05:21:50.181Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mq集群方式搭建"><a class="markdownIt-Anchor" href="#mq集群方式搭建"></a> mq集群方式搭建</h2><p>有段时间没写这些技术文章了， 今天抽空写一点，不然自己都快忘记了<br>这篇文章记录了rocketmq 集群方式搭建的过程， 也是自己半天的成果记录吧！ 感兴趣的朋友点个赞在走呗！</p><p>好了，废话不多，下面开搞。</p><p>本文章参考https://blog.csdn.net/qq_35400008/article/details/82467562#comments 这个博客文章编写</p><h3 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h3><p>第一步：关闭要搭建的所有机器的防火墙<br>第二步：每台机器执行下如下步骤</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@ma01</span> ~]<span class="meta"># vim /etc/sysconfig/selinux</span></span><br><span class="line">......</span><br><span class="line">SELINUX=disabled</span><br><span class="line">[root<span class="symbol">@ma01</span>~]<span class="meta"># setenforce 0</span></span><br><span class="line">[root<span class="symbol">@ma01</span>~]<span class="meta"># getenforce</span></span><br></pre></td></tr></table></figure><p>第三步：所有机器装好jdk,  maven , zip , unzip , ssh 免密登录</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">配置crt连接： <span class="symbol">https:</span>/<span class="regexp">/blog.csdn.net/cmqwan</span><span class="regexp">/article/details</span><span class="regexp">/61932792</span></span><br><span class="line"><span class="regexp">安装maven参考老哥博客:  https:/</span><span class="regexp">/www.cnblogs.com/clicli</span><span class="regexp">/p/</span><span class="number">5866390</span>.html</span><br><span class="line">安装zip,unzip参考： <span class="symbol">http:</span>/<span class="regexp">/www.rpmfind.net/linux</span><span class="regexp">/rpm2html/search</span>.php?query=zip&amp;submit=Search+...&amp;system=&amp;arch=</span><br><span class="line">安装ssh参考： <span class="symbol">https:</span>/<span class="regexp">/blog.csdn.net/m</span>0_37590135/article/details/<span class="number">74275859</span></span><br><span class="line">jdk自己百度哈， 很多参考博客的！</span><br></pre></td></tr></table></figure><p>第四步： 如下命令是ssh机器之间copy用的命令</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /home/administrator/test/ <span class="symbol">root@</span><span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>:/root/</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2019040222574667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第五步： 下载完成后， 解压</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">unzip</span>  <span class="selector-tag">rocketmq-all-4</span><span class="selector-class">.4</span><span class="selector-class">.0-bin-release</span><span class="selector-class">.zip</span></span><br></pre></td></tr></table></figure><p>第六步：进入解压后的文件夹rocketmq-bin4.4.0 ,  在文件夹里面新建logs , data/store, data2/store 目录<br><img src="https://img-blog.csdnimg.cn/20190402231033137.png" alt="在这里插入图片描述"><br>第七步：安装顺序修改bin下面的几个启动文件， 因默认配置内存空间太大，本地启动会报错</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. vim runbroker.sh    对应地方更改为  -server -Xms512m -Xmx512m -Xmn256m</span><br><span class="line">2. vim runserver.sh (同样的道理） -server -Xms512m -Xmx512m -Xmn126m -XX:<span class="attribute">PermSize</span>=128m -XX:<span class="attribute">MaxPermSize</span>=320m</span><br><span class="line">3. vim tools.sh           -server -Xms256m -Xmx256m -Xmn128m -XX:<span class="attribute">PermSize</span>=128m -XX:<span class="attribute">MaxPermSize</span>=128m</span><br></pre></td></tr></table></figure><p>第八步：到rocketmq-bin4.4.0/conf/2m-2s-async 下 修改这四个文件<br><img src="https://img-blog.csdnimg.cn/20190402231408475.png" alt="在这里插入图片描述"></p><h3 id="注-这里说明下哈-我是用了三台机器所有配置了130-131和132一样的你们2台机器完全可以用131和132配置一台就可以了哈ip自行更改哈"><a class="markdownIt-Anchor" href="#注-这里说明下哈-我是用了三台机器所有配置了130-131和132一样的你们2台机器完全可以用131和132配置一台就可以了哈ip自行更改哈"></a> 注： 这里说明下哈， 我是用了三台机器，所有配置了130， 131和132一样的，你们2台机器完全可以用，131和132配置一台就可以了哈，ip自行更改哈。</h3><p>第九步： 130主机器修改如下配置文件，  broker-a.properties  broker-b-s.properties两个文件 内容分别如下<br>broker-a.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">brokerClusterName</span>=RocketMQCluster</span><br><span class="line"><span class="attr">brokerName</span>=broker-a</span><br><span class="line"><span class="attr">brokerId</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">48</span></span><br><span class="line"><span class="attr">brokerRole</span>=ASYNC_MASTER</span><br><span class="line"><span class="attr">flushDiskType</span>=ASYNC_FLUSH</span><br><span class="line"><span class="comment">##Broker 对外服务的监听端口</span></span><br><span class="line"><span class="attr">listenPort</span>=<span class="number">10911</span></span><br><span class="line"><span class="comment">#nameserver地址，分号分割</span></span><br><span class="line"><span class="attr">namesrvAddr</span>=<span class="number">192.168</span>.<span class="number">175.130</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.131</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.132</span>:<span class="number">9876</span></span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line"><span class="attr">defaultTopicQueueNums</span>=<span class="number">4</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateTopicEnable</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateSubscriptionGroup</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">brokerIP1</span>=<span class="number">192.168</span>.<span class="number">175.130</span></span><br><span class="line"><span class="attr">storePathRootDir</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store</span><br><span class="line"><span class="attr">storePathCommitLog</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/commitlog</span><br><span class="line"><span class="comment"># 消费队列存储路径存储路径</span></span><br><span class="line"><span class="attr">storePathConsumerQueue</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line"><span class="attr">storePathIndex</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line"><span class="attr">storeCheckpoint</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line"><span class="attr">abortFile</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/abort</span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">120</span></span><br><span class="line"><span class="comment"># commitLog每个文件的大小默认1G</span></span><br><span class="line"><span class="attr">mapedFileSizeCommitLog</span>=<span class="number">1073741824</span></span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存300W条，根据业务情况调整</span></span><br><span class="line"><span class="attr">mapedFileSizeConsumeQueue</span>=<span class="number">3000000</span></span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line"><span class="comment">#diskMaxUsedSpaceRatio=88</span></span><br></pre></td></tr></table></figure><p>broker-b-s.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">brokerClusterName</span>=RocketMQCluster</span><br><span class="line"><span class="attr">brokerName</span>=broker-b</span><br><span class="line"><span class="attr">brokerId</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">48</span></span><br><span class="line"><span class="attr">brokerRole</span>=SLAVE</span><br><span class="line"><span class="attr">flushDiskType</span>=ASYNC_FLUSH</span><br><span class="line"><span class="attr">listenPort</span>=<span class="number">10921</span></span><br><span class="line"><span class="comment">#nameserver地址，分号分割</span></span><br><span class="line"><span class="attr">namesrvAddr</span>=<span class="number">192.168</span>.<span class="number">175.130</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.131</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.132</span>:<span class="number">9876</span></span><br><span class="line"><span class="attr">brokerIP1</span>=<span class="number">192.168</span>.<span class="number">175.130</span></span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line"><span class="attr">defaultTopicQueueNums</span>=<span class="number">4</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateTopicEnable</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateSubscriptionGroup</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">storePathRootDir</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store</span><br><span class="line"><span class="attr">storePathCommitLog</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/commitlog2</span><br><span class="line"><span class="comment"># 消费队列存储路径存储路径</span></span><br><span class="line"><span class="attr">storePathConsumerQueue</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/consumequeue2</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line"><span class="attr">storePathIndex</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/index2</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line"><span class="attr">storeCheckpoint</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/checkpoint2</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line"><span class="attr">abortFile</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/abort2</span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">120</span></span><br><span class="line"><span class="comment"># commitLog每个文件的大小默认1G</span></span><br><span class="line"><span class="attr">mapedFileSizeCommitLog</span>=<span class="number">1073741824</span></span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存300W条，根据业务情况调整</span></span><br><span class="line"><span class="attr">mapedFileSizeConsumeQueue</span>=<span class="number">3000000</span></span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line"><span class="comment">#diskMaxUsedSpaceRatio=88</span></span><br></pre></td></tr></table></figure><p>第十步： 131， 132 机器只修改 broker-b.properties 和broker-a-s.properties 内容分别如下：<br>broker-b.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="attr">brokerClusterName</span>=RocketMQCluster</span><br><span class="line"><span class="attr">brokerName</span>=broker-b</span><br><span class="line"><span class="attr">brokerId</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">48</span></span><br><span class="line"><span class="attr">brokerRole</span>=ASYNC_MASTER</span><br><span class="line"><span class="attr">flushDiskType</span>=ASYNC_FLUSH</span><br><span class="line"><span class="attr">listenPort</span>=<span class="number">10911</span></span><br><span class="line"><span class="comment">#nameserver地址，分号分割</span></span><br><span class="line"><span class="attr">namesrvAddr</span>=<span class="number">192.168</span>.<span class="number">175.130</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.131</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.132</span>:<span class="number">9876</span></span><br><span class="line"><span class="attr">brokerIP1</span>=<span class="number">192.168</span>.<span class="number">175.131</span></span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line"><span class="attr">defaultTopicQueueNums</span>=<span class="number">4</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateTopicEnable</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateSubscriptionGroup</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storePathRootDir</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store</span><br><span class="line"><span class="attr">storePathCommitLog</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/commitlog</span><br><span class="line"><span class="comment"># 消费队列存储路径存储路径</span></span><br><span class="line"><span class="attr">storePathConsumerQueue</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line"><span class="attr">storePathIndex</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line"><span class="attr">storeCheckpoint</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line"><span class="attr">abortFile</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data/store/abort</span><br><span class="line"><span class="comment">#限制的消息大小</span></span><br><span class="line"><span class="attr">maxMessageSize</span>=<span class="number">65536</span></span><br><span class="line"><span class="comment">#flushCommitLogLeastPages=4</span></span><br><span class="line"><span class="comment">#flushConsumeQueueLeastPages=2</span></span><br><span class="line"><span class="comment">#flushCommitLogThoroughInterval=10000</span></span><br><span class="line"><span class="comment">#flushConsumeQueueThoroughInterval=60000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">120</span></span><br><span class="line"><span class="comment"># commitLog每个文件的大小默认1G</span></span><br><span class="line"><span class="attr">mapedFileSizeCommitLog</span>=<span class="number">1073741824</span></span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存300W条，根据业务情况调整</span></span><br><span class="line"><span class="attr">mapedFileSizeConsumeQueue</span>=<span class="number">3000000</span></span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line"><span class="comment">#diskMaxUsedSpaceRatio=88</span></span><br></pre></td></tr></table></figure><p>broker-a-s.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="attr">brokerClusterName</span>=RocketMQCluster</span><br><span class="line"><span class="attr">brokerName</span>=broker-a</span><br><span class="line"><span class="attr">brokerId</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">48</span></span><br><span class="line"><span class="attr">brokerRole</span>=SLAVE</span><br><span class="line"><span class="attr">flushDiskType</span>=ASYNC_FLUSH</span><br><span class="line"></span><br><span class="line"><span class="attr">listenPort</span>=<span class="number">10921</span></span><br><span class="line"><span class="attr">namesrvAddr</span>=<span class="number">192.168</span>.<span class="number">175.130</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.131</span>:<span class="number">9876</span>;<span class="number">192.168</span>.<span class="number">175.132</span>:<span class="number">9876</span></span><br><span class="line"><span class="attr">brokerIP1</span>=<span class="number">192.168</span>.<span class="number">175.131</span></span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line"><span class="attr">defaultTopicQueueNums</span>=<span class="number">4</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateTopicEnable</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line"><span class="attr">autoCreateSubscriptionGroup</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storePathRootDir</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store</span><br><span class="line"><span class="attr">storePathCommitLog</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/commitlog</span><br><span class="line"><span class="comment"># 消费队列存储路径存储路径</span></span><br><span class="line"><span class="attr">storePathConsumerQueue</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line"><span class="attr">storePathIndex</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line"><span class="attr">storeCheckpoint</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line"><span class="attr">abortFile</span>=/opt/local/data/install/rocketmq-bin4.<span class="number">4.0</span>/data2/store/abort</span><br><span class="line"><span class="comment">#限制的消息大小</span></span><br><span class="line"><span class="attr">maxMessageSize</span>=<span class="number">65536</span></span><br><span class="line"><span class="comment">#flushCommitLogLeastPages=4</span></span><br><span class="line"><span class="comment">#flushConsumeQueueLeastPages=2</span></span><br><span class="line"><span class="comment">#flushCommitLogThoroughInterval=10000</span></span><br><span class="line"><span class="comment">#flushConsumeQueueThoroughInterval=60000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line"><span class="attr">deleteWhen</span>=<span class="number">04</span></span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line"><span class="attr">fileReservedTime</span>=<span class="number">120</span></span><br><span class="line"><span class="comment"># commitLog每个文件的大小默认1G</span></span><br><span class="line"><span class="attr">mapedFileSizeCommitLog</span>=<span class="number">1073741824</span></span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span><br><span class="line"><span class="attr">mapedFileSizeConsumeQueue</span>=<span class="number">300000</span></span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line"><span class="comment">#diskMaxUsedSpaceRatio=88</span></span><br></pre></td></tr></table></figure><p>第十一步： 启动</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">三台都执行：</span><br><span class="line"></span><br><span class="line">nohup sh bin/mqnamesrv &gt; ./logs/namesrvrun<span class="selector-class">.log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="number">130</span>机器执行： </span><br><span class="line">nohup sh bin/mqbroker -c conf/<span class="number">2</span>m-<span class="number">2s</span>-async/broker-<span class="selector-tag">a</span><span class="selector-class">.properties</span> -n<span class="string">"192.168.175.130:9876;192.168.175.131:9876;192.168.175.132:9876"</span> &gt; ./logs/broker-<span class="selector-tag">a</span><span class="selector-class">.log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line">nohup sh bin/mqbroker -c conf/<span class="number">2</span>m-<span class="number">2s</span>-async/broker-b-s<span class="selector-class">.properties</span> -n<span class="string">"192.168.175.130:9876;192.168.175.131:9876;192.168.175.132:9876"</span> &gt; ./logs/broker-b-s<span class="selector-class">.log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="number">131</span>， <span class="number">132</span> 机器执行：</span><br><span class="line">nohup sh bin/mqbroker -c conf/<span class="number">2</span>m-<span class="number">2s</span>-async/broker-<span class="selector-tag">b</span><span class="selector-class">.properties</span>  -n<span class="string">"192.168.175.130:9876;192.168.175.131:9876;192.168.175.132:9876"</span> &gt; ./logs/broker-<span class="selector-tag">b</span><span class="selector-class">.log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line">nohup sh bin/mqbroker -c conf/<span class="number">2</span>m-<span class="number">2s</span>-async/broker-a-s<span class="selector-class">.properties</span> -n<span class="string">"192.168.175.130:9876;192.168.175.131:9876;192.168.175.132:9876"</span> &gt; ./logs/broker-a-s<span class="selector-class">.log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><p>执行之后，jps结果，有两个brokerstartup就行了， 如果报错的化，看下自己建的logs文件夹日志<br><img src="https://img-blog.csdnimg.cn/20190402232247969.png" alt="在这里插入图片描述"></p><h4 id="好了到此rocketmq-基础配置就搭建起来了下面在讲一讲实战代码"><a class="markdownIt-Anchor" href="#好了到此rocketmq-基础配置就搭建起来了下面在讲一讲实战代码"></a> 好了，到此rocketmq 基础配置就搭建起来了，下面在讲一讲实战代码</h4><hr><h3 id="导入依赖包"><a class="markdownIt-Anchor" href="#导入依赖包"></a> 导入依赖包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.rocketmq/rocketmq-client --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.rocketmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rocketmq-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.rocketmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rocketmq-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mq消息发送方"><a class="markdownIt-Anchor" href="#mq消息发送方"></a> mq消息发送方</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.io.UnsupportedEncodingException;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.client.exception.MQBrokerException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.client.exception.MQClientException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.client.producer.DefaultMQProducer;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.client.producer.SendResult;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.common.message.Message;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.remoting.common.RemotingHelper;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.apache.rocketmq.remoting.exception.RemotingException;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息发送者</span></span><br><span class="line"><span class="comment"> * @author LELE</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) throws MQClientException, InterruptedException &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明并初始化一个producer</span></span><br><span class="line"><span class="comment">// 需要一个producer group名字作为构造方法的参数，这里为producer1</span></span><br><span class="line">DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">"producer1"</span>);</span><br><span class="line">producer.setVipChannelEnabled(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">// 设置NameServer地址,此处应改为实际NameServer地址，多个地址之间用；分隔</span></span><br><span class="line"><span class="comment">// NameServer的地址必须有</span></span><br><span class="line"><span class="comment">// producer.setClientIP("xxxx");</span></span><br><span class="line"><span class="comment">// producer.setInstanceName("Producer");</span></span><br><span class="line">producer.setNamesrvAddr(<span class="string">"192.168.175.130:9876;192.168.175.131:9876;192.168.175.132:9876"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用start()方法启动一个producer实例</span></span><br><span class="line">producer.start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送1条消息到Topic为TopicTest，tag为TagA，消息内容为“Hello RocketMQ”拼接上i的值</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;<span class="number">30000</span>;i++) &#123;</span><br><span class="line"><span class="comment">// 封装消息</span></span><br><span class="line">Message msg = <span class="keyword">new</span> Message(<span class="string">"TopicTest"</span>, <span class="comment">// topic</span></span><br><span class="line"><span class="string">"TagA"</span>, <span class="comment">// tag</span></span><br><span class="line">(<span class="string">"Hello RocketMQ--------"</span>+i).getBytes(RemotingHelper.DEFAULT_CHARSET)<span class="comment">// body</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">// 调用producer的send()方法发送消息</span></span><br><span class="line"><span class="comment">// 这里调用的是同步的方式，所以会有返回结果</span></span><br><span class="line">SendResult sendResult = producer.send(msg);</span><br><span class="line"><span class="comment">// 打印返回结果</span></span><br><span class="line">System.out.println(sendResult);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (RemotingException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (MQBrokerException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发送完消息之后，调用shutdown()方法关闭producer</span></span><br><span class="line">System.out.println(<span class="string">"send success"</span>);</span><br><span class="line">producer.shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="消息消费者"><a class="markdownIt-Anchor" href="#消息消费者"></a> 消息消费者</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.consumer.DefaultMQPushConsumer;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.exception.MQClientException;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.common.consumer.ConsumeFromWhere;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.common.message.MessageExt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息接收者， 需要服务器启动mq服务</span></span><br><span class="line"><span class="comment"> * @author LELE</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="type">String</span>[] args) <span class="keyword">throws</span> <span class="type">MQClientException</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明并初始化一个consumer</span></span><br><span class="line"><span class="comment">// 需要一个consumer group名字作为构造方法的参数，这里为consumer1</span></span><br><span class="line"><span class="type">DefaultMQPushConsumer</span> consumer = new <span class="type">DefaultMQPushConsumer</span>(<span class="string">"consumer1"</span>);</span><br><span class="line"><span class="comment">// consumer.setVipChannelEnabled(false);</span></span><br><span class="line"><span class="comment">// 同样也要设置NameServer地址</span></span><br><span class="line">consumer.setNamesrvAddr(<span class="string">"192.168.175.130:9876;192.168.175.131:9876;192.168.175.132:9876"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里设置的是一个consumer的消费策略</span></span><br><span class="line"><span class="comment">// CONSUME_FROM_LAST_OFFSET 默认策略，从该队列最尾开始消费，即跳过历史消息</span></span><br><span class="line"><span class="comment">// CONSUME_FROM_FIRST_OFFSET 从队列最开始开始消费，即历史消息（还储存在broker的）全部消费一遍</span></span><br><span class="line"><span class="comment">// CONSUME_FROM_TIMESTAMP 从某个时间点开始消费，和setConsumeTimestamp()配合使用，默认是半个小时以前</span></span><br><span class="line">consumer.setConsumeFromWhere(<span class="type">ConsumeFromWhere</span>.<span class="type">CONSUME_FROM_FIRST_OFFSET</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置consumer所订阅的Topic和Tag，*代表全部的Tag</span></span><br><span class="line">consumer.subscribe(<span class="string">"TopicTest"</span>, <span class="string">"*"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个Listener，主要进行消息的逻辑处理</span></span><br><span class="line">consumer.registerMessageListener(new <span class="type">MessageListenerConcurrently</span>() &#123;</span><br><span class="line"></span><br><span class="line">@<span class="type">Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">ConsumeConcurrentlyStatus</span> consumeMessage(<span class="type">List</span>&lt;<span class="type">MessageExt</span>&gt; msgs, <span class="type">ConsumeConcurrentlyContext</span> context) &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">MessageExt</span> msg = msgs.<span class="keyword">get</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (msg.getTopic().equals(<span class="string">"TopicTest"</span>)) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行TopicTest1的消费逻辑</span></span><br><span class="line"></span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"TagA:"</span> + new <span class="type">String</span>(msg.getBody()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="type">Thread</span>.currentThread().getName() + <span class="string">" Receive New Messages: "</span> + msgs.size()</span><br><span class="line">+ <span class="string">"----------------------------------------------------------------------------------"</span>);</span><br><span class="line"><span class="comment">// 返回消费状态</span></span><br><span class="line"><span class="comment">// CONSUME_SUCCESS 消费成功</span></span><br><span class="line"><span class="comment">// RECONSUME_LATER 消费失败，需要稍后重新消费</span></span><br><span class="line"><span class="keyword">return</span> <span class="type">ConsumeConcurrentlyStatus</span>.<span class="type">CONSUME_SUCCESS</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 调用start()方法启动consumer</span></span><br><span class="line">consumer.start();</span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"Consumer Started."</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动开始尽情玩耍吧，少年， 记得点赞哦！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mq集群方式搭建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#mq集群方式搭建&quot;&gt;&lt;/a&gt; mq集群方式搭建&lt;/h2&gt;
&lt;p&gt;有段时间没写这些技术文章了， 今天抽空写一点，不然自己都快忘记了&lt;br&gt;
这篇文章记录了rocketmq 集
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https://jjeian.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Oracle经典语法</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/oracle%E7%BB%8F%E5%85%B8%E8%AF%AD%E6%B3%95/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/oracle经典语法/</id>
    <published>2019-08-20T13:37:42.127Z</published>
    <updated>2019-08-20T05:26:49.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="各种树操作-用来查询表中带有子父节点的信息"><a class="markdownIt-Anchor" href="#各种树操作-用来查询表中带有子父节点的信息"></a> 各种树操作， 用来查询表中带有子父节点的信息</h2><h3 id="oracle-树操作selectstart-withconnect-byprior"><a class="markdownIt-Anchor" href="#oracle-树操作selectstart-withconnect-byprior"></a> Oracle 树操作(select…start with…connect by…prior)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> m.org_id</span><br><span class="line"><span class="keyword">from</span> sm_organ m</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> m.org_id = <span class="string">'00000'</span></span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">prior</span> m.org_id = m.parent_org_id;  [查询org_id为‘00000’的所有父节点，并按倒叙排序]</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> root,root_leve,org_Id</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> sys_connect_by_path (org_id, <span class="string">'/'</span>) <span class="keyword">as</span> <span class="keyword">PATH</span>,<span class="keyword">connect_by_root</span>(org_id) <span class="keyword">as</span> root,<span class="keyword">connect_by_root</span>(org_leve) <span class="keyword">as</span> root_leve,t.*</span><br><span class="line"><span class="keyword">from</span> sm_ORGAN t</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> org_leve <span class="keyword">IN</span> (<span class="string">'3'</span>)</span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">NOCYCLE</span> parent_org_id = <span class="keyword">prior</span> org_id</span><br><span class="line">) a ;</span><br></pre></td></tr></table></figure><h3 id="模糊查询是连接符"><a class="markdownIt-Anchor" href="#模糊查询是连接符"></a> 模糊查询(||是连接符)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUB.AU_OPER LIKE '%'||<span class="comment">#auOper#||'%' AND</span></span><br></pre></td></tr></table></figure><h3 id="oracle数据库中日期进行比较"><a class="markdownIt-Anchor" href="#oracle数据库中日期进行比较"></a> oracle数据库中日期进行比较</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">createDate  = to_date(sysdate,'yy-MM-dd hh24:mi:ss')   </span><br><span class="line">或者直接比较    createDate &gt; '2013-09-08 00:00:00'   </span><br><span class="line">或者 createDate  = to_date('','yyyyMMdd')    </span><br><span class="line">或者  createDate = date'2016-09-09'</span><br></pre></td></tr></table></figure><h3 id="oracle数据库中chr-ascii-asciistr-convert函数的使用-nvl"><a class="markdownIt-Anchor" href="#oracle数据库中chr-ascii-asciistr-convert函数的使用-nvl"></a> Oracle数据库中chr()、ascii()、asciistr()、convert()函数的使用    ,nvl()</h3><ul><li>nvl(字段名,‘判断字段如果为空的话这里填你想要替换的值’)</li><li>to_date( NVL2(T1.txdonetime, substr(T1.txdonetime,0,14), ‘’),‘yyyy-MM-dd hh24:mi:ss’) txdonetime ,  varchar2类型日期转换date</li><li>nvl(字段,‘NA’)</li><li>意思如果字段为空则输出NA的字符串</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将查询字段中的name名称中部分汉字转换成想要的结果</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">replace</span>(</span><br><span class="line">            <span class="keyword">replace</span>(</span><br><span class="line">                  <span class="keyword">replace</span>(<span class="string">'xxxxxxxxxxxxxxxxxxxxx'</span>, <span class="string">''</span>|| <span class="keyword">chr</span>(<span class="number">15</span>xxxx92) || <span class="keyword">chr</span>(<span class="number">1524</span>xx81) ||<span class="keyword">chr</span>(<span class="number">1</span>xxxx521) || <span class="keyword">chr</span>(<span class="number">15</span>xxxx814) ||<span class="keyword">chr</span>(<span class="number">1</span>xxxx592) || <span class="string">''</span>, <span class="string">''</span>),</span><br><span class="line">                       <span class="string">''</span>|| <span class="keyword">chr</span>(<span class="number">1</span>xxxx02) || <span class="keyword">chr</span>(<span class="number">1</span>xxxx485) || <span class="keyword">chr</span>(<span class="number">149</span>xxxx48) || <span class="keyword">chr</span>(<span class="number">14</span>xxxx6) || <span class="keyword">chr</span>(<span class="number">153</span>xxxx92) || <span class="string">''</span>, <span class="string">''</span>),</span><br><span class="line">                       <span class="string">''</span>|| <span class="keyword">chr</span>(<span class="number">150</span>xxxx3) || <span class="keyword">chr</span>(<span class="number">15</span>xxxxx425) || <span class="keyword">chr</span>(x770xxx2) ||<span class="keyword">chr</span>(<span class="number">15</span>xxxx08) || <span class="string">''</span>, <span class="string">''</span>) ORG_xxxx</span><br><span class="line">  <span class="keyword">FROM</span> SMS_xxxxx ORG</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="number">1</span> = <span class="number">1</span></span><br><span class="line">   <span class="keyword">AND</span> ORG_xxxx = <span class="string">'0951'</span> ;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">select</span>   <span class="string">''</span>|| <span class="keyword">chr</span>(<span class="number">15252223392</span>) ||<span class="keyword">chr</span>(<span class="number">1225303592</span>) || <span class="string">''</span>  aa  <span class="keyword">from</span>  dual;  <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">select</span>  <span class="keyword">ascii</span>(<span class="string">'国'</span>) aa <span class="keyword">from</span> dual;    <span class="comment">-- 将汉字转为数字</span></span><br><span class="line"><span class="keyword">select</span>  <span class="keyword">chr</span>(<span class="number">15047613</span>)  bb  <span class="keyword">from</span>   dual;     <span class="comment">--将数字转为汉字</span></span><br><span class="line"><span class="keyword">select</span>   <span class="keyword">replace</span>(<span class="string">'111123224455'</span>, <span class="string">'22'</span> , <span class="string">'44'</span>)   aa  <span class="keyword">from</span>  dual;  <span class="comment">--替换字符串中的字符</span></span><br><span class="line"><span class="keyword">select</span>  asciistr(<span class="string">'国汉字之都'</span>)  aa <span class="keyword">from</span>  dual;     <span class="comment">--将一串字符串转为中文编码 \56FD\6C49\5B57\4E4B\90FD</span></span><br><span class="line"><span class="keyword">select</span>  <span class="keyword">convert</span>(<span class="string">'在中国'</span>,<span class="string">'zhs16gbk'</span>,<span class="string">'utf8'</span>) aa  <span class="keyword">from</span>    dual;   <span class="comment">--将字符串从一种字符转为另一种字符</span></span><br></pre></td></tr></table></figure><h3 id="使用-wm_concatususeer_id-函数可以将单组查询结果转为一列一行-数据中间用-分隔"><a class="markdownIt-Anchor" href="#使用-wm_concatususeer_id-函数可以将单组查询结果转为一列一行-数据中间用-分隔"></a> 使用 WM_CONCAT(us.USeER_ID)  函数可以将单组查询结果转为一列一行, 数据中间用 &quot; , &quot;分隔</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>   WM_CONCAT(us.USeER_ID) <span class="keyword">USERS</span>  <span class="keyword">from</span>  sm_euser  us   <span class="keyword">where</span>  us.oreg_id = <span class="string">'0200'</span> ;</span><br></pre></td></tr></table></figure><h3 id="建表之前先判断表是否存在-若存在则删除"><a class="markdownIt-Anchor" href="#建表之前先判断表是否存在-若存在则删除"></a> 建表之前先判断表是否存在 , 若存在,则删除</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">      <span class="keyword">num</span>   <span class="built_in">number</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">into</span> <span class="keyword">num</span> <span class="keyword">from</span> user_tables <span class="keyword">where</span> table_name = <span class="keyword">upper</span>(<span class="string">'sys_area'</span>) ;</span><br><span class="line">    if num &gt; 0 then</span><br><span class="line">        <span class="keyword">execute</span> <span class="keyword">immediate</span> <span class="string">'drop table sys_area'</span> ;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="使用oracle若信息存在则更新-若不存在-则插入-merge-into-大数据量的话可以使用这个优化"><a class="markdownIt-Anchor" href="#使用oracle若信息存在则更新-若不存在-则插入-merge-into-大数据量的话可以使用这个优化"></a> 使用oracle若信息存在,则更新, 若不存在, 则插入 [merge into 大数据量的话可以使用这个优化]</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> BOS_PARA_CONL_RULES a</span><br><span class="line"><span class="keyword">using</span> bos_para_codel_info b</span><br><span class="line"><span class="keyword">on</span> (a.modeel_no = b.model_no)</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">MATCHED</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">update</span></span><br><span class="line">     <span class="keyword">set</span> trade_system = <span class="comment">#tradeSystem#,</span></span><br><span class="line">         trade_name   = <span class="comment">#tradeName#,</span></span><br><span class="line">         note         = <span class="comment">#Note#,</span></span><br><span class="line">         system_basis = <span class="comment">#systemBasis#</span></span><br><span class="line">   <span class="keyword">where</span> b.modeel_no = <span class="comment">#modelNo#</span></span><br><span class="line"><span class="keyword">When</span> <span class="keyword">not</span> <span class="keyword">matched</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">insert</span></span><br><span class="line">    (TRADE_SYSTEM,</span><br><span class="line">     TRADE_NAME,</span><br><span class="line">     NOTE,</span><br><span class="line">     SYSTEM_BASIS)</span><br><span class="line">  <span class="keyword">values</span></span><br><span class="line">    (<span class="comment">#tradeSystem#,</span></span><br><span class="line">     <span class="comment">#tradeName#,</span></span><br><span class="line">     <span class="comment">#Note#,</span></span><br><span class="line">     <span class="comment">#systemBasis#) where b.modeel_no = #modelNo#</span></span><br></pre></td></tr></table></figure><h3 id="trunc-函数的用法"><a class="markdownIt-Anchor" href="#trunc-函数的用法"></a> TRUNC 函数的用法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1 </span></span><br><span class="line">TRUNC（date[,fmt]）</span><br><span class="line">　TRUNC（TO_DATE（'24-Nov-1999 08:37 pm','dd-mon-yyyy hh:mi am'），'hh'） ='24-Nov-1999 08:00:00 am'</span><br><span class="line"></span><br><span class="line">　　trunc（sysdate,'yyyy'） <span class="comment">--返回当年第一天。</span></span><br><span class="line">　　trunc（sysdate,'mm'） <span class="comment">--返回当月第一天。</span></span><br><span class="line">　　trunc（sysdate,'d'） <span class="comment">--返回当前星期的第一天。</span></span><br><span class="line">　　trunc（sysdate,'dd'）<span class="comment">--返回当前年月日</span></span><br><span class="line"><span class="comment">--2</span></span><br><span class="line">TRUNC（for number）</span><br><span class="line">　TRUNC（number[,decimals]）</span><br><span class="line">　　其中：</span><br><span class="line">　　number 待做截取处理的数值</span><br><span class="line">　　decimals 指明需保留小数点后面的位数。可选项，忽略它则截去所有的小数部分</span><br><span class="line"></span><br><span class="line">　　下面是该函数的使用情况：</span><br><span class="line">　　TRUNC（89.985，2）=89.98</span><br><span class="line">　　TRUNC（89.985）=89</span><br><span class="line">　　TRUNC（89.985，-1）=80</span><br></pre></td></tr></table></figure><ul><li>注意：第二个参数可以为负数，表示为小数点左边指定位数后面的部分截去，即均以0记。与取整类似，比如参数为1即取整到十分位，如果是-1，则是取整到十位，以此类推。</li></ul><h3 id="oracle-trunc函数的用法"><a class="markdownIt-Anchor" href="#oracle-trunc函数的用法"></a> Oracle trunc()函数的用法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--日期</span></span><br><span class="line">1.select trunc(sysdate) from dual  <span class="comment">--2011-3-18  今天的日期为2011-3-18</span></span><br><span class="line">2.select trunc(sysdate, 'mm')   from   dual  <span class="comment">--2011-3-1    返回当月第一天.</span></span><br><span class="line">3.select trunc(sysdate,'yy') from dual  <span class="comment">--2011-1-1       返回当年第一天</span></span><br><span class="line">4.select trunc(sysdate,'dd') from dual  <span class="comment">--2011-3-18    返回当前年月日</span></span><br><span class="line">5.select trunc(sysdate,'yyyy') from dual  <span class="comment">--2011-1-1   返回当年第一天</span></span><br><span class="line">6.select trunc(sysdate,'d') from dual  <span class="comment">--2011-3-13 (星期天)返回当前星期的第一天</span></span><br><span class="line">7.select trunc(sysdate, 'hh') from dual   <span class="comment">--2011-3-18 14:00:00   当前时间为14:41  </span></span><br><span class="line">8.select trunc(sysdate, 'mi') from dual  <span class="comment">--2011-3-18 14:41:00   TRUNC()函数没有秒的精确</span></span><br><span class="line"><span class="comment">--数字</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">TRUNC（number,num_digits）</span></span><br><span class="line"><span class="comment">Number 需要截尾取整的数字。</span></span><br><span class="line"><span class="comment">Num_digits 用于指定取整精度的数字。Num_digits 的默认值为 0。</span></span><br><span class="line"><span class="comment">TRUNC()函数截取时不进行四舍五入</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">9. <span class="keyword">select</span> trunc(<span class="number">123.458</span>) <span class="keyword">from</span> dual <span class="comment">--123</span></span><br><span class="line"><span class="number">10.</span><span class="keyword">select</span> trunc(<span class="number">123.458</span>,<span class="number">0</span>) <span class="keyword">from</span> dual <span class="comment">--123</span></span><br><span class="line"><span class="number">11.</span><span class="keyword">select</span> trunc(<span class="number">123.458</span>,<span class="number">1</span>) <span class="keyword">from</span> dual <span class="comment">--123.4</span></span><br><span class="line"><span class="number">12.</span><span class="keyword">select</span> trunc(<span class="number">123.458</span>,<span class="number">-1</span>) <span class="keyword">from</span> dual <span class="comment">--120</span></span><br><span class="line"><span class="number">13.</span><span class="keyword">select</span> trunc(<span class="number">123.458</span>,<span class="number">-4</span>) <span class="keyword">from</span> dual <span class="comment">--0</span></span><br><span class="line"><span class="number">14.</span><span class="keyword">select</span> trunc(<span class="number">123.458</span>,<span class="number">4</span>) <span class="keyword">from</span> dual  <span class="comment">--123.458</span></span><br><span class="line"><span class="number">15.</span><span class="keyword">select</span> trunc(<span class="number">123</span>) <span class="keyword">from</span> dual  <span class="comment">--123</span></span><br><span class="line"><span class="number">16.</span><span class="keyword">select</span> trunc(<span class="number">123</span>,<span class="number">1</span>) <span class="keyword">from</span> dual <span class="comment">--123</span></span><br><span class="line"><span class="number">17.</span><span class="keyword">select</span> trunc(<span class="number">123</span>,<span class="number">-1</span>) <span class="keyword">from</span> dual <span class="comment">--120</span></span><br></pre></td></tr></table></figure><h3 id="创建序列"><a class="markdownIt-Anchor" href="#创建序列"></a> 创建序列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">sequence</span> SEQ_xxOS_AUxxxED_FB_ID</span><br><span class="line"><span class="keyword">minvalue</span> <span class="number">1</span></span><br><span class="line">maxvalue <span class="number">99999999999999999999</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">669408473</span></span><br><span class="line"><span class="keyword">increment</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">cache</span> <span class="number">20</span></span><br><span class="line"><span class="keyword">cycle</span>;</span><br><span class="line"><span class="comment">--SEQUENCE</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">ALTER</span> <span class="keyword">ON</span> SEQ_xxOS_AUxxxED_FB_IDxxOxxxETL;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">ALTER</span> <span class="keyword">ON</span> SEQ_xxOS_AUxxxED_FB_IDxxxxxR;</span><br><span class="line"><span class="comment">--SEQUENCE SYNONYM</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PUBLIC</span> <span class="keyword">SYNONYM</span> SEQ_xxOS_AUxxxED_FB_IDFOR sxxS.SEQ_xxOS_AUxxxED_FB_ID;</span><br></pre></td></tr></table></figure><h3 id="动态菜单权限至少需要5张表"><a class="markdownIt-Anchor" href="#动态菜单权限至少需要5张表"></a> 动态菜单权限(至少需要5张表)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xx_mxenu;           //菜单表 </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xx_UxER;          //用户表</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xx_SSxTEM_ROxLE;   //角色表</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xx_USxER_ROxLE;      //用户角色表</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xxEF_RxLE_MExNU;    //角色菜单表</span><br></pre></td></tr></table></figure><h3 id="字典表可以做成2张表-一张存储该字典字段的主题id-另一张存放该主题id需要存储那些字典字段"><a class="markdownIt-Anchor" href="#字典表可以做成2张表-一张存储该字典字段的主题id-另一张存放该主题id需要存储那些字典字段"></a> 字典表可以做成2张表, 一张存储该字典字段的主题id, 另一张存放该主题id需要存储那些字典字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> bos_comm_field f <span class="keyword">where</span> f.field_name=<span class="string">'GET_CHECK_TYPE'</span>;</span><br><span class="line"> <span class="keyword">select</span> * <span class="keyword">from</span> bos_comm_code C <span class="keyword">WHERE</span> C.CODE_TYPE=<span class="string">'CHECK_TYPE'</span> ;</span><br></pre></td></tr></table></figure><h3 id="oracle的配置文件tnsnamesora-里面内容可以改下自定义的-例如下面开发库这么一长串数据库-左边的可以自定义-然后连接的时候数据库框就填左边的相当于右边的一长串"><a class="markdownIt-Anchor" href="#oracle的配置文件tnsnamesora-里面内容可以改下自定义的-例如下面开发库这么一长串数据库-左边的可以自定义-然后连接的时候数据库框就填左边的相当于右边的一长串"></a> oracle的配置文件tnsnames.ora 里面内容可以改下自定义的, 例如下面开发库这么一长串数据库, =左边的可以自定义, 然后连接的时候数据库框就填左边的,相当于=右边的一长串</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.10.10.100 = (DESCRIPTION =(ADDRESS=(PROTOCOL=TCP) (HOST = 10.10.10.100) (PORT=1234))(CONNECT_DATA=(SID=oredd)))  </span><br><span class="line"> xxx/123456</span><br></pre></td></tr></table></figure><h3 id="oracles数据库中创建表-并赋予其他角色权限"><a class="markdownIt-Anchor" href="#oracles数据库中创建表-并赋予其他角色权限"></a> oracles数据库中创建表, 并赋予其他角色权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--SYNONYM</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PUBLIC</span> <span class="keyword">SYNONYM</span> xxxxxx表名  <span class="keyword">FOR</span> 库名.xxxxxx表名;</span><br><span class="line"><span class="comment">-- GRANT/REVOKE OBJECT PRIVILEGES </span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span> <span class="keyword">ON</span> xxxxxx表名 <span class="keyword">TO</span> 用户名;</span><br></pre></td></tr></table></figure><h3 id="id取值序列日期串"><a class="markdownIt-Anchor" href="#id取值序列日期串"></a> id取值（序列+日期串）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>   to_char(<span class="keyword">sysdate</span>, <span class="string">'yyyymmdd'</span>)||<span class="keyword">lpad</span>(seq_xxxxxtem_id.nextval,<span class="number">15</span>, <span class="string">'0'</span>)   <span class="keyword">from</span>  dual;</span><br></pre></td></tr></table></figure><h3 id="存储过程中删除表"><a class="markdownIt-Anchor" href="#存储过程中删除表"></a> 存储过程中删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXECUTE</span> <span class="keyword">IMMEDIATE</span> <span class="string">'TRUNCATE TABLE TEMP_ITEM_ACC'</span>;</span><br></pre></td></tr></table></figure><p>未完后续补充中。。。。。。。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;各种树操作-用来查询表中带有子父节点的信息&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#各种树操作-用来查询表中带有子父节点的信息&quot;&gt;&lt;/a&gt; 各种树操作， 用来查询表中带有子父节点的信息&lt;/h2&gt;
&lt;h3 id=&quot;oracle-树操
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="sql" scheme="https://jjeian.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Mkdown 简单语法</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/Mkdown%20%E8%AF%AD%E6%B3%95%E6%95%B4%E7%90%86/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/Mkdown 语法整理/</id>
    <published>2019-08-20T13:37:42.120Z</published>
    <updated>2019-08-20T05:18:21.692Z</updated>
    
    <content type="html"><![CDATA[<p>这篇笔记停了两天，今天开始整理， 写这篇笔记主要是加强下自己的mkdown语法知识， 另外可以帮助到更多像我一样，每次用都要重新百度。</p><h1 id="mkdown-语法简介"><a class="markdownIt-Anchor" href="#mkdown-语法简介"></a> Mkdown 语法简介</h1><h2 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h2><h4 id="h1-h6"><a class="markdownIt-Anchor" href="#h1-h6"></a> 【h1 - h6】</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># ~ ######</span><br><span class="line">一般# 作为标题， 只有一个， ### 作为段落标题</span><br></pre></td></tr></table></figure><h4 id="上下文标题"><a class="markdownIt-Anchor" href="#上下文标题"></a> 上下文标题</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AAA</span><br><span class="line">====</span><br><span class="line">BBB</span><br><span class="line">----</span><br></pre></td></tr></table></figure><h2 id="强调"><a class="markdownIt-Anchor" href="#强调"></a> 强调</h2><h4 id="斜体"><a class="markdownIt-Anchor" href="#斜体"></a> 斜体</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*</span></span><br><span class="line"><span class="strong">-</span></span><br></pre></td></tr></table></figure><h4 id="加粗"><a class="markdownIt-Anchor" href="#加粗"></a> 加粗</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">**</span></span><br></pre></td></tr></table></figure><h4 id="删除线"><a class="markdownIt-Anchor" href="#删除线"></a> 删除线</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><h4 id="代码块标记"><a class="markdownIt-Anchor" href="#代码块标记"></a> 代码块标记</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">三个```即可</span><br></pre></td></tr></table></figure><h4 id="代码块缩进表示法"><a class="markdownIt-Anchor" href="#代码块缩进表示法"></a> 代码块缩进表示法</h4><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Tab</span> 或 四个空格</span><br></pre></td></tr></table></figure><h4 id="语法高亮显示"><a class="markdownIt-Anchor" href="#语法高亮显示"></a> 语法高亮显示</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">三个```javascript</span><br></pre></td></tr></table></figure><h4 id="内嵌代码块"><a class="markdownIt-Anchor" href="#内嵌代码块"></a> 内嵌代码块</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`</span><br></pre></td></tr></table></figure><h2 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h2><h4 id="简约写法"><a class="markdownIt-Anchor" href="#简约写法"></a> 简约写法</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a | b | c</span><br><span class="line"><span class="meta">:-:|:-|-:</span></span><br><span class="line"><span class="meta"></span> 居中 |左对齐 | 右对其</span><br></pre></td></tr></table></figure><h2 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h2><h4 id="内链式"><a class="markdownIt-Anchor" href="#内链式"></a> 内链式</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com/"百度一下"</span>)&#123;:target="_blank"&#125;</span><br></pre></td></tr></table></figure><h4 id="引用式"><a class="markdownIt-Anchor" href="#引用式"></a> 引用式</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>][<span class="symbol">2</span>]&#123;:target="_blank"&#125;</span><br><span class="line">[<span class="symbol">2</span>]:<span class="link">http://www.baidu.com/ "百度一下"</span></span><br></pre></td></tr></table></figure><h4 id="邮箱链接"><a class="markdownIt-Anchor" href="#邮箱链接"></a> 邮箱链接</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">xxx</span>@<span class="keyword">outlook</span>.<span class="keyword">com</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h2><h4 id="内链式-2"><a class="markdownIt-Anchor" href="#内链式-2"></a> 内链式</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">name</span>](<span class="link">./01.png '描述'</span>)</span><br></pre></td></tr></table></figure><h4 id="图片带有链接"><a class="markdownIt-Anchor" href="#图片带有链接"></a> 图片带有链接</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![name</span>](<span class="link">./01.png  '百度'</span>)](<span class="link">http://www.baidu.com</span>)</span><br></pre></td></tr></table></figure><h3 id="瞄点"><a class="markdownIt-Anchor" href="#瞄点"></a> 瞄点</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">公式标题锚点</span>](<span class="link">#1</span>)</span><br><span class="line">[需要跳转的目录] &#123;#1&#125;</span><br></pre></td></tr></table></figure><h3 id="脚注"><a class="markdownIt-Anchor" href="#脚注"></a> 脚注</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Markdown[^1]</span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">Markdown是一种纯文本标记语言。</span></span><br></pre></td></tr></table></figure><h3 id="github表情"><a class="markdownIt-Anchor" href="#github表情"></a> github表情</h3><p><a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/" title="表情库" target="_blank" rel="noopener">😄   👍 👏 </a></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">:smile:</span>   :+1: :clap:</span><br></pre></td></tr></table></figure><h3 id="分割符"><a class="markdownIt-Anchor" href="#分割符"></a> 分割符</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">***</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>本文内容总结来自: <a href="https://ouweiya.gitbooks.io/markdown/" target="_blank" rel="noopener">https://ouweiya.gitbooks.io/markdown/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇笔记停了两天，今天开始整理， 写这篇笔记主要是加强下自己的mkdown语法知识， 另外可以帮助到更多像我一样，每次用都要重新百度。&lt;/p&gt;
&lt;h1 id=&quot;mkdown-语法简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#mkdown-语
      
    
    </summary>
    
      <category term="技术博客" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="mkdown" scheme="https://jjeian.github.io/tags/mkdown/"/>
    
  </entry>
  
  <entry>
    <title>Kafka集群环境搭建</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/kafka%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/kafka集群环境搭建/</id>
    <published>2019-08-20T13:37:42.117Z</published>
    <updated>2019-08-20T05:19:36.225Z</updated>
    
    <content type="html"><![CDATA[<p>简单记录下kafka集群环境搭建过程， 用来做备忘录</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>第一步： 点击官网下载地址 <a href="http://kafka.apache.org/downloads.html" target="_blank" rel="noopener">http://kafka.apache.org/downloads.html</a> 下载最新安装包<br><img src="https://img-blog.csdnimg.cn/20190403193752570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMTYyOTg3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第二步： 解压</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">xvf</span>  <span class="selector-tag">kafka_2</span><span class="selector-class">.12-2</span><span class="selector-class">.2</span><span class="selector-class">.0</span><span class="selector-class">.tgz</span></span><br></pre></td></tr></table></figure><p>第三步： 检查服务器有没有安装zookeeper集群， 没有的话，自行百度补充<br>第四步：修改config/server.properties 文件</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"># Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line"># contributor license agreements.  See the NOTICE file distributed <span class="keyword">with</span></span><br><span class="line"># this work for additional information regarding copyright ownership.</span><br><span class="line"># The ASF licenses this file to You under the Apache License, Version <span class="number">2.0</span></span><br><span class="line"># (the <span class="string">"License"</span>); you may not use this file except <span class="keyword">in</span> compliance <span class="keyword">with</span></span><br><span class="line"># the License.  You may obtain a copy <span class="keyword">of</span> the License at</span><br><span class="line">#</span><br><span class="line">#    http:<span class="comment">//www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to <span class="keyword">in</span> writing, software</span><br><span class="line"># distributed under the License is distributed on an <span class="string">"AS IS"</span> BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line"># see kafka.server.KafkaConfig for additional details and defaults</span><br><span class="line"></span><br><span class="line">############################# Server Basics #############################</span><br><span class="line"></span><br><span class="line"># The id <span class="keyword">of</span> the broker. This must be set to a unique integer for each broker.</span><br><span class="line">broker.id=<span class="number">0</span>  <span class="comment">// 说明，这个跟zookeeper的myid一样配置 0，1，2</span></span><br><span class="line"></span><br><span class="line">############################# Socket Server Settings #############################</span><br><span class="line"></span><br><span class="line"># The address the socket server listens on. It will get the value returned <span class="keyword">from</span> </span><br><span class="line"># java.net.InetAddress.getCanonicalHostName() <span class="keyword">if</span> not configured.</span><br><span class="line">#   FORMAT:</span><br><span class="line">#     listeners = listener_name:<span class="comment">//host_name:port</span></span><br><span class="line">#   EXAMPLE:</span><br><span class="line">#     listeners = PLAINTEXT:<span class="comment">//your.host.name:9092</span></span><br><span class="line">#listeners=PLAINTEXT:<span class="comment">//:9092</span></span><br><span class="line">host.name=<span class="number">192.168</span><span class="number">.175</span><span class="number">.130</span>  <span class="comment">// 当前服务器ip</span></span><br><span class="line"># Hostname and port the broker will advertise to producers and consumers. If not set, </span><br><span class="line"># it uses the value for <span class="string">"listeners"</span> <span class="keyword">if</span> configured.  Otherwise, it will use the value</span><br><span class="line"># returned <span class="keyword">from</span> java.net.InetAddress.getCanonicalHostName().</span><br><span class="line">#advertised.listeners=PLAINTEXT:<span class="comment">//your.host.name:9092</span></span><br><span class="line"></span><br><span class="line"># Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details</span><br><span class="line">#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL</span><br><span class="line"></span><br><span class="line"># The number <span class="keyword">of</span> threads that the server uses for receiving requests <span class="keyword">from</span> the network and sending responses to the network</span><br><span class="line">num.network.threads=<span class="number">3</span></span><br><span class="line"></span><br><span class="line"># The number <span class="keyword">of</span> threads that the server uses for processing requests, which may include disk I/O</span><br><span class="line">num.io.threads=<span class="number">8</span></span><br><span class="line"></span><br><span class="line"># The send buffer (SO_SNDBUF) used by the socket server</span><br><span class="line">socket.send.buffer.bytes=<span class="number">102400</span></span><br><span class="line"></span><br><span class="line"># The receive buffer (SO_RCVBUF) used by the socket server</span><br><span class="line">socket.receive.buffer.bytes=<span class="number">102400</span></span><br><span class="line"></span><br><span class="line"># The maximum size <span class="keyword">of</span> a request that the socket server will accept (protection against OOM)</span><br><span class="line">socket.request.max.bytes=<span class="number">104857600</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">############################# Log Basics #############################</span><br><span class="line"></span><br><span class="line"># A comma separated list <span class="keyword">of</span> directories under which to store log files</span><br><span class="line">log.dirs=/opt/local/data/install/kafka2<span class="number">.2</span><span class="number">.0</span>/log/kafka  <span class="comment">// 目录要存在</span></span><br><span class="line"></span><br><span class="line"># The default number <span class="keyword">of</span> log partitions per topic. More partitions allow greater</span><br><span class="line"># parallelism for consumption, but this will also result <span class="keyword">in</span> more files across</span><br><span class="line"># the brokers.</span><br><span class="line">num.partitions=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"># The number <span class="keyword">of</span> threads per data directory to be used for log recovery at startup and flushing at shutdown.</span><br><span class="line"># This value is recommended to be increased for installations <span class="keyword">with</span> data dirs located <span class="keyword">in</span> RAID array.</span><br><span class="line">num.recovery.threads.per.data.dir=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">############################# Internal Topic Settings  #############################</span><br><span class="line"># The replication factor for the group metadata internal topics <span class="string">"__consumer_offsets"</span> and <span class="string">"__transaction_state"</span></span><br><span class="line"># For anything other than development testing, a value greater than <span class="number">1</span> is recommended for to ensure availability such <span class="keyword">as</span> <span class="number">3.</span></span><br><span class="line">offsets.topic.replication.factor=<span class="number">1</span></span><br><span class="line">transaction.state.log.replication.factor=<span class="number">1</span></span><br><span class="line">transaction.state.log.min.isr=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">############################# Log Flush Policy #############################</span><br><span class="line"></span><br><span class="line"># Messages are immediately written to the filesystem but by default we only fsync() to sync</span><br><span class="line"># the OS cache lazily. The following configurations control the flush <span class="keyword">of</span> data to disk.</span><br><span class="line"># There are a few important trade-offs here:</span><br><span class="line">#    <span class="number">1.</span> Durability: Unflushed data may be lost <span class="keyword">if</span> you are not using replication.</span><br><span class="line">#    <span class="number">2.</span> Latency: Very large flush intervals may lead to latency spikes when the flush does occur <span class="keyword">as</span> there will be a lot <span class="keyword">of</span> data to flush.</span><br><span class="line">#    <span class="number">3.</span> Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.</span><br><span class="line"># The settings below allow one to configure the flush policy to flush data after a period <span class="keyword">of</span> time or</span><br><span class="line"># every N messages (or both). This can be done globally and overridden on a per-topic basis.</span><br><span class="line"></span><br><span class="line"># The number <span class="keyword">of</span> messages to accept before forcing a flush <span class="keyword">of</span> data to disk</span><br><span class="line">#log.flush.interval.messages=<span class="number">10000</span></span><br><span class="line"></span><br><span class="line"># The maximum amount <span class="keyword">of</span> time a message can sit <span class="keyword">in</span> a log before we force a flush</span><br><span class="line">#log.flush.interval.ms=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line">############################# Log Retention Policy #############################</span><br><span class="line"></span><br><span class="line"># The following configurations control the disposal <span class="keyword">of</span> log segments. The policy can</span><br><span class="line"># be set to delete segments after a period <span class="keyword">of</span> time, or after a given size has accumulated.</span><br><span class="line"># A segment will be deleted whenever *either* <span class="keyword">of</span> these criteria are met. Deletion always happens</span><br><span class="line"># <span class="keyword">from</span> the end <span class="keyword">of</span> the log.</span><br><span class="line"></span><br><span class="line"># The minimum age <span class="keyword">of</span> a log file to be eligible for deletion due to age</span><br><span class="line">log.retention.hours=<span class="number">168</span></span><br><span class="line"></span><br><span class="line"># A size-based retention policy for logs. Segments are pruned <span class="keyword">from</span> the log unless the remaining</span><br><span class="line"># segments drop below log.retention.bytes. Functions independently <span class="keyword">of</span> log.retention.hours.</span><br><span class="line">#log.retention.bytes=<span class="number">1073741824</span></span><br><span class="line"></span><br><span class="line"># The maximum size <span class="keyword">of</span> a log segment file. When this size is reached a new log segment will be created.</span><br><span class="line">log.segment.bytes=<span class="number">1073741824</span></span><br><span class="line"></span><br><span class="line"># The interval at which log segments are checked to see <span class="keyword">if</span> they can be deleted according</span><br><span class="line"># to the retention policies</span><br><span class="line">log.retention.check.interval.ms=<span class="number">300000</span></span><br><span class="line"></span><br><span class="line">############################# Zookeeper #############################</span><br><span class="line"></span><br><span class="line"># Zookeeper connection string (see zookeeper docs for details).</span><br><span class="line"># This is a comma separated host:port pairs, each corresponding to a zk</span><br><span class="line"># server. e.g. <span class="string">"127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002"</span>.</span><br><span class="line"># You can also append an optional chroot string to the urls to specify the</span><br><span class="line"># root directory for all kafka znodes.</span><br><span class="line">zookeeper.connect=<span class="number">192.168</span><span class="number">.175</span><span class="number">.130</span>:<span class="number">2181</span>,<span class="number">192.168</span><span class="number">.175</span><span class="number">.131</span>:<span class="number">2181</span>,<span class="number">192.168</span><span class="number">.175</span><span class="number">.132</span>:<span class="number">2181</span>  <span class="comment">// 三台服务器配置</span></span><br><span class="line"></span><br><span class="line"># Timeout <span class="keyword">in</span> ms for connecting to zookeeper</span><br><span class="line">zookeeper.connection.timeout.ms=<span class="number">6000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">############################# Group Coordinator Settings #############################</span><br><span class="line"></span><br><span class="line"># The following configuration specifies the time, <span class="keyword">in</span> milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.</span><br><span class="line"># The rebalance will be further delayed by the value <span class="keyword">of</span> group.initial.rebalance.delay.ms <span class="keyword">as</span> new members join the group, up to a maximum <span class="keyword">of</span> max.poll.interval.ms.</span><br><span class="line"># The default value for this is <span class="number">3</span> seconds.</span><br><span class="line"># We override this to <span class="number">0</span> here <span class="keyword">as</span> it makes for a better out-<span class="keyword">of</span>-the-box experience for development and testing.</span><br><span class="line"># However, <span class="keyword">in</span> production environments the default value <span class="keyword">of</span> <span class="number">3</span> seconds is more suitable <span class="keyword">as</span> this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.</span><br><span class="line">group.initial.rebalance.delay.ms=<span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>注：<br>server.properties配置文件的修改主要在开头和结尾，中间保持默认配置即可；需要注意的点是broker.id的值三个节点要配置不同的值，分别配置为0，1，2；log.dirs必须保证目录存在，不会根据配置文件自动生成；</li></ul><p>最后，启动三台机器的zookeeper ， 然后启动三台机器的kafka</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-start<span class="selector-class">.sh</span> config/server<span class="selector-class">.properties</span>  &amp;</span><br></pre></td></tr></table></figure><p>三个节点均要启动；启动无报错，即搭建成功，可以生产和消费消息，来检测是否搭建成功。</p><h3 id="至此kafka集群环境搭建完毕下面写一些java中如何使用"><a class="markdownIt-Anchor" href="#至此kafka集群环境搭建完毕下面写一些java中如何使用"></a> 至此，kafka集群环境搭建完毕，下面写一些java中如何使用</h3><hr><h2 id="java环境kafka测试生产者和消费者"><a class="markdownIt-Anchor" href="#java环境kafka测试生产者和消费者"></a> java环境kafka测试生产者和消费者</h2><h3 id="导入包"><a class="markdownIt-Anchor" href="#导入包"></a> 导入包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kafka_2.12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kafka-clients<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kafka-streams<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="消费者"><a class="markdownIt-Anchor" href="#消费者"></a> 消费者</h4><p><a href="https://kafka.apache.org/10/javadoc/index.html?org/apache/kafka/clients/consumer/KafkaConsumer.html" target="_blank" rel="noopener">https://kafka.apache.org/10/javadoc/index.html?org/apache/kafka/clients/consumer/KafkaConsumer.html</a></p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.ConsumerRecord;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.ConsumerRecords;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.KafkaConsumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消费者</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 测试体验， kafka的消费能力真的很快</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @author LELE</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaConsu</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">KafkaConsumer</span></span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> KafkaConsu(Properties properties) &#123;</span><br><span class="line"><span class="keyword">super</span>(properties);</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">Properties props = <span class="keyword">new</span> <span class="type">Properties</span>();</span><br><span class="line"><span class="comment">// kafka servers</span></span><br><span class="line">props.put(<span class="string">"bootstrap.servers"</span>, <span class="string">"192.168.175.130:9092,192.168.175.131:9092,192.168.175.132:9092"</span>);</span><br><span class="line"><span class="comment">// group</span></span><br><span class="line">props.put(<span class="string">"group.id"</span>, <span class="string">"DemoConsumer"</span>);</span><br><span class="line">props.put(<span class="string">"enable.auto.commit"</span>, <span class="string">"true"</span>);</span><br><span class="line">props.put(<span class="string">"auto.commit.interval.ms"</span>, <span class="string">"1000"</span>);</span><br><span class="line">props.put(<span class="string">"key.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</span><br><span class="line">props.put(<span class="string">"value.deserializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringDeserializer"</span>);</span><br><span class="line">KafkaConsumer&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; consumer = <span class="keyword">new</span> <span class="type">KafkaConsumer</span>&lt;&gt;(props);</span><br><span class="line"><span class="comment">// 订阅的topic</span></span><br><span class="line">consumer.subscribe(Arrays.asList(<span class="string">"my-topic"</span>));</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">// 超时时间 ms</span></span><br><span class="line">ConsumerRecords&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; records = consumer.poll(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">for</span> (ConsumerRecord&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; record : <span class="type">records</span>)</span><br><span class="line">System.out.printf(<span class="string">"测试 offset = %d, key = %s, value = %s%n"</span>, record.offset(), record.key(),</span><br><span class="line">record.value());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="kafka生产者"><a class="markdownIt-Anchor" href="#kafka生产者"></a> kafka生产者</h4><p><a href="https://kafka.apache.org/10/javadoc/index.html?org/apache/kafka/clients/producer/KafkaProducer.html" target="_blank" rel="noopener">https://kafka.apache.org/10/javadoc/index.html?org/apache/kafka/clients/producer/KafkaProducer.html</a></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.KafkaProducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.Producer;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.ProducerRecord;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息生产者</span></span><br><span class="line"><span class="comment"> * @author LELE</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class KafkaProdu extends KafkaProducer &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> KafkaProdu(Properties properties) &#123;</span><br><span class="line">super(properties);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) throws Exception &#123;</span><br><span class="line">Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line"><span class="comment">// kafka servers</span></span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"bootstrap.servers"</span>, <span class="string">"192.168.175.130:9092,192.168.175.131:9092,192.168.175.132:9092"</span>);</span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"acks"</span>, <span class="string">"all"</span>);</span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"retries"</span>, <span class="number">0</span>);</span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"batch.size"</span>, <span class="number">16384</span>);</span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"linger.ms"</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// topic 分组</span></span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"client.id"</span>, <span class="string">"DemoProducer"</span>);</span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"buffer.memory"</span>, <span class="number">33554432</span>);</span><br><span class="line"><span class="comment">// 序列化工具</span></span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"key.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</span><br><span class="line"><span class="comment">// 序列化工具</span></span><br><span class="line">props.<span class="built_in">put</span>(<span class="string">"value.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</span><br><span class="line"></span><br><span class="line">Producer&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; producer = <span class="keyword">new</span> KafkaProducer&lt;&gt;(props);</span><br><span class="line"><span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++)</span><br><span class="line">producer.send(<span class="keyword">new</span> ProducerRecord&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt;(<span class="string">"my-topic"</span>, Integer.toString(i), Integer.toString(i)));</span><br><span class="line"></span><br><span class="line">producer.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单记录下kafka集群环境搭建过程， 用来做备忘录&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#安装&quot;&gt;&lt;/a&gt; 安装&lt;/h2&gt;
&lt;p&gt;第一步： 点击官网下载地址 &lt;a href=&quot;http://kafka.ap
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https://jjeian.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Js常用小案例</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/js%E5%B8%B8%E7%94%A8%E5%B0%8F%E6%A1%88%E4%BE%8B/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/js常用小案例/</id>
    <published>2019-08-20T13:37:42.105Z</published>
    <updated>2019-08-20T05:26:02.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用javascript小案例"><a class="markdownIt-Anchor" href="#常用javascript小案例"></a> 常用javascript小案例</h2><h4 id="样式调节"><a class="markdownIt-Anchor" href="#样式调节"></a> 样式调节</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注: 这个可以控制td中的字段成行显示     </span></span><br><span class="line">#modelInfos td,th &#123;  white-space: nowrap;   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文本输入框随着内容尺寸往下变大,在input框中加入这两个属性,然后就可以控制文本输入框的大小尺寸随着内容而变</span></span><br><span class="line">onpropertychange=<span class="string">"this.style.height=this.scrollHeight + 'px'"</span> </span><br><span class="line">oninput=<span class="string">"this.style.height=this.scrollHeight + 'px'"</span></span><br></pre></td></tr></table></figure><h4 id="点击radio-选择一整行这种写法不太靠谱可以试试"><a class="markdownIt-Anchor" href="#点击radio-选择一整行这种写法不太靠谱可以试试"></a> 点击radio  选择一整行(这种写法不太靠谱，可以试试)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">style=<span class="string">"cursor: hand"</span> </span><br><span class="line">bgcolor=<span class="string">"&lt;%=(obj.getState() == 0 ? trColor : obj.getState() == 1 ? '#FFCC33' : '#FF8040')%&gt;"</span>  onclick=<span class="string">"selectRow(&lt;%=i%&gt;,this);"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注: 另一种写法 双击选中一行[单击不可以</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> screenSize = <span class="built_in">window</span>.screen.width<span class="number">-200</span>;</span><br><span class="line">    <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">'pool'</span>);    </span><br><span class="line">    div1.style.width = screenSize;  </span><br><span class="line">    $(<span class="string">'tr'</span>).dblclick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       $td = $(<span class="keyword">this</span>).find(<span class="string">"td:eq(0)"</span>).find(<span class="string">"input[type=radio]"</span>).attr(<span class="string">"checked"</span>, <span class="literal">true</span>);</span><br><span class="line">       <span class="keyword">var</span> varId = $(<span class="keyword">this</span>).attr(<span class="string">"id"</span>);</span><br><span class="line">       <span class="keyword">if</span>($(<span class="keyword">this</span>).attr(<span class="string">"id"</span>).length&gt;<span class="number">3</span>)&#123;</span><br><span class="line">           <span class="keyword">var</span> str = varId.substr(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">           <span class="keyword">if</span>(str==<span class="string">'row'</span>)&#123;</span><br><span class="line">              startDealTask();  </span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="当前条件所在的行的颜色为红色"><a class="markdownIt-Anchor" href="#当前条件所在的行的颜色为红色"></a> 当前条件所在的行的颜色为红色</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> $(<span class="string">"tr"</span>,$(<span class="string">"#gxzItems"</span>)).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> itemFlag=$(<span class="string">"input[name='flagTY']"</span>,$(<span class="keyword">this</span>)).val();</span><br><span class="line"><span class="keyword">if</span>(itemFlag==<span class="string">'0'</span>)&#123;</span><br><span class="line">$(<span class="string">"td"</span>, $(<span class="keyword">this</span>)).css(&#123;<span class="string">"color"</span>:<span class="string">"red"</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="格式化金额"><a class="markdownIt-Anchor" href="#格式化金额"></a> 格式化金额</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;fmt:formatNumber pattern=<span class="string">"#,##0.00#"</span> value=<span class="string">"$&#123;pto1.map.tradeAmt&#125;"</span> /&gt;</span><br></pre></td></tr></table></figure><h4 id="写弹窗标题div中需要加入的样式"><a class="markdownIt-Anchor" href="#写弹窗标题div中需要加入的样式"></a> 写弹窗(标题div中需要加入的样式)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style=<span class="string">"display: none; z-index: 9997; border-width: 1px; border-style: solid; border-color: navy; position: absolute; left: 250px; top: 103px; background-color: #ffffff; width: 350px; height: 115px; filter: progid :DXImageTransform.Microsoft.Shadow(color =#999999, direction =135, strength = 5);"</span></span><br></pre></td></tr></table></figure><h4 id="支持拖拽"><a class="markdownIt-Anchor" href="#支持拖拽"></a> 支持拖拽</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">oTitle.onmousedown=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123; </span><br><span class="line">    oTitle.style.cursor = <span class="string">"move"</span>; </span><br><span class="line">     <span class="keyword">var</span> event = event || <span class="built_in">window</span>.event; </span><br><span class="line">     <span class="keyword">var</span> disX=event.clientX-oDrag.offsetLeft; </span><br><span class="line">     <span class="keyword">var</span> disY=event.clientY-oDrag.offsetTop; </span><br><span class="line">     </span><br><span class="line">     <span class="comment">// 鼠标移动，窗口随之移动,  onmousemove在有物体移动是才执行alert事件；  </span></span><br><span class="line"> <span class="built_in">document</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123; </span><br><span class="line">         <span class="keyword">var</span> event = event || <span class="built_in">window</span>.event; </span><br><span class="line">         maxW=<span class="built_in">document</span>.documentElement.clientWidth-oDrag.offsetWidth; </span><br><span class="line">         maxH=<span class="built_in">document</span>.documentElement.clientHeight-oDrag.offsetHeight; </span><br><span class="line">         posX=event.clientX-disX; </span><br><span class="line">         posY=event.clientY-disY; </span><br><span class="line">         <span class="keyword">if</span>(posX&lt;<span class="number">0</span>)&#123; </span><br><span class="line">             posX=<span class="number">0</span>; </span><br><span class="line">         &#125;<span class="keyword">else</span> <span class="keyword">if</span>(posX&gt;maxW)&#123; </span><br><span class="line">             posX=maxW; </span><br><span class="line">         &#125; </span><br><span class="line">         <span class="keyword">if</span>(posY&lt;<span class="number">0</span>)&#123; </span><br><span class="line">             posY=<span class="number">0</span>; </span><br><span class="line">         &#125;<span class="keyword">else</span> <span class="keyword">if</span>(posY&gt;maxH)&#123; </span><br><span class="line">             posY=maxH; </span><br><span class="line">         &#125; </span><br><span class="line">         oDrag.style.left=posX+<span class="string">'px'</span>; </span><br><span class="line">         oDrag.style.top=posY+<span class="string">'px'</span>; </span><br><span class="line">     &#125; </span><br><span class="line">     <span class="comment">//鼠标松开，窗口将不再移动 , document.onmouseup=function()&#123; </span></span><br><span class="line">         <span class="built_in">document</span>.onmousemove=<span class="literal">null</span>; </span><br><span class="line">         <span class="built_in">document</span>.onmouseup=<span class="literal">null</span>; </span><br><span class="line">     &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="测试用户点击关闭浏览器事件回到数据库中执行一条语句"><a class="markdownIt-Anchor" href="#测试用户点击关闭浏览器事件回到数据库中执行一条语句"></a> 测试用户点击关闭浏览器,事件回到数据库中执行一条语句</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">src=<span class="string">"&lt;c:url value='/js/jquery-1.8.3.js'/&gt;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">window</span>.onbeforeunload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) //<span class="title">author</span>: <span class="title">meizz</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> n = <span class="built_in">window</span>.event.screenX - <span class="built_in">window</span>.screenLeft;</span><br><span class="line"><span class="keyword">var</span> b = n &gt; <span class="built_in">document</span>.documentElement.scrollWidth - <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (b &amp;&amp; <span class="built_in">window</span>.event.clientY &lt; <span class="number">0</span> || <span class="built_in">window</span>.event.altKey) &#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url : <span class="string">"/demo03/itemModel/onbeforeload"</span>,</span><br><span class="line"><span class="keyword">async</span> : <span class="literal">false</span>,</span><br><span class="line">success : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">alert(<span class="string">"不可能"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="提交点击提交form表单值-则可以将结果显示在当前页面的iframe内联框中-实现页面局部刷新"><a class="markdownIt-Anchor" href="#提交点击提交form表单值-则可以将结果显示在当前页面的iframe内联框中-实现页面局部刷新"></a> 提交点击提交form表单值, 则可以将结果显示在当前页面的iframe内联框中, 实现页面局部刷新</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">"organManageForm"</span> name=<span class="string">"organManageForm"</span> style=<span class="string">"width: 30%"</span></span><br><span class="line">action=<span class="string">"&lt;%=com.northking.ssoClient.bussiness.impl.Parameters.pathPrefix%&gt;servlet/SmOrganListServlet"</span> method=<span class="string">"post"</span> target=<span class="string">"frmdetail"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">&lt;td width="50%" style="vertical-align: top"&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="floater" style="position:absolute; height=300"&gt;</span></span><br><span class="line"><span class="regexp">&lt;iframe name="frmdetail" class="" frameborder=0 style="width: 100%;height:100%;background-color:  #eeeeee;"&gt;&lt;/i</span>frame&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h4 id="图片响应流到页面展示-filepath-图片路径"><a class="markdownIt-Anchor" href="#图片响应流到页面展示-filepath-图片路径"></a> 图片响应流到页面展示,  filepath = &quot;“图片路径”;</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">"image/jpeg"</span>);</span><br><span class="line">ServletOutputStream out=response.getOutputStream();</span><br><span class="line"><span class="keyword">try</span> &#123;  </span><br><span class="line">     File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">     FileImageInputStream imageinput = <span class="keyword">new</span> FileImageInputStream(file);</span><br><span class="line">     int data;</span><br><span class="line">         <span class="keyword">while</span>((data=imageinput.read())!=<span class="number">-1</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         out.write(data);</span><br><span class="line">         &#125;</span><br><span class="line">         imageinput.close();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"> logger.error(e);   </span><br><span class="line">  &#125;<span class="keyword">finally</span>&#123;     </span><br><span class="line">  out.flush();</span><br><span class="line">  out.close();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="使用js写cookie"><a class="markdownIt-Anchor" href="#使用js写cookie"></a> 使用js写COOKIE</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">c_name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.cookie.length&gt;<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  c_start=<span class="built_in">document</span>.cookie.indexOf(c_name + <span class="string">"="</span>)</span><br><span class="line">  <span class="keyword">if</span> (c_start!=<span class="number">-1</span>)</span><br><span class="line">    &#123; </span><br><span class="line">    c_start=c_start + c_name.length+<span class="number">1</span> </span><br><span class="line">    c_end=<span class="built_in">document</span>.cookie.indexOf(<span class="string">";"</span>,c_start)</span><br><span class="line">    <span class="keyword">if</span> (c_end==<span class="number">-1</span>) c_end=<span class="built_in">document</span>.cookie.length</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">document</span>.cookie.substring(c_start,c_end))</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">c_name,value,expiredays</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> exdate=<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">exdate.setDate(exdate.getDate()+expiredays)</span><br><span class="line"><span class="built_in">document</span>.cookie=c_name+ <span class="string">"="</span> +<span class="built_in">escape</span>(value)+</span><br><span class="line">((expiredays==<span class="literal">null</span>) ? <span class="string">""</span> : <span class="string">";expires="</span>+exdate.toGMTString())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCookie</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">username=getCookie(<span class="string">'username'</span>)</span><br><span class="line"><span class="keyword">if</span> (username!=<span class="literal">null</span> &amp;&amp; username!=<span class="string">""</span>)</span><br><span class="line">  &#123;alert(<span class="string">'Welcome again '</span>+username+<span class="string">'!'</span>)&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">  &#123;</span><br><span class="line">  username=prompt(<span class="string">'Please enter your name:'</span>,<span class="string">""</span>)</span><br><span class="line">  <span class="keyword">if</span> (username!=<span class="literal">null</span> &amp;&amp; username!=<span class="string">""</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    setCookie(<span class="string">'username'</span>,username,<span class="number">365</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;body onLoad="checkCookie()"&gt;</span></span><br></pre></td></tr></table></figure><h4 id="常知小技巧"><a class="markdownIt-Anchor" href="#常知小技巧"></a> 常知小技巧</h4><ul><li><p>对于任何类型的值采用双not ,可以得到其真正的boolean类型值 .   写法:      if(!!cont){}   [注:  有值就表示true , 没值或为false或为0就返回false]</p></li><li><p>null 与 undefined 是相等的     if(null == undefined) {   返回true  } ,     [注:  非全等号由感叹号加两个等号（!==）表示，只有在无需类型转换运算数不相等的情况下，才返回 true。]</p></li><li><p>start : i = 5;   可以以这样的方式给语句加个标签,  方面下面调用.</p></li><li><p>js中文转码:  encodeURI(encodeURI(  //需要转码的内容 ))</p></li><li><p>要想实现点击下拉框, 选中内容在文本框中显示, 并且支持多选  , 请百度搜索  multiple-select</p></li><li><p>使用这种函数   var formData=$(“form”).serialize();    ,可以获取form表单中的参数和值, 以 name=2&amp;pass=3的 形式连接到一块</p></li></ul><h4 id="arguments0-length-这些可以写在函数内部-arguments是系统命名的获取传进函数的变量的值的数组集合-可以不用声明直接在函数内部使用而只需要调用是传参数就行"><a class="markdownIt-Anchor" href="#arguments0-length-这些可以写在函数内部-arguments是系统命名的获取传进函数的变量的值的数组集合-可以不用声明直接在函数内部使用而只需要调用是传参数就行"></a> arguments[0]  .length  这些可以写在函数内部, arguments是系统命名的获取传进函数的变量的值的数组集合 , 可以不用声明,直接在函数内部使用,而只需要调用是传参数就行</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;a  href=<span class="string">"javascript:void(0);"</span>  onclick=<span class="string">"sayHi('',null,undefined)"</span>&gt;点击这里,调用函数&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;script tyee=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="keyword">var</span>  num=<span class="built_in">arguments</span>.length;</span><br><span class="line">     <span class="keyword">if</span> (num != <span class="number">0</span>) &#123;<span class="comment">//调用传参函数</span></span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>)&#123;<span class="comment">//调用传一个参函数</span></span><br><span class="line">        </span><br><span class="line">           alert(<span class="string">"1个参数"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>  <span class="keyword">if</span>(num==<span class="number">2</span>)&#123;<span class="comment">//调用传2个参函数</span></span><br><span class="line">        </span><br><span class="line">           alert(<span class="string">"2个参数"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">3</span>)&#123;<span class="comment">//调用传3个参函数</span></span><br><span class="line">        </span><br><span class="line">           alert(<span class="string">"3个参数"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//调用传其他参函数</span></span><br><span class="line">        </span><br><span class="line">           alert(<span class="string">"3个以上参数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;<span class="comment">//调用无参函数</span></span><br><span class="line">    </span><br><span class="line">        alert(<span class="string">"你没有往该函数里面传入任何值!!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 注： 可以使用函数名.length, 来获取该函数传入参数的个数.</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="在函数中使用闭包-内部函数不能传参-但可以使用外部的一切变量"><a class="markdownIt-Anchor" href="#在函数中使用闭包-内部函数不能传参-但可以使用外部的一切变量"></a> 在函数中使用闭包 , 内部函数不能传参, 但可以使用外部的一切变量.</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> iBaseNum = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNum</span>(<span class="params">iNum1, iNum2</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">doAdd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> iNum1 + iNum2 + iBaseNum;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> doAdd();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="图像操作-详细请看附加图像文件"><a class="markdownIt-Anchor" href="#图像操作-详细请看附加图像文件"></a> 图像操作. (详细请看附加图像文件) ( )</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 图像 旋转 的函数</span></span><br><span class="line"><span class="keyword">var</span> irotation = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rotation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">document</span>.all.IFramePic1.style.filter =<span class="string">"progid:DXImageTransform.Microsoft.BasicImage(rotation="</span>+ irotation  +<span class="string">")"</span>;</span><br><span class="line">   irotation++;</span><br><span class="line">   <span class="keyword">if</span>(irotation&gt;<span class="number">4</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          irotation=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用js获取上月最后一天日期"><a class="markdownIt-Anchor" href="#使用js获取上月最后一天日期"></a> 使用js获取上月最后一天日期</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span>   endAccountDate = <span class="built_in">document</span>.getElementById(<span class="string">"endAccountDate"</span>).value;</span><br><span class="line">     <span class="keyword">if</span>(endAccountDate==<span class="literal">null</span>||endAccountDate==<span class="string">''</span>)&#123;</span><br><span class="line">             <span class="keyword">var</span> nowdays = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> year = nowdays.getFullYear();</span><br><span class="line">    <span class="keyword">var</span> month = nowdays.getMonth();</span><br><span class="line">    <span class="keyword">if</span>(month==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        month=<span class="number">12</span>;</span><br><span class="line">        year=year<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (month &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        month = <span class="string">"0"</span> + month;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> firstDay = year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + <span class="string">"01"</span>;<span class="comment">//上个月的第一天</span></span><br><span class="line">    <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(year, month, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">var</span> lastDay = year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + myDate.getDate();<span class="comment">//上个月的最后一天</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Appendzero</span>(<span class="params">obj</span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(obj&lt;<span class="number">10</span>) <span class="keyword">return</span> <span class="string">"0"</span> +<span class="string">""</span>+ obj;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> obj;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resolveDayDate</span>(<span class="params">begin_Date,end_Date</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> beginDate = <span class="keyword">new</span> <span class="built_in">Date</span>(begin_Date.substring(<span class="number">0</span>,<span class="number">4</span>),begin_Date.substring(<span class="number">4</span>,<span class="number">6</span>)<span class="number">-1</span>,begin_Date.substring(<span class="number">6</span>,<span class="number">8</span>));</span><br><span class="line"><span class="keyword">var</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(end_Date.substring(<span class="number">0</span>,<span class="number">4</span>),end_Date.substring(<span class="number">4</span>,<span class="number">6</span>)<span class="number">-1</span>,end_Date.substring(<span class="number">6</span>,<span class="number">8</span>));</span><br><span class="line">beginDate.setDate(beginDate.getDate()+<span class="number">31</span>);</span><br><span class="line"><span class="keyword">return</span> beginDate.getTime() &gt;= endDate.getTime();</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resolveMonthDate</span>(<span class="params">begin_Date,end_Date</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> beginDate = <span class="keyword">new</span>  <span class="built_in">Date</span>(begin_Date.substring(<span class="number">0</span>,<span class="number">4</span>),begin_Date.substring(<span class="number">4</span>,<span class="number">6</span>)<span class="number">-1</span>,begin_Date.substring(<span class="number">6</span>,<span class="number">8</span>));</span><br><span class="line"><span class="keyword">var</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(end_Date.substring(<span class="number">0</span>,<span class="number">4</span>),end_Date.substring(<span class="number">4</span>,<span class="number">6</span>)<span class="number">-1</span>,end_Date.substring(<span class="number">6</span>,<span class="number">8</span>));</span><br><span class="line">beginDate.setMonth(beginDate.getMonth()+<span class="number">12</span>);</span><br><span class="line"><span class="keyword">return</span> beginDate.getTime() &gt;= endDate.getTime();</span><br><span class="line">&#125; </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="获取当前日期上月最后一天"><a class="markdownIt-Anchor" href="#获取当前日期上月最后一天"></a> 获取当前日期上月最后一天</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">var</span> fl=$(<span class="string">"#fl"</span>).val();</span><br><span class="line">         <span class="keyword">if</span>(fl==<span class="string">'0'</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span>  endDate=$(<span class="string">"input[name='endAccountDate']"</span>).val();</span><br><span class="line">            <span class="keyword">var</span>  ss=ff(endDate);</span><br><span class="line">            $(<span class="string">"input[name='startAccountDate']"</span>).val(ss);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">ff</span>(<span class="params">endDate</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span>  month =  endDate.substr(<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">var</span>  year = endDate.substr(<span class="number">0</span>,<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span>(month==<span class="string">'01'</span>)&#123;</span><br><span class="line">         month = <span class="number">12</span>;</span><br><span class="line">         year -=<span class="number">1</span>;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         month -=<span class="number">1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    <span class="keyword">var</span> day = <span class="keyword">new</span> <span class="built_in">Date</span>(year, month, <span class="number">0</span>).getDate();</span><br><span class="line">    <span class="keyword">return</span>   year+<span class="string">""</span>+Appendzero(month)+<span class="string">""</span>+Appendzero(day);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Appendzero</span>(<span class="params">obj</span>)  </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(obj&lt;<span class="number">10</span>) <span class="keyword">return</span> <span class="string">"0"</span> +<span class="string">""</span>+ obj;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> obj;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="内容相对于滚动条位置不动"><a class="markdownIt-Anchor" href="#内容相对于滚动条位置不动"></a> 内容相对于滚动条位置不动</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> screenSize = <span class="built_in">window</span>.screen.width<span class="number">-200</span>;</span><br><span class="line"><span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">'pool'</span>);    </span><br><span class="line">div1.style.width = screenSize;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;div id=<span class="string">"pool"</span> style=<span class="string">"overflow: auto;"</span>&gt; </span><br><span class="line">      <span class="comment">//要优化的内容</span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h4 id="悬浮动态走马灯"><a class="markdownIt-Anchor" href="#悬浮动态走马灯"></a> 悬浮动态走马灯</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;marquee style=<span class="string">"WIDTH: 100%; HEIGHT: 400px"</span> scrollamount=<span class="string">"3"</span></span><br><span class="line">direction=<span class="string">"up"</span>&gt; <span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color: red; font-size: 20px;"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>页面维护中..<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/marquee&gt;</span></span><br></pre></td></tr></table></figure><h4 id="下拉框多选select-在下拉框中添加-multiplemultiple-属性"><a class="markdownIt-Anchor" href="#下拉框多选select-在下拉框中添加-multiplemultiple-属性"></a> 下拉框多选[select]  ,  在下拉框中添加 multiple=“multiple” 属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">subbmit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> all = <span class="string">""</span>; </span><br><span class="line"> $(<span class="string">"select[name='orgId'] option"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    all += $(<span class="keyword">this</span>).attr(<span class="string">"value"</span>)+<span class="string">" "</span>; </span><br><span class="line"> &#125;); </span><br><span class="line"> <span class="keyword">var</span> sel = $(<span class="string">"select[name='orgId']"</span>).val(); </span><br><span class="line"> alert(<span class="string">"多选列表所有的值是:  "</span> + all + <span class="string">"其中被选中的是"</span>+sel+<span class="string">"。); </span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="使用javascript操作excel"><a class="markdownIt-Anchor" href="#使用javascript操作excel"></a> 使用javascript操作excel</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;</span><br><span class="line">            New Document</span><br><span class="line">        &lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">        &lt;meta name="Generator" content="EditPlus"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;meta name="Author" content=""&gt;</span></span><br><span class="line"><span class="regexp">        &lt;meta name="Keywords" content=""&gt;</span></span><br><span class="line"><span class="regexp">        &lt;meta name="Description" content=""&gt;</span></span><br><span class="line"><span class="regexp">        &lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">          var array1 = [];</span></span><br><span class="line"><span class="string">            var arr;</span></span><br><span class="line"><span class="string">            function WriteExcel() &#123;</span></span><br><span class="line"><span class="string">                var tempStr = "</span><span class="string">";</span></span><br><span class="line"><span class="string">                //得到文件路径的值  </span></span><br><span class="line"><span class="string">                var filePath = document.getElementById("</span>upfile<span class="string">").value;</span></span><br><span class="line"><span class="string">                //创建操作EXCEL应用程序的实例  </span></span><br><span class="line"><span class="string">                try &#123;</span></span><br><span class="line"><span class="string">                    var oXL = new ActiveXObject("</span>Excel.application<span class="string">");</span></span><br><span class="line"><span class="string">                &#125; catch(e) &#123;</span></span><br><span class="line"><span class="string">                    alert("</span>请启用ActiveX控件设置！<span class="string">");</span></span><br><span class="line"><span class="string">                    return;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                //打开指定路径的excel文件  </span></span><br><span class="line"><span class="string">                var oWB = oXL.Workbooks.open(filePath);</span></span><br><span class="line"><span class="string">                //操作第一个sheet(从一开始，而非零)  </span></span><br><span class="line"><span class="string">                oWB.worksheets(1).select();</span></span><br><span class="line"><span class="string">                var oSheet = oWB.ActiveSheet;</span></span><br><span class="line"><span class="string">                //使用的行数  </span></span><br><span class="line"><span class="string">                var rows = oSheet.usedrange.rows.count;</span></span><br><span class="line"><span class="string">                try &#123;</span></span><br><span class="line"><span class="string">                    for (var i = 1; i &lt;= rows; i++) &#123;</span></span><br><span class="line"><span class="string">                        var obj = new Object();</span></span><br><span class="line"><span class="string">                        obj.seq =    oSheet.Cells(i,1).value; </span></span><br><span class="line"><span class="string">obj.jgmc=    oSheet.Cells(i,2).value;  </span></span><br><span class="line"><span class="string">obj.wdmc=    oSheet.Cells(i,3).value;  </span></span><br><span class="line"><span class="string">obj.wddm=    oSheet.Cells(i,4).value;  </span></span><br><span class="line"><span class="string">obj.ywpz=    oSheet.Cells(i,5).value;  </span></span><br><span class="line"><span class="string">obj.hdmx=    oSheet.Cells(i,6).value;  </span></span><br><span class="line"><span class="string">obj.cccy=    oSheet.Cells(i,7).value;  </span></span><br><span class="line"><span class="string">obj.cccyfb=  oSheet.Cells(i,8).value;  </span></span><br><span class="line"><span class="string">obj.sjkm=    oSheet.Cells(i,9).value;  </span></span><br><span class="line"><span class="string">obj.cclx=    oSheet.Cells(i,10).value; </span></span><br><span class="line"><span class="string">obj.cccjrq=  oSheet.Cells(i,11).value; </span></span><br><span class="line"><span class="string">obj.ywrq=    oSheet.Cells(i,12).value; </span></span><br><span class="line"><span class="string">obj.ccy=     oSheet.Cells(i,13).value; </span></span><br><span class="line"><span class="string">obj.sjje=    oSheet.Cells(i,14).value; </span></span><br><span class="line"><span class="string">                                       </span></span><br><span class="line"><span class="string">                        array1.push(obj);</span></span><br><span class="line"><span class="string">                        obj=null;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    arr =   JSON.stringify(array1);</span></span><br><span class="line"><span class="string">                &#125; catch(e) &#123;</span></span><br><span class="line"><span class="string">                    document.getElementById("</span>txtArea<span class="string">").value = "</span>出错了<span class="string">";</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                document.getElementById("</span>txtArea<span class="string">").value = arr;</span></span><br><span class="line"><span class="string">                //退出操作excel的实例对象  </span></span><br><span class="line"><span class="string">                oXL.Application.Quit();</span></span><br><span class="line"><span class="string">                //手动调用垃圾收集器  </span></span><br><span class="line"><span class="string">                CollectGarbage();</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            function   ReadExcel()&#123;</span></span><br><span class="line"><span class="string">            alert(array1[1].jgmc); </span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>file<span class="string">" id="</span>upfile<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>button<span class="string">" onclick="</span>WriteExcel();<span class="string">" value="</span>write<span class="string">"&gt;</span></span><br><span class="line"><span class="string">         &lt;input type="</span>button<span class="string">" onclick="</span>ReadExcel();<span class="string">" value="</span>read<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;textarea id="</span>txtArea<span class="string">" cols=200 rows=400&gt;</span></span><br><span class="line"><span class="string">        &lt;/textarea&gt;</span></span><br><span class="line"><span class="string">    &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>未完待续， 后续补充中。。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用javascript小案例&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#常用javascript小案例&quot;&gt;&lt;/a&gt; 常用javascript小案例&lt;/h2&gt;
&lt;h4 id=&quot;样式调节&quot;&gt;&lt;a class=&quot;markdownIt-A
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="https://jjeian.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 主题介绍</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/hexo%E6%80%BB%E7%BB%93/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/hexo总结/</id>
    <published>2019-08-20T13:37:42.102Z</published>
    <updated>2019-08-20T05:18:21.688Z</updated>
    
    <content type="html"><![CDATA[<h4 id="hexo-小插曲介绍"><a class="markdownIt-Anchor" href="#hexo-小插曲介绍"></a> Hexo 小插曲介绍</h4><p>虽然标题是第一次写博客、 但是我这个困难户至少挣扎了1年多了， 一直下不去手、今天可算是开了个头、 贵在坚持吧</p><p>抽时间介绍我的hexo安装历程吧，今天实在是有点困了，要睡觉了。</p><p>昨天竟然通宵了、 搞到早上6点多，快7点才去睡觉、 今天上午睡了一上午，下午才醒， 哎，果然还是上班轻松，不上班的时候是真的累， 玩了几个小时，现在该正正经经的写下介绍了</p><h4 id="hexo-准备开始"><a class="markdownIt-Anchor" href="#hexo-准备开始"></a> Hexo 准备开始</h4><h2 id="准备环境"><a class="markdownIt-Anchor" href="#准备环境"></a> 准备环境</h2><ol><li><p>Node.js官网下载最新的安装包 <code>https://nodejs.org/en/</code> 、 安装完后、cmd检查下是否安装成功。</p></li><li><p>Git官网下载最新安装包 <code>https://git-scm.com/</code> 、 同样安装完后，鼠标右键看下是否又</p></li><li><p>安装Hexo , 在需要新建工程的目录下， 鼠标右键（即git bash）依次运行一下命令：</p></li></ol><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><ol start="4"><li>初始化Hexo命令后， 在命令行（即git bash）依次运行下面命令:</li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">init &lt;folder&gt;</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">&lt;folder&gt;</span></span><br><span class="line"><span class="attr">npm</span> <span class="string">install</span></span><br></pre></td></tr></table></figure><p>新建完成后， 会在你的工程目类下，产生如下文件夹和文件：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml  <span class="meta">#站点目类配置文件</span></span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source  <span class="meta">#mkdown博文书写目类</span></span><br><span class="line"><span class="string">|   ├── _drafts</span></span><br><span class="line"><span class="string">|   └── _posts</span></span><br><span class="line">└── themes <span class="meta">#加载或引入主题</span></span><br></pre></td></tr></table></figure><ol start="5"><li>启动服务器， （git bash）命令窗口输入</li></ol><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure><blockquote><p>注： 有可能上面一行命令会报错，报hexo不是命令或common base error: hexo not found 。。之类的<br>这里有一种解决方案：<br>在你使用第三步安装hexo客户端时， 仔细看输出内容里面有个路径，例如</p></blockquote><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将如下自己电脑中的hexo路径配置在path环境变量中，即可解决hexo命令找不到问题</span><br><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\.</span>..<span class="symbol">\A</span>ppData<span class="symbol">\R</span>oaming<span class="symbol">\n</span>pm<span class="symbol">\n</span>ode_modules<span class="symbol">\h</span>exo-cli<span class="symbol">\b</span>in\</span><br></pre></td></tr></table></figure><ol start="6"><li>浏览器中访问地址： <code>http://localhost:4000/</code><br>至此、 您的hexo 博客已经在本地搭建好了， 快去运行看看吧！</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;hexo-小插曲介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hexo-小插曲介绍&quot;&gt;&lt;/a&gt; Hexo 小插曲介绍&lt;/h4&gt;
&lt;p&gt;虽然标题是第一次写博客、 但是我这个困难户至少挣扎了1年多了， 一直下不去手、今天可算是开了个头
      
    
    </summary>
    
      <category term="博客" scheme="https://jjeian.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://jjeian.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git 常用命令</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/Git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/Git常用操作/</id>
    <published>2019-08-20T13:37:42.099Z</published>
    <updated>2019-08-20T05:18:21.683Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/supenman_mwg/article/details/39000037" target="_blank" rel="noopener">https://blog.csdn.net/supenman_mwg/article/details/39000037</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/supenman_mwg/article/details/39000037&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/supenman_mwg/a
      
    
    </summary>
    
      <category term="技术博客" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="git" scheme="https://jjeian.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Aes加解密应用</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%8A%80%E6%9C%AF/aes%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E6%8A%80%E6%9C%AF%E5%BA%94%E7%94%A8/"/>
    <id>https://jjeian.github.io/2019/08/20/技术/aes文件加密解密技术应用/</id>
    <published>2019-08-20T13:37:42.095Z</published>
    <updated>2019-08-20T05:23:40.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用aes加密解密代码详解"><a class="markdownIt-Anchor" href="#使用aes加密解密代码详解"></a> 使用AES加密解密代码详解</h2><p>首先，如果是使用nodejs + vue 写的前端， 那么你需要npm 加载一个js文件</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">npm</span> <span class="comment">i</span> <span class="comment">crypto</span><span class="literal">-</span><span class="comment">js</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">save</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">save</span><span class="literal">-</span><span class="comment">exact</span></span><br><span class="line"><span class="comment">npm</span> <span class="comment">install</span> <span class="comment">crypto</span><span class="literal">-</span><span class="comment">js</span></span><br></pre></td></tr></table></figure><h3 id="java代码加密解密类"><a class="markdownIt-Anchor" href="#java代码加密解密类"></a> java代码加密解密类</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">package com.telling.util.crypto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.logging.Log;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.logging.LogFactory;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Aes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">private <span class="keyword">static</span> <span class="keyword">final</span> Log logger = LogFactory.getLog(Aes.<span class="keyword">class</span>); <span class="comment">// log日志</span></span><br><span class="line"></span><br><span class="line">private <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">String</span> ALGORITHM = <span class="string">"AES/ECB/PKCS5Padding"</span>; <span class="comment">// "算法/模式/补码方式"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * AES加密</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * </span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @param content</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> *            加密内容</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @param key</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> *            加密密码，由字母或数字组成 此方法使用AES-128-ECB加密模式，key需要为16位</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> *            加密解密key必须相同，如：abcd1234abcd1234</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @return 加密密文</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> ****************************************************/</span></span></span></span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> <span class="built_in">String</span> enCode(<span class="built_in">String</span> content, <span class="built_in">String</span> key) &#123;</span><br><span class="line"><span class="keyword">if</span> (key == <span class="keyword">null</span> || <span class="string">""</span>.equals(key)) &#123;</span><br><span class="line">logger.info(<span class="string">"key为空！"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key.length() != <span class="number">16</span>) &#123;</span><br><span class="line">logger.info(<span class="string">"key长度不是16位！"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">byte[] raw = key.getBytes(); <span class="comment">// 获得密码的字节数组</span></span><br><span class="line">SecretKeySpec skey = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>); <span class="comment">// 根据密码生成AES密钥</span></span><br><span class="line">Cipher cipher = Cipher.getInstance(ALGORITHM); <span class="comment">// 根据指定算法ALGORITHM自成密码器</span></span><br><span class="line">cipher.init(Cipher.ENCRYPT_MODE, skey); <span class="comment">// 初始化密码器，第一个参数为加密(ENCRYPT_MODE)或者解密(DECRYPT_MODE)操作，第二个参数为生成的AES密钥</span></span><br><span class="line">byte[] byte_content = content.getBytes(<span class="string">"utf-8"</span>); <span class="comment">// 获取加密内容的字节数组(设置为utf-8)不然内容中如果有中文和英文混合中文就会解密为乱码</span></span><br><span class="line">byte[] encode_content = cipher.doFinal(byte_content); <span class="comment">// 密码器加密数据</span></span><br><span class="line"><span class="keyword">return</span> Base64.encodeBase64String(encode_content); <span class="comment">// 将加密后的数据转换为字符串返回</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * AES解密</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * </span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @param content</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> *            加密密文</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @param key</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> *            加密密码,由字母或数字组成 此方法使用AES-128-ECB加密模式，key需要为16位 加密解密key必须相同</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @return 解密明文</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> ****************************************************/</span></span></span></span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> <span class="built_in">String</span> deCode(<span class="built_in">String</span> content, <span class="built_in">String</span> key) &#123;</span><br><span class="line"><span class="keyword">if</span> (key == <span class="keyword">null</span> || <span class="string">""</span>.equals(key)) &#123;</span><br><span class="line">logger.info(<span class="string">"key为空！"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key.length() != <span class="number">16</span>) &#123;</span><br><span class="line">logger.info(<span class="string">"key长度不是16位！"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">byte[] raw = key.getBytes(); <span class="comment">// 获得密码的字节数组</span></span><br><span class="line">SecretKeySpec skey = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>); <span class="comment">// 根据密码生成AES密钥</span></span><br><span class="line">Cipher cipher = Cipher.getInstance(ALGORITHM); <span class="comment">// 根据指定算法ALGORITHM自成密码器</span></span><br><span class="line">cipher.init(Cipher.DECRYPT_MODE, skey); <span class="comment">// 初始化密码器，第一个参数为加密(ENCRYPT_MODE)或者解密(DECRYPT_MODE)操作，第二个参数为生成的AES密钥</span></span><br><span class="line">byte[] encode_content = Base64.decodeBase64(content); <span class="comment">// 把密文字符串转回密文字节数组</span></span><br><span class="line">byte[] byte_content = cipher.doFinal(encode_content); <span class="comment">// 密码器解密数据</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">String</span>(byte_content, <span class="string">"utf-8"</span>); <span class="comment">// 将解密后的数据转换为字符串返回</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * AES加密解密测试</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * </span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @param args</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> * @return</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code"> ****************************************************/</span></span></span></span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line"><span class="built_in">String</span> content = <span class="string">"加密解密测试"</span>;</span><br><span class="line">logger.info(<span class="string">"加密content："</span> + content);</span><br><span class="line"><span class="built_in">String</span> key = <span class="string">"abcd1234abcd1234"</span>;</span><br><span class="line">logger.info(<span class="string">"加密key："</span> + key);</span><br><span class="line"><span class="built_in">String</span> enResult = enCode(content, key);</span><br><span class="line">logger.info(<span class="string">"加密result："</span> + enResult);</span><br><span class="line"><span class="built_in">String</span> deResult = deCode(enResult, key);</span><br><span class="line">logger.info(<span class="string">"解密result："</span> + deResult);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java类中加密解密使用方式"><a class="markdownIt-Anchor" href="#java类中加密解密使用方式"></a> java类中加密解密使用方式</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/getqingHou"</span>)</span><br><span class="line">public <span class="built_in">String</span> getqingHou(HttpServletRequest request, HttpServletResponse response) throws Exception &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Map</span> map = <span class="keyword">this</span>.getParameterMap(request);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Map</span> retuData = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">map.put(<span class="string">"role"</span>, <span class="string">"admin"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">**前端传过来的加密值，进行解密**</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>/</span></span></span><br><span class="line"><span class="built_in">String</span> keyC = map.<span class="keyword">get</span>(<span class="string">"keyC"</span>).toString();</span><br><span class="line"><span class="built_in">String</span> contC = map.<span class="keyword">get</span>(<span class="string">"contentC"</span>).toString();</span><br><span class="line">System.out.println(keyC + <span class="string">"   :   "</span>  + contC);</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> decC = <span class="keyword">new</span> <span class="built_in">String</span>(Aes.deCode(contC, keyC));</span><br><span class="line">System.out.println(<span class="string">"前端传进来的数据： 解密后----》》》 "</span> + decC);</span><br><span class="line">System.out.println(<span class="string">"------------------------------------------------------------------"</span>);</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">*加密字符串，解密字符串*</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span></span></span><br><span class="line"><span class="comment">// 1234567890ABCDEF1234567890ABCDEf</span></span><br><span class="line"><span class="built_in">String</span> key = UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>).toUpperCase().toString().substring(<span class="number">0</span>,<span class="number">14</span>) + <span class="string">"=="</span>;</span><br><span class="line"><span class="built_in">String</span> src = <span class="string">"Ejian111234"</span>;</span><br><span class="line">System.out.println(<span class="string">"key----&gt;&gt;&gt;&gt; "</span>+key);</span><br><span class="line"><span class="comment">// 加密字符串</span></span><br><span class="line"><span class="built_in">String</span> enc = Aes.enCode(src, key);</span><br><span class="line">System.out.println(<span class="string">"加密后---》》》 "</span> + enc);</span><br><span class="line"><span class="comment">// 解密后</span></span><br><span class="line"><span class="built_in">String</span> dec = <span class="keyword">new</span> <span class="built_in">String</span>(Aes.deCode(enc, key));</span><br><span class="line">System.out.println(<span class="string">"解密后----》》》 "</span> + dec);</span><br><span class="line">System.out.println(<span class="string">"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"</span>);</span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">**加密数组，传到前端进行解密**</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span>  mapEnc = Aes.enCode(JSON.toJSONString(map), key);</span><br><span class="line">System.out.println(<span class="string">"集合类型加密后的数据： "</span> + mapEnc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">retuData.put(<span class="string">"enc"</span>, enc);</span><br><span class="line">retuData.put(<span class="string">"key"</span>, key);</span><br><span class="line">retuData.put(<span class="string">"map"</span>, mapEnc);</span><br><span class="line"></span><br><span class="line">logger.info(<span class="string">"+++++++get user info !"</span> + retuData);</span><br><span class="line"><span class="keyword">return</span> JSON.toJSONString(retuData);</span><br><span class="line">&#125; <span class="keyword">catch</span> (LoginException e) &#123;</span><br><span class="line">logger.error(e.getMessage());</span><br><span class="line"><span class="keyword">return</span> e.getErrorCode() + <span class="string">"_"</span> + e.getMessage();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="js代码加密解密方法"><a class="markdownIt-Anchor" href="#js代码加密解密方法"></a> js代码加密解密方法</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> CryptoJS = require(<span class="string">"crypto-js"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * AES加密</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * @param content 加密内容</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * @param key 加密密码，由字母或数字组成</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> 　　　　　　此方法使用AES-128-ECB加密模式，key需要为16位</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> 　　　　　　加密解密key必须相同，如：abcd1234abcd1234</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * @return 加密密文</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**/</span></span></span><br><span class="line"><span class="keyword">export</span> function encrypt(content, key) &#123;</span><br><span class="line">    <span class="keyword">const</span> sKey = CryptoJS.enc.Utf8.parse(key);</span><br><span class="line">    <span class="keyword">const</span> sContent = CryptoJS.enc.Utf8.parse(content);</span><br><span class="line">    <span class="keyword">const</span> encrypted = CryptoJS.AES.encrypt(sContent, sKey, &#123;mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7&#125;);</span><br><span class="line">    <span class="keyword">return</span> encrypted.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * AES解密</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * @param content 加密密文</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * @param key 加密密码，由字母或数字组成</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> 　　　　　　此方法使用AES-128-ECB加密模式，key需要为16位</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> 　　　　　　加密解密key必须相同，如：abcd1234abcd1234</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> * @return 解密明文</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**/</span></span></span><br><span class="line"><span class="keyword">export</span> function decrypt(content, key) &#123;</span><br><span class="line">    <span class="keyword">const</span> sKey = CryptoJS.enc.Utf8.parse(key);</span><br><span class="line">    <span class="keyword">const</span> decrypt = CryptoJS.AES.decrypt(content, sKey, &#123;mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7&#125;);</span><br><span class="line">    <span class="keyword">return</span> CryptoJS.enc.Utf8.stringify(decrypt).toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端加密解密使用方法"><a class="markdownIt-Anchor" href="#前端加密解密使用方法"></a> 前端加密解密使用方法</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123; getqingHou &#125; <span class="keyword">from</span> <span class="string">"api/test.js"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123; decrypt, encrypt &#125; <span class="keyword">from</span> <span class="string">"api/cryptoAes.js"</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> CryptoJS = <span class="built_in">require</span>(<span class="string">"crypto-js"</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"login"</span>,</span></span><br><span class="line"><span class="undefined">        created() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.getqingHouFun()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="undefined">            getqingHouFun() &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'============test===start==========='</span>)</span></span><br><span class="line"><span class="javascript">                getqingHou(&#123;<span class="attr">test</span>: <span class="string">'test'</span>, <span class="attr">keyC</span>: <span class="string">'1234567890ABCDEF'</span>, <span class="attr">contentC</span>: encrypt(<span class="string">'Ejian111234567890'</span>, <span class="string">'1234567890ABCDEF'</span>)&#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(response.data)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'=====================aes==================='</span>)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// npm i crypto-js --save --save-exact</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// npm install crypto-js</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> decrypt1 = decrypt(response.data.enc, response.data.key);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"后端解密后的数据: ---字符串类型&gt;&gt;&gt; "</span> + decrypt1)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> decrypt2 = decrypt(response.data.map, response.data.key);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"后端解密后的数据：---集合类型&gt;&gt;&gt; "</span> + decrypt2)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> json = <span class="built_in">JSON</span>.parse(decrypt2);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"后端解密后的数据：---集合类型&gt;&gt;&gt;------转JSON&gt;&gt;&gt; "</span> + json.contentC)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'===========test===end==================='</span>)</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>好了，代码全部贴出来了， 直接copy就能用， 记得看过点赞， 发个言在走哦！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用aes加密解密代码详解&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用aes加密解密代码详解&quot;&gt;&lt;/a&gt; 使用AES加密解密代码详解&lt;/h2&gt;
&lt;p&gt;首先，如果是使用nodejs + vue 写的前端， 那么你需要npm 加载一
      
    
    </summary>
    
      <category term="技术" scheme="https://jjeian.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="https://jjeian.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>过往4年</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%84%9F%E6%82%9F/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94(%E6%A0%87%E9%A2%98%E8%8A%82%E7%82%B9%E8%8C%83%E6%96%87)/"/>
    <id>https://jjeian.github.io/2019/08/20/感悟/生活随笔(标题节点范文)/</id>
    <published>2019-08-20T13:37:42.087Z</published>
    <updated>2019-08-22T05:26:09.139Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">请您输入管理员授权密码、点击解码键（Decrypt）继续阅读该文章！</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      该博客需管理员授权才能查看、请确认密码后点入
    
    </summary>
    
      <category term="生活唠嗑" scheme="https://jjeian.github.io/categories/%E7%94%9F%E6%B4%BB%E5%94%A0%E5%97%91/"/>
    
    
      <category term="生活琐事碎碎念" scheme="https://jjeian.github.io/tags/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="生活随笔" scheme="https://jjeian.github.io/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
      <category term="人生" scheme="https://jjeian.github.io/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>随笔生活</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%84%9F%E6%82%9F/%E7%94%9F%E6%B4%BB%E5%B0%8F%E4%BA%8B/"/>
    <id>https://jjeian.github.io/2019/08/20/感悟/生活小事/</id>
    <published>2019-08-20T13:37:42.084Z</published>
    <updated>2019-08-20T05:18:21.705Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">请您输入管理员授权密码、点击解码键（Decrypt）继续阅读该文章！</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX19BDTd2OoN+imY6owYaOkl0qvr4aIWlp0jxJP5zjVsFcT3opAC0gyL3Ul4g6C8ziczK5CJBn1GaiyaqeOOmPj5RSTFG0zcoh7Mh0gyp+1uOkLR71Wqd52SOmm6OKQJMTGAhiwEQkEYMfKoHyOngwJnkPeP9AP6davRfgcnRGzRu/ISvM76zRZdo8WXCdtv6Rd9E9vt3+qZcZC9oG8z8iAohhYU65BNLcOMdJ78lyfyMHw1DJo9LICmRzErKXwKvCm8YUh4QIid/gykKEcJ7eUPNwmuJpUjOzwDUa7YvPQhxsIU5s+e+v+rBxX0pVPONRwv18MaJf/HkMYX5ZbsycszrGbFEjU69nCpQeX3ZG1rY88mcLvJ+3g9R+Bmp6XNtbpmgs8OWwuAm7Qq3NO0fMgyzNAQ4Q2R7f3TV+QDkIGuVDGyRl5kfxPFXGiX5LAgL2KopN0xWw4Z4+IdLq7w4giJj8c78f1KxBdNp4NZfmlLuQNeAd4km1W/N/c+n5JvWPsPht8l6ZpnqWqENd8E3rXBJx8Ra8dCN9QW96Wkrd/emUzKws/ZQu8Q3Dfze6e/ZJ78RjGvEk9oLO1bYWdLD75kDyy36tOlWedz/0rcozzkdshIW+fFVO3mTZXTimto0zw0U6lM8fcaSLKWQ00Z4ioJ0DNngJaWW0yM3gOogASEHLLd9vagsX3GKgu1rLXUM9lTMVvjpMASQfPDS07ArUYcO1LWnZ7SiOoEpZZZ3ExPWi2diqJBfdwMmAlRmIyBPP4kWMrGyD069psuMMdBVAqojqrgu+uObo4P5wCjS2M02/QRzY5sD33ZG/MqMTXivZJhI6pT23B9F1Za8z4kUo3btWsR/IUuKqSGnoasjlrLZVZv3VTtSCQ98p6yWIH2tzGqQgtSrTCKl2/ul4TaISaJX6Sx7ALejlT40v/yryi7BSNAZFzgrEcWkMEjsLLrIjbThUgQ4lc/AaGfUyd2mBnfHgGh2ipyLhTQ70mV2iMdCePtmmdZpgFucdVBIlYiFIqgomO0AzAZRH+DcPfmtATBYGpo0UzEb1XILYprrWgEL2WwIJ//jUUEIb5F8JkiEV1/eXHNelxTJXUI9K8Lh4pROO0z6ktlTTNKmdE861L9Ry+4ZoO5W2taQzG/LWn8QEyPEe2qQP3a9zGx9whVjTNFwlJLCm2KFjRS3DcV5kcpN8eqD9k/8QbLLbzSmG5GBY4FaGrxHKd2WrIiwe3ezRv5wbbEhoRLgXXJ9wL42kJM4ZrdcMYbgBm7PTq8flBZQPjfa085rG+05z6j6qED0RDoENLTWIYdSK7Vj5Aj8rJpjh9zLBwyf44SEo9JezKv9FcYopdwsNQXCy227Fh8ceitRX78qIRkrtbw= </div>]]></content>
    
    <summary type="html">
    
      生活随笔暂不开放，请获取授权后重试
    
    </summary>
    
      <category term="生活唠嗑" scheme="https://jjeian.github.io/categories/%E7%94%9F%E6%B4%BB%E5%94%A0%E5%97%91/"/>
    
    
      <category term="生活琐事碎碎念" scheme="https://jjeian.github.io/tags/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="生活随笔" scheme="https://jjeian.github.io/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>鸡汤</title>
    <link href="https://jjeian.github.io/2019/08/20/%E6%84%9F%E6%82%9F/%E4%BA%BA%E7%94%9F%E6%84%9F%E6%82%9F/"/>
    <id>https://jjeian.github.io/2019/08/20/感悟/人生感悟/</id>
    <published>2019-08-20T13:37:42.082Z</published>
    <updated>2019-08-20T05:20:39.567Z</updated>
    
    <content type="html"><![CDATA[<h4 id="鸡汤"><a class="markdownIt-Anchor" href="#鸡汤"></a> 鸡汤</h4><p><code>路很长、 请适当放慢脚步、不要错过路边的风景</code></p><ul><li>不懂得拒绝别人的请求</li><li>太容易暴露自己的内心♥</li><li>应得的利益不知道去争取</li><li>没有底线与原则的宽容</li><li>没事少装B、现实会啪啪打脸的</li><li>面子是别人给的、脸是自己挣得</li><li>脸皮厚点、不开心也不要直接表现出来、经常笑着，不要老是板着张脸</li><li>遇到领导、遇到能力比你强的、而且平时表现又很强势的、 不要怂、 你他妈是谁啊、 大不了老子不干了、 别他妈瞎吵吵</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;鸡汤&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#鸡汤&quot;&gt;&lt;/a&gt; 鸡汤&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;路很长、 请适当放慢脚步、不要错过路边的风景&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不懂得拒绝别人的请求&lt;/li&gt;
&lt;li&gt;太容易
      
    
    </summary>
    
      <category term="人生哲理" scheme="https://jjeian.github.io/categories/%E4%BA%BA%E7%94%9F%E5%93%B2%E7%90%86/"/>
    
    
      <category term="哲学" scheme="https://jjeian.github.io/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>有毒的代码注释</title>
    <link href="https://jjeian.github.io/2019/08/20/%E5%B7%A5%E5%85%B7/%E6%9C%89%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0%E6%B3%A8%E9%87%8A/"/>
    <id>https://jjeian.github.io/2019/08/20/工具/有趣的文章注释/</id>
    <published>2019-08-20T13:37:42.076Z</published>
    <updated>2019-08-20T05:15:58.369Z</updated>
    
    <content type="html"><![CDATA[<h2 id="有毒的代码注释"><a class="markdownIt-Anchor" href="#有毒的代码注释"></a> 有毒的代码注释</h2><h4 id="鸟"><a class="markdownIt-Anchor" href="#鸟"></a> 鸟</h4><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/*        .---.        .-----------</span><br><span class="line">*       /     <span class="symbol">\ </span> __  /    ------</span><br><span class="line">*      / /     <span class="symbol">\(</span>  )/    -----</span><br><span class="line">*     //////   ' <span class="symbol">\/</span> `   ---</span><br><span class="line">*    //// / // :    : ---</span><br><span class="line">*   // /   /  /`    '--</span><br><span class="line">*  //          //..<span class="symbol">\\</span></span><br><span class="line">*         ====UU====UU====</span><br><span class="line">*             '//||<span class="symbol">\\</span>`</span><br><span class="line">*               ''``</span><br><span class="line">*/  </span><br><span class="line">/*</span><br><span class="line">*                    .-'-._</span><br><span class="line">*                   /    e&lt;</span><br><span class="line">*               _.-''';  (</span><br><span class="line">*     _______.-''-._.-'  /</span><br><span class="line">*     ====---:_''-'     /  _  _     <span class="variable">%%</span><span class="variable">%%</span></span><br><span class="line">*              '-=. .-'` _(_)(_)   <span class="variable">%%</span>|/<span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*                _|_\_  (_)(_)(_) %</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*               //\\//\\//\\//\\//\\%</span>/_<span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*           ____\\//\\//\\//\\//\\// |__|/__%</span><span class="variable">%%</span></span><br><span class="line">*  ________(___  <span class="symbol">\\</span>/<span class="symbol">\/</span>/<span class="symbol">\\</span>//<span class="symbol">\\</span>//<span class="symbol">\\</span>//__//___<span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*            / \  \_/ __ \___//------\--%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*  _________/   \____/  \____/\\%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*                              \_-%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%%</span><span class="variable">%</span></span><br><span class="line"><span class="variable">*</span></span><br><span class="line"><span class="variable">*/</span></span><br></pre></td></tr></table></figure><h4 id="简易计算器"><a class="markdownIt-Anchor" href="#简易计算器"></a> 简易计算器</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/<span class="symbol">*</span></span><br><span class="line"><span class="symbol">*</span> +---------------------------+</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> ///////////////////////// </span>|</span><br><span class="line"><span class="symbol">*</span> +---------------------------+</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [              1,264.45 ] </span>|</span><br><span class="line"><span class="symbol">*</span> +---------------------------+</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [sto] [rcl] [&lt;--] [AC/ON] </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [ ( ] [ ) ] [sqr] [  /  ] </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [ 7 ] [ 8 ] [ 9 ] [  *  ] </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [ 4 ] [ 5 ] [ 6 ] [  -  ] </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [ 1 ] [ 2 ] [ 3 ] [  +  ] </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string"> [ 0 ] [ . ] [+/-] [  =  ] </span>|</span><br><span class="line"><span class="symbol">*</span> |<span class="string">                           </span>|</span><br><span class="line"><span class="symbol">*</span> +---------------------------+</span><br><span class="line"><span class="symbol">*</span>/</span><br></pre></td></tr></table></figure><h4 id="hello-kitty-可爱的小猫咪"><a class="markdownIt-Anchor" href="#hello-kitty-可爱的小猫咪"></a> hello kitty 可爱的小猫咪</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!`   `<span class="number">4</span>!!!!!!!!!!~<span class="number">4</span>!!!!!!!!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   &lt;~:   ~!!!~   ..  <span class="number">4</span>!!!!!!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  ~~~~~~~  <span class="string">'  ud$$$$$  !!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  ~~~~~~~~~: ?$$$$$$$$$  !!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!!!`     ``~!!!!!!!!!!!!!!  ~~~~~          "*$$$$$k `!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!!  $$$$$bu.  '</span>~!~`     .  <span class="string">'~~~~      :~~~~          `4!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!  $$$$$$$$$$$c  .zW$$$$$E ~~~~      ~~~~~~~~  ~~~~~:  '</span>!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!! d<span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span>E ~~~~~    <span class="string">'~~~~~~~~    ~~~~~  !!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!&gt; 9$$$$$$$$$$$$$$$$$$$$$$$ '</span>~~~~~~~ <span class="string">'~~~~~~~~     ~~~~  !!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!&gt; $$$$$$$$$$$$$$$$$$$$$$$$b   ~~~    '</span>~~~~~~~     <span class="string">'~~~ '</span>!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!&gt; <span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$cuuue</span><span class="variable">$$</span>N.   ~        ~~~  !!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!! **<span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span>Ne  ~~~~~~~~  `!!!!!!!!!!!</span><br><span class="line">*   !!!!!!!!!  J<span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span>N  ~~~~~  zL <span class="string">'!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!  d$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c     z$$$c `!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!&gt; &lt;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$&gt; 4!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  !!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!! &lt;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*"   ....:!!</span></span><br><span class="line"><span class="string">*   !!!!!!~ 9$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$e@$N '</span>!!!!!!!</span><br><span class="line">*   !!!!!!  <span class="number">9</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span>  !!!!!!!</span><br><span class="line">*   !!!!!!  <span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="string">""</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$~</span> ~~<span class="number">4</span>!!!!</span><br><span class="line">*   !!!!!!  <span class="number">9</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span>    <span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$Lue</span>  ::<span class="symbol">:</span>!!!!</span><br><span class="line">*   !!!!!!&gt; <span class="number">9</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="string">" '$$$$$$$$$$$$$$$$$$$$$$$$$$$    $$$$$$$$$$  !!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!! '$$*$$$$$$$$E   '$$$$$$$$$$$$$$$$$$$$$$$$$$$u.@$$$$$$$$$E '!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!~`   .eeW$$$$$$$$   :$$$$$$$$$$$$$***$$$$$$$$$$$$$$$$$$$$u.    `~!!!!!</span></span><br><span class="line"><span class="string">*   !!&gt; .:!h '$$$$$$$$$$$$ed$$$$$$$$$$$$Fz$$b $$$$$$$$$$$$$$$$$$$$$F '!h.  !!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!L '$**$$$$$$$$$$$$$$$$$$$$$$ *$$$ $$$$$$$$$$$$$$$$$$$$F  !!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!   d$$$$$$$$$$$$$$$$$$$$$$$$buud$$$$$$$$$$$$$$$$$$$$"</span>  !!!!!!!!!!</span><br><span class="line">*   !!!!!!! .&lt;!  <span class="comment">#$$*"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*  :!!!!!!!!!!!</span></span><br><span class="line">*   !!!!!!!!!!!!:   d<span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="variable">$$</span><span class="comment">#  :!!!!!!!!!!!!!</span></span><br><span class="line">*   !!!!!!!!!!!~  :  <span class="string">'#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*"    !!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!!  !!!!!:   ^"**$$$$$$$$$$$$$$$$$$$$**#"     .:&lt;!!!!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!!!!!!!!!!!!!:...                      .::!!!!!!!!!!!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="string">*</span></span><br><span class="line"><span class="string">*/</span></span><br></pre></td></tr></table></figure><h4 id="happy-happy"><a class="markdownIt-Anchor" href="#happy-happy"></a> happy happy</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* .,,. .,,.</span><br><span class="line">*:XXXX,XXXX:                   .SSSSSSS'</span><br><span class="line">*'XXXXXXXXX'                 .SSSSSSSS,WW:,  .''':,.</span><br><span class="line">* ':XXXXX:'                .SSSSSSSSSS:WWW:,       '::,</span><br><span class="line">*   'XXX'                 .SSSSSSSSS,WWW( )WW        '::,  '////</span><br><span class="line">*    ':'                  SSSSSSSSSSSS'WWWWWWD         '::,////</span><br><span class="line">*                   ,.    SSSSSSS(((SSSWWWWW          ,WW//:.'.W.</span><br><span class="line">*                 ,((()   'SSSSSS(((WWWWWWWWWW)        //'W,:WWWW'</span><br><span class="line">*               ,(((((()   'SSSSSS((WWWWWWWWWW)      <span class="comment">//   'WWW,WWW</span></span><br><span class="line">*            .,(((((((())    'SSSSWWWWWWWWWWW'     <span class="comment">//     .WWWWW:,</span></span><br><span class="line">*         .,((((((((((())),     SSWWWWWWWWWW'    //      ,WWWW' ':,</span><br><span class="line">*     .,((((((((((((((())))),.,,,,WWWWWWWWWW:, //       ,WWWWW'  ':</span><br><span class="line">*'((((((((((((((((((((()))))WWWWWWWWWWWWWVVVV<span class="comment">//WWWWW:,.,WWWWW'    :</span></span><br><span class="line">*   ((((((((((((((((((()))(WWWWWWWWWWWWWWVVVVVVWWWWWWWWWWWWW'    '</span><br><span class="line">*     ((((((((((((((((()))(WWWWWWWWWWWWWVVVVVVVWWWWWWWWWWWW'</span><br><span class="line">*       (((((((((((((())(()(WWWWWWWWW.VVVVVVVWWWWWWWWWWW:'</span><br><span class="line">*           ((((((((())) ()(WWWWWW.VVVVVVV'WWWWWWW''      .,,. .,,.</span><br><span class="line">*              ((((()))   ((WW,VVVVVVVVV'WWWWWWWWW       :XXXX,XXXX:</span><br><span class="line">*                           WVVVVVVVVVV'WWWWWWWW:'       'XXXXXXXXX'</span><br><span class="line">*     .,,. .,,.             VVVVVVVVV'WWWWWWWWWW          ':XXXXX:'</span><br><span class="line">*    :XXXX,XXXX:          .WVVVVVVV'WWWWWWWWWWWW            'XXX'</span><br><span class="line">*    'XXXXXXXXX'         .WWW''''',WWWWWWWWWWWW:             ':'</span><br><span class="line">*     ':XXXXX:'        (())))WWWWWWWWWWWWWWWWW'</span><br><span class="line">*       'XXX'         ((())))))WWWWWWWWWWWWWW'</span><br><span class="line">*        ':'         ((()))))))))WWWWWWWWWWW'</span><br><span class="line">*                    ()WWWWWW))))))))))))))))</span><br><span class="line">*                    :WWWWWWWWW))))))))))))))     .,,. .,,.</span><br><span class="line">*                    WWWWWWWWWWW)))))))WWWWW.    :XXXX,XXXX:</span><br><span class="line">*                   :WWWWWWWWWW')))))WWWWWWWW.   'XXXXXXXXX'</span><br><span class="line">*                   WWWWWWWWWW'  'WWWWWWWWWWWW    ':XXXXX:'</span><br><span class="line">*         .,,:WWWW:,WWWWWWWWW'    'WWWWWWWWWWW      'XXX'</span><br><span class="line">*        ,WWWWWWWWWWWWWWWWWW'       'WWWWWWWWW       ':'</span><br><span class="line">*       ,WWWWWWWWWWWWWWWWWW'         'WWWWWWWW,</span><br><span class="line">*       WWWWWWW'   '':WWW:'           'WWWWWWWW</span><br><span class="line">*     .WWWWWWW'                      .WWWWWWWWW</span><br><span class="line">*     ''W'W'WW                      ,WWWWWWWWW'          .,,. .,,.</span><br><span class="line">*           ''                     ,WWWWWWWW'           :XXXX,XXXX:</span><br><span class="line">*           .,,. .,,.             .WWWWWW:'             'XXXXXXXXX'</span><br><span class="line">*          :XXXX,XXXX:         .WWWWWWW'                 ':XXXXX:'</span><br><span class="line">*          'XXXXXXXXX'         WWWWWW'                     'XXX'</span><br><span class="line">*           ':XXXXX:'           WWWWW'                      ':'</span><br><span class="line">*             'XXX'              WWWW.</span><br><span class="line">*              ':'               'WWWWW,</span><br><span class="line">*                                 '' ''</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h4 id="小情侣"><a class="markdownIt-Anchor" href="#小情侣"></a> 小情侣</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*                      ,m<span class="meta">##mmmmm.</span></span><br><span class="line">*                    ,d<span class="meta">###########m.</span></span><br><span class="line">*                  ,d<span class="meta">###############b</span></span><br><span class="line">*                ,d<span class="meta">##################b</span></span><br><span class="line">*                'd###################b,</span><br><span class="line">*                ;#####################</span><br><span class="line">*                d#######"+Y#b~~#######     _mmm,mmm._</span><br><span class="line">*                #######( ||#P  #P|"###    m##########m </span><br><span class="line">*                ######____________d###  ,d############b.</span><br><span class="line">*                #####~P-.|##PL-._"#### d################b</span><br><span class="line">*                `###|    |"'      )<span class="meta">##Pd##################.</span></span><br><span class="line">*                 <span class="string">"##| ,~\    -~`. |#P#####################</span></span><br><span class="line">*                  <span class="string">"#|      |      ;P #####################</span></span><br><span class="line">*                   `\      ^     ;/  <span class="meta">#####################</span></span><br><span class="line">*                     \     =     /   <span class="meta">############PT"PY"YnP)</span></span><br><span class="line">*                      \        .'    ########Y##P;`_', <span class="meta">#Y"`-.</span></span><br><span class="line">*                       <span class="symbol">~--.  .-'     ########|Y7 ,~ ~  #|.   `.</span></span><br><span class="line"><span class="symbol">*                        `  ~~ |\__   "#####7'-.        #| \    \</span></span><br><span class="line"><span class="symbol">*                     .-/|     |\\\~~--"#### ~  |  _    #|` \    .</span></span><br><span class="line"><span class="symbol">*                 _.-~ </span>: ;      ,<span class="string">|.\    ~"</span><span class="meta">##b    .~/   /#| \ :   `</span></span><br><span class="line">*             .-<span class="symbol">~~     ' Tm..mm##|`       "##b    ~   /|#|  </span>:<span class="string">|    \</span></span><br><span class="line">*                     .  <span class="string">|#######| :       "</span><span class="meta">##`---.../ |#|  ||     |</span></span><br><span class="line">*            <span class="string">||       '  |#######| `        "</span><span class="meta">#   `     ~#|..---. -~</span></span><br><span class="line">*            ;<span class="string">|      ;   |#######|  :        Loo. |     o'/ ,    \</span></span><br><span class="line">*            '`      \   |#######|  |:  .' ,d8888/\     <span class="number">8</span><span class="symbol">~ ,8  .  \</span></span><br><span class="line"><span class="symbol">*           |  .      \  |#######| .'`. </span>; d8888888 :   ,<span class="number">8</span>  d'   `. \</span><br><span class="line">*           ` \`       &gt; |#######|`-. || d<span class="number">88888888</span>~'  ,d8 d8   \ _\-'</span><br><span class="line">*            | \.   .-~  |#######|   7`|d<span class="number">88888888</span>8  ,' <span class="number">8</span>bo8L`\`.'|</span><br><span class="line">*            ;  |   `.   |#######|   ; d<span class="number">88888888</span>8P,'  d88888b\T  <span class="string">|</span></span><br><span class="line">*            '  | '  :   <span class="string">|#######|   ; Y888888""~~-   Y8b8888    |</span></span><br><span class="line">*               \;   <span class="string">|   |#######|  :  &lt;Y888~     |`. ddPd888    |</span></span><br><span class="line">*           <span class="string">|    |   `   |#######|  ;  | YP       |\\ 88d8888    |</span></span><br><span class="line">*           <span class="string">|    |    :  |#######| .'  | `       _|`:.-Y88888    |</span></span><br><span class="line">*          _L.--<span class="symbol">~|    `  |#######| |   |  |   _-~ -  \  Y888bo.  |</span></span><br><span class="line"><span class="symbol">*         &lt;      |     </span>: <span class="string">|#######| :   `  `.,'--~ ` \ |  `8P'~ \ |~~----.</span></span><br><span class="line">*          <span class="string">|     `     ` |#######|.'    :   |~     | ~     |    `|      |</span></span><br><span class="line">*          <span class="string">|     |      :|#######|;     |   |      |     _.`.    .      |</span></span><br><span class="line">*          `-----`      `<span class="string">|#######|'      \  ,      ' ---~   ,m   &lt;      ;</span></span><br><span class="line">*           '     |      |#######|        \/      /mmmmmmmm###bmd#b     '</span><br><span class="line">*          <span class="string">|      |      |######"</span><span class="string">|        ,'    .d#################    :</span></span><br><span class="line">*          <span class="string">|      |.     |~~~T~  |        '    ,###################    '</span></span><br><span class="line">*          <span class="string">|      ||     |   |   |       '    d####################b  :</span></span><br><span class="line">*          <span class="string">|     ,|'     |   |   |     .'   .d######################..'</span></span><br><span class="line">*          <span class="string">|     '|      |   |   L.--~~    /########################b'</span></span><br><span class="line">*          <span class="string">|    : |      |   |  ,';        '###""""""""""""""""######b</span></span><br><span class="line">*          <span class="string">|    ' |      |   | , / ; ,   _/###"</span> <span class="string">"Yakamo &amp; Pai"</span>   <span class="string">"####</span></span><br><span class="line">*          <span class="string">|   ,  |      |   | || |  : (~ | ##    (from 3x3 Eyes)  ###</span></span><br><span class="line">*              ;  <span class="string">|      |     `` `  |    '        --- Dov Sherman</span></span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h4 id="小汽车来喽"><a class="markdownIt-Anchor" href="#小汽车来喽"></a> 小汽车来喽</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"><span class="bullet">*</span></span><br><span class="line"><span class="bullet">*                  </span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"><span class="bullet">*                  </span>|                                                      |</span><br><span class="line"><span class="bullet">*             </span>/    |                                                      |</span><br><span class="line"><span class="bullet">*            </span>/---, |                                                      |</span><br><span class="line"><span class="bullet">*       </span>-----# ==| |                                                      |</span><br><span class="line"><span class="bullet">*       </span>| :) # ==| |                                                      |</span><br><span class="line"><span class="bullet">*  </span>-----'----#   | |<span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="emphasis">___</span>_|</span><br><span class="line"><span class="bullet">*  </span>|)<span class="strong">___()  '#   |__</span><span class="strong">____====__</span><span class="strong">__   \__</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="strong">_____</span><span class="emphasis">___</span>|</span><br><span class="line"><span class="bullet">* </span>[<span class="emphasis">_/,-,\"--"------ //,-,  ,-,\\\   |/             //,-,  ,-,  ,-,\\ _</span>_#</span><br><span class="line"><span class="bullet">*   </span>( 0 )|===<span class="strong">*****</span>*||( 0 )( 0 )||-  o              '( 0 )( 0 )( 0 )||</span><br><span class="line"><span class="bullet">*</span>----'-'--------------'-'--'-'-----------------------'-'--'-'--'-'--------------</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h4 id="我了个去-这不是梦娜丽莎么"><a class="markdownIt-Anchor" href="#我了个去-这不是梦娜丽莎么"></a> 我了个去、 这不是梦娜丽莎么？</h4><figure class="highlight purebasic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*        :'<span class="comment">;t)/!||||(//L+)'(-\\/ddjWWW#######WmKK(\!(/-|J=/\\t/!-/\!_L\) </span></span><br><span class="line">*        |-!/(!-)\L\)/!\5(!.!LWW##################<span class="symbol">#WK</span>/|!\\\\/!<span class="comment">;\/\T\/((\ </span></span><br><span class="line">*        |!'//\//(-!t\Y/\L!m####<span class="symbol">#M</span>###################<span class="symbol">#WLt</span>\\!)\/J-//)/<span class="comment">;t\ </span></span><br><span class="line">*        --/-.\.\/\.!)///m#####<span class="symbol">#K</span>######################<span class="symbol">#WK</span>!/!-( )-!,|/\ </span><br><span class="line">*        //,\--`--!-/\(q######<span class="symbol">#DD</span>#########################<span class="symbol">#L</span>\\\\-!!//!\\ </span><br><span class="line">*        -.-!\'!!\-\/:W#######<span class="symbol">#N</span>###########################<span class="symbol">#W</span>,).'-.-/\-' </span><br><span class="line">*        !.\!-!-!`!-!W######<span class="symbol">#P</span>|+~**@@@######################<span class="symbol">#W</span>/,/'\-/,\7 </span><br><span class="line">*        --`,-- -/.:W###*P!'          \`Z8#####################<span class="comment">;,\\`,\,\</span></span><br><span class="line">*        `.'.'\`-.-d##5'-           -- '-:V@#########<span class="symbol">#W</span>########<span class="symbol">#_</span>\-!-\\-</span><br><span class="line">*        `, -,.'/,G#<span class="symbol">#K</span>- '               - )7KM###################\-----/</span><br><span class="line">*        - '-  --:##@<span class="comment">;                    -!ZZ###################W! \'!- </span></span><br><span class="line">*         '-.`- G###|.                    `,D8K###################|/-.-/ </span><br><span class="line">*        -' ,-//###@)                      -)ZWMW##################\` _\</span><br><span class="line">*        - ' .:Yd###!                     `-!(K5K##################|(/L| </span><br><span class="line">*          - :\G##<span class="symbol">#Z</span>-                    ` ! -<span class="comment">;55ZZ#################)(4) </span></span><br><span class="line">*         . -!W####!\                     `  ' !-tVG###############<span class="symbol">#XNVZ</span> </span><br><span class="line">*           tt####@-.                        `  ')(W###############<span class="symbol">#D</span>)8@ </span><br><span class="line">*           )8#####\                         .-`-/KW################<span class="symbol">#KD</span># </span><br><span class="line">*          ||Z###<span class="symbol">#W</span>!-              .::,\.. -,<span class="comment">;\bZKK######8#K#########(#8 </span></span><br><span class="line">*          KN8#####( ,:!/GG_      d4KW8ZKW<span class="symbol">#WWK</span><span class="symbol">#W</span>#88######<span class="symbol">#W</span>#########<span class="symbol">#WK</span># </span><br><span class="line">*         )/8K##<span class="symbol">#K</span><span class="symbol">#W</span><span class="symbol">#WP</span>~~~T4(    dW##7'___L<span class="symbol">#M</span>###<span class="symbol">#MM8W</span>##<span class="symbol">#W</span>###########<span class="symbol">#bM8</span> </span><br><span class="line">*        \!48<span class="symbol">#K</span>####8#<span class="symbol">#W</span>*##<span class="symbol">#WY</span><span class="comment">;   WRob+~~######*ff/\NM8###############WW# </span></span><br><span class="line">*        .\\KW##<span class="symbol">#W</span>#,~t' !*~!',  -M@)    `~`,),' '.`K#################@KW </span><br><span class="line">*        .'8M###### -'..j/Z''    @//-  ,,\\+\'    :|W#####<span class="symbol">#M</span>###########8 </span><br><span class="line">*        :\#8<span class="symbol">#K</span>##<span class="symbol">#D</span>              \!`             !:Z8###8@#####8W<span class="symbol">#W</span>###8M </span><br><span class="line">*        q8W5######             `!-             `-)8#################<span class="symbol">#M8</span> </span><br><span class="line">*        8WZ8<span class="symbol">#M</span>####-             /  .          .\tK############@#####<span class="symbol">#ZJ</span> </span><br><span class="line">*        <span class="symbol">#W</span>#@K##<span class="symbol">#W</span>#|              //           \\tW@###@K#<span class="symbol">#W</span>#<span class="symbol">#W</span>##<span class="symbol">#K</span>##<span class="symbol">#Wm</span> </span><br><span class="line">*        ##8<span class="symbol">#M</span>#8##<span class="symbol">#P</span>-            -=/,         /<span class="comment">;D8W##############@###W## </span></span><br><span class="line">*        #8##<span class="symbol">#M</span>@####\-      ,   _)jJ<span class="comment">;        -((WKK#####W####W##K######K </span></span><br><span class="line">*        ##<span class="symbol">#W</span>@K#<span class="symbol">#K</span>##)<span class="comment">;     `\..KW##WK       )X)KW#M##W###MW##@#W######8# </span></span><br><span class="line">*        <span class="symbol">#K</span><span class="symbol">#W</span>####@#@@/<span class="comment">;-     ~M####M\    ,.\\=)D8W##W###W##########8W##@ </span></span><br><span class="line">*        ###<span class="symbol">#MW</span>######(`\\'     PPK((.:|/!-\-/)8XN@WMK######<span class="symbol">#W</span>#<span class="symbol">#MK</span>#@##### </span><br><span class="line">*        ##8#<span class="symbol">#MK</span><span class="symbol">#W</span>#@<span class="symbol">#b</span>!--\)L_. .(ZLWbW#\'- ,-N|/KM######<span class="symbol">#W</span>###@#######<span class="symbol">#W</span># </span><br><span class="line">*        #<span class="symbol">#KW</span>##<span class="symbol">#K</span><span class="symbol">#W</span>###/-  !``~~Yff*N5f -' -.\))KK######<span class="symbol">#MK</span>#<span class="symbol">#W</span>##<span class="symbol">#M8W</span><span class="symbol">#W</span>### </span><br><span class="line">*        <span class="symbol">#W</span>##<span class="symbol">#K</span>@K#####<span class="symbol">#J</span>--    .._dd/<span class="comment">;)/- !//)NK#8W##########8########M#K </span></span><br><span class="line">*        ##8W<span class="symbol">#K</span>##<span class="symbol">#W</span>####<span class="symbol">#W</span>!.   `YY\)\\)\7(-)4dW#8#@##<span class="symbol">#K</span><span class="symbol">#W</span>#######8######## </span><br><span class="line">*        M####8#<span class="symbol">#K</span><span class="symbol">#KW</span>##<span class="symbol">#W</span>#/,       '-\\//)88W<span class="symbol">#M</span>#@<span class="symbol">#K</span>#<span class="symbol">#M</span>###@#<span class="symbol">#M</span>#8##@<span class="symbol">#W</span>#8<span class="symbol">#M</span> </span><br><span class="line">*        ZW<span class="symbol">#W</span><span class="symbol">#M</span><span class="symbol">#K</span>#########<span class="symbol">#m</span>       -)!/LtWW<span class="symbol">#W</span>##@<span class="symbol">#W</span>####<span class="symbol">#KW</span>######<span class="symbol">#W</span>##<span class="symbol">#K</span>### </span><br><span class="line">*        K#<span class="symbol">#W</span>####<span class="symbol">#W</span><span class="symbol">#M</span>#8####<span class="symbol">#KL</span>   .-//dD##8W<span class="symbol">#K</span>######8#########<span class="symbol">#MK</span>##<span class="symbol">#W</span>#<span class="symbol">#M</span># </span><br><span class="line">*        tN<span class="symbol">#W</span>#<span class="symbol">#W</span><span class="symbol">#W</span><span class="symbol">#M</span>#########<span class="symbol">#bb4dKW</span>#@#<span class="symbol">#W</span>#<span class="symbol">#K</span>###<span class="symbol">#MK</span>####8##########<span class="symbol">#W</span>##### </span><br><span class="line">*        )NM#8W##@###@##############@##@##8#<span class="symbol">#K</span><span class="symbol">#W</span>###<span class="symbol">#M</span>#<span class="symbol">#K</span>#<span class="symbol">#K</span>#@###8#<span class="symbol">#M</span>#### </span><br><span class="line">*        (tMM##<span class="symbol">#W</span>#<span class="symbol">#M8</span>####@####@###@#########@####8W##8W###############<span class="symbol">#M</span> </span><br><span class="line">*        tNZ#<span class="symbol">#K</span>##<span class="symbol">#W</span>####@#####8###/4N##8<span class="symbol">#W</span>#<span class="symbol">#W</span>#<span class="symbol">#M</span>#8<span class="symbol">#MK</span><span class="symbol">#M8</span><span class="symbol">#K</span>#####<span class="symbol">#W</span>######## </span><br><span class="line">*        M/K@8##<span class="symbol">#M</span>@##<span class="symbol">#M</span>##########|!t*Z<span class="symbol">#N</span>####8#<span class="symbol">#M8Z</span>@ZZ<span class="symbol">#M</span>###@<span class="symbol">#W</span>####<span class="symbol">#K</span>##<span class="symbol">#W</span># </span><br><span class="line">*        WVd4M######@###########<span class="symbol">#D</span>,\`(+KKZD#8WK#5@84VZ<span class="symbol">#WM</span>###########<span class="symbol">#W</span>## </span><br><span class="line">*        K5WM8#8W<span class="symbol">#W</span>########8######,,-!/))ZK5@K4)@+(/XV/Z###@##<span class="symbol">#W</span>##<span class="symbol">#M</span>#### </span><br><span class="line">*        +8WN@##@K#<span class="symbol">#W</span>##<span class="symbol">#W</span>########<span class="symbol">#b</span>.-.\!||\X(5)Z/7\\\t5/K#######<span class="symbol">#W</span>###### </span><br><span class="line">*        8M8###@###@##8########<span class="symbol">#KDbt</span>! !.-!t`(-\\!.\/.\!ZdG##<span class="symbol">#W</span><span class="symbol">#MW</span>##<span class="symbol">#G</span>### </span><br><span class="line">*        ~~~~~`~~~~~~~~~~~~~~~~'~` ''  ' ` ` ' '   `   ``~`~`~`~~~~'~~~~  </span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h4 id="我喜欢朦胧美"><a class="markdownIt-Anchor" href="#我喜欢朦胧美"></a> 我喜欢朦胧美</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*   ............<span class="symbol">HIIMHIMHMMHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:</span>.............</span><br><span class="line">*   ...........<span class="symbol">MMMI:</span><span class="symbol">MII:</span>MIHMHMMMMMHMMMMIMMMIMMMMMMMMMMMMMM.............</span><br><span class="line">*   .........<span class="symbol">:MMMI</span><span class="symbol">:M</span>::HM::<span class="symbol">MIHHHM:</span><span class="symbol">IM:</span><span class="symbol">MHM:</span><span class="symbol">IMH:</span><span class="symbol">IMMMIIMMMHMMMH:</span>............</span><br><span class="line">*   ........<span class="symbol">:MMMHHM</span>::<span class="symbol">MMI:</span><span class="symbol">HH:</span><span class="symbol">MM:</span><span class="symbol">I:</span><span class="symbol">M:</span><span class="symbol">MMMH:</span><span class="symbol">IMH:</span>IMM::<span class="symbol">MH:</span><span class="symbol">MM:</span><span class="symbol">MM:</span>M............</span><br><span class="line">*   .......<span class="symbol">MMMMHMM:</span><span class="symbol">MMIMHMII:</span><span class="symbol">MM:</span><span class="symbol">IIIM:</span><span class="symbol">MHMIMMM:</span>MMIIH::<span class="symbol">MH:</span><span class="symbol">HM:</span>M............</span><br><span class="line">*   ...... <span class="symbol">:MIMMMMMMMMMHMMHMM</span><span class="symbol">:HHMHMMMMIMHMMMMHMHMIHIHM</span>::MMI............</span><br><span class="line">*   .......<span class="symbol">M:</span><span class="symbol">MMMMMMMMMMMMHMMMMMMMMHMMMMMMMMMMHMMMHMMIMHMMMM:</span>...........</span><br><span class="line">*   .......HHMMMMMMMMMMMMMMMMIMMMM.MMHMMMMHMMMMMMMMMMMIMHMMI...........</span><br><span class="line">*   ........<span class="symbol">MMMIMMMMMMMMMMIHMIMIM:</span>.<span class="symbol">M:</span><span class="symbol">HMM:</span>MIHMMMMMMMMMMMMMMMI...........</span><br><span class="line">*   ........<span class="symbol">MM.MMMMMMMMMMMH:</span><span class="symbol">MMMHM:</span>.<span class="symbol">M.:</span>MM.M.HMMMHMMMMMMMMMMMI...........</span><br><span class="line">*   ........MM.MMMMMMMMMMH::<span class="symbol">M.M.M..M..MM:</span><span class="symbol">M.IIMH:</span>MMMMMMMMMMMI...........</span><br><span class="line">*   ........<span class="symbol">M:</span>.<span class="symbol">MM:</span><span class="symbol">MMMMMMM:</span>.<span class="symbol">I..:</span>.<span class="symbol">I..H..IM:</span>I.I.M.IMHMMMMMMMMMI...........</span><br><span class="line">*   ........<span class="symbol">M..MMMHMMMMM.:</span><span class="symbol">HI:</span><span class="symbol">HHH......H....II..:</span><span class="symbol">MMMMMMMHMM:</span>...........</span><br><span class="line">*   ...........<span class="symbol">MM.MIMMMM.:</span><span class="symbol">H:</span> .::I........ ...<span class="symbol">:IH</span><span class="symbol">:</span>.<span class="symbol">MMMMMM:</span>MMI...........</span><br><span class="line">*   ...........<span class="symbol">:H</span>..<span class="symbol">MMMIM.M.:</span>...<span class="symbol">:I</span>.........: ..::HHHMMMMIMMMH...........</span><br><span class="line">*   ............<span class="symbol">H..IMM:</span><span class="symbol">I:</span>..<span class="symbol">I:</span>..<span class="symbol">:</span>..........<span class="symbol">I:</span>..<span class="symbol">:I</span>::<span class="symbol">:MMMMMMMMM</span>...........</span><br><span class="line">*   ...............MMH::I...I::<span class="symbol">:</span>..........III.I::MMMHMMMMMMM...........</span><br><span class="line">*   ..............MMMHMII.. ..............<span class="symbol">:MI</span><span class="symbol">:I</span>.<span class="symbol">HIIIHM:</span>HMMMM...........</span><br><span class="line">*   .............<span class="symbol">:MMMMIM</span>::...........<span class="symbol">:</span>......<span class="symbol">:H</span>..<span class="symbol">:II</span><span class="symbol">:MHIMMMMM</span>...........</span><br><span class="line">*   .............<span class="symbol">MMMMMMMMM......................I.MMMHHMMMMM:</span>..........</span><br><span class="line">*   ............<span class="symbol">MMMMH:</span><span class="symbol">MMMMM........:</span>.<span class="symbol">:</span>.........<span class="symbol">:MMMMMMMMMMMMI</span>..........</span><br><span class="line">*   ...........MMMMMMHMMMMMMM.. .............<span class="symbol">:MMMMMMMMMMMMMMM</span>..........</span><br><span class="line">*   ........ .<span class="symbol">IMMMMMMMMMMMMMMMM............:</span>MMMMMMMMMHMMMMMMM..........</span><br><span class="line">*   ..........<span class="symbol">MMMMMMMMMMMMMMMMMI:</span>.......<span class="symbol">:IHMMMMMMMMM</span>::MMMMMMM..........</span><br><span class="line">*   .........MMMMMMMIMMMMMMMMMMH::<span class="symbol">:I</span><span class="symbol">:I</span><span class="symbol">:</span>.::HMMMMMMMMMHMMMMMMMMI.........</span><br><span class="line">*   ........<span class="symbol">HMMMMMMM:</span>MMMMMMMMMMI::::::<span class="symbol">:</span>..<span class="symbol">:HMMMMMMMMIMMMMMMMMMM</span>.........</span><br><span class="line">*   .......<span class="symbol">IMMMMM..MI:</span>MMMMMMMMM::::..::::<span class="symbol">:</span>.MMMMMMMMMMMMMMMMMMM ........</span><br><span class="line">*   ......<span class="symbol">:MMMM</span>....<span class="symbol">:MMHMMMMMM</span>::::<span class="symbol">:</span>.....::.<span class="symbol">:</span>.MMMMMMMHMMMMMMMMMM.........</span><br><span class="line">*   ......MMI....::<span class="symbol">:IMMMMI</span><span class="symbol">:</span>.::::<span class="symbol">:</span>.....<span class="symbol">:I</span>::::::HMMMHIM::::::MMMH........</span><br><span class="line">*   .....MM.....::<span class="symbol">:IMIMMM</span><span class="symbol">:</span>.......<span class="symbol">:</span>....::::::::<span class="symbol">IMMHMM:</span>I::<span class="symbol">:I</span>::<span class="symbol">:MM</span> .......</span><br><span class="line">*   ....<span class="symbol">MMM.....:</span><span class="symbol">I:</span>.<span class="symbol">MIHMMM........:</span>...::::::<span class="symbol">:HMMMMI</span>::::<span class="symbol">:</span>....::<span class="symbol">M:</span>.......</span><br><span class="line">*   ...<span class="symbol">:MM</span><span class="symbol">:</span>........<span class="symbol">:MMMHMM</span>..................IMMMMM::...........M.......</span><br><span class="line">*   ...MMM........::<span class="symbol">:MMMMM</span>......<span class="symbol">:</span>..........<span class="symbol">:HMMMMM</span>::...................</span><br><span class="line">*   ..<span class="symbol">:MM</span><span class="symbol">:</span>.......::::<span class="symbol">:MMMM</span>........... .. .::<span class="symbol">MMM:</span>HM::.............<span class="symbol">:</span>.....</span><br><span class="line">*   ..MMM........::::<span class="symbol">:MMMMM</span><span class="symbol">:I</span>..HHIMHMHHHM <span class="symbol">:IMMHIMH</span>::.............I....</span><br><span class="line">*<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h4 id="美女啊-小心口水"><a class="markdownIt-Anchor" href="#美女啊-小心口水"></a> 美女啊、 小心口水…</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//                nHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHn.</span></span><br><span class="line"><span class="comment">//             .MS?MMMMMMMMMMMMMMMMMM?MM~MMMMMMMMMSHMMMMMMMM(?"~\</span></span><br><span class="line"><span class="comment">//             MMMMMH?MMMMMMMX*MM?MMX%MM/MMMMMM"HMMMMMMMMMMMMMMH</span></span><br><span class="line"><span class="comment">//            MMMMMMMMMMMMMMMMMX*MX*MMMX?MMMMM(M!XMMMMMMMMMMMMMMMX</span></span><br><span class="line"><span class="comment">//           XMC)?MMMMMMMMMMMMMMMhX?!?MMMMX#MM!MXMMMMMMMMMMMML   '~</span></span><br><span class="line"><span class="comment">//   '\      MMMMMMMMMMMMMMMMMMMMMMMM!~`````-`~!?MMMM)MMMMMMMMx</span></span><br><span class="line"><span class="comment">//      `~""MMM)MMMMMMMMMMMMMMMHhHH!~           `#MM(MMMMMMMMMM&gt;</span></span><br><span class="line"><span class="comment">//         HM!HMMMMMMMMMMMMMMMM*?)?`                `"MMMMMMMMMX       .</span></span><br><span class="line"><span class="comment">//        XM!MMMMMMMMMMMMMMMMMMM?~                     'MMMMMMMM:..xx!`</span></span><br><span class="line"><span class="comment">//        M!MMMMMMMMMMMMMMMMMXH!                        MMMMXMMP"`</span></span><br><span class="line"><span class="comment">//       \!MMMMMMMSMHHHMM?XMM?~    -:::xx..             M?XMM?".x(</span></span><br><span class="line"><span class="comment">//       MXMMMMMMMMMM!XHMMMM":       ... `"%x          XHHHMMM*"</span></span><br><span class="line"><span class="comment">//      \!MMMMMMMM?XMMMMMMX!'~L     '%%%+:.  `       ..MMMMM"</span></span><br><span class="line"><span class="comment">//      'HMMMMMM?HMMMMM*XM!    h     ~\).^\~     .%""`MM?"</span></span><br><span class="line"><span class="comment">//      'MMMMMMMMMMMMMXMMM!    -X               +%%!.MMMXk</span></span><br><span class="line"><span class="comment">//      ?MMMMMMMMMMMXMMMMM `.   ~               `""'XMMMMX</span></span><br><span class="line"><span class="comment">//      !MMMMMMMMMMMMMMMMMX.    '                  XMkMMX&gt;</span></span><br><span class="line"><span class="comment">//      XMMMMMMMMMMMMMMM?MXXXx.-`                  XXMMM!</span></span><br><span class="line"><span class="comment">//      MMMMMMMMMMMMMMMMXMXXXXXXx.         ~~      MMMMM</span></span><br><span class="line"><span class="comment">//      XMMMMMMMMMMMM?MMXXXXXXXXX!`         '+^  .MMM!P</span></span><br><span class="line"><span class="comment">//      'MMM!MMMMMMMMMi?M!"`        `~%HHHHxx.  xMMMM"</span></span><br><span class="line"><span class="comment">//      :MMMMMMMMMMMMMMM"               `\XMM .MMMMM</span></span><br><span class="line"><span class="comment">//      XMMMMMMMMMX?MM!                   `( HMMMMM</span></span><br><span class="line"><span class="comment">//     XMMMM)MMM"   \~                     'MMMMM*</span></span><br><span class="line"><span class="comment">//    'MMMMfMMM"  \~                        XMMM*</span></span><br><span class="line"><span class="comment">//   .MMMMMXMM"  ^                          `MMM</span></span><br><span class="line"><span class="comment">//   XMMMM!MM"                               MM&gt;</span></span><br><span class="line"><span class="comment">//   HMMMMXM~                                MM&gt;</span></span><br><span class="line"><span class="comment">//   ?MMMMM~                                 Xf%</span></span><br><span class="line"><span class="comment">//    MMMMf                                  %% \</span></span><br><span class="line"><span class="comment">//    4MMM                                    %</span></span><br><span class="line"><span class="comment">//      `M                                     %</span></span><br><span class="line"><span class="comment">//        %                                    %</span></span><br><span class="line"><span class="comment">//        %                                     %</span></span><br><span class="line"><span class="comment">//        %                 !                   %</span></span><br><span class="line"><span class="comment">//         %                 !                   %</span></span><br><span class="line"><span class="comment">//         %                 %                   !?%.</span></span><br><span class="line"><span class="comment">//         %                  %                   X. %%.</span></span><br><span class="line"><span class="comment">//          %                  %                  X!    %%.</span></span><br><span class="line"><span class="comment">//          %                  %                  '!       %.</span></span><br><span class="line"><span class="comment">//           %                  %                  !!         %.</span></span><br><span class="line"><span class="comment">//           %                  %                  '!          `%</span></span><br><span class="line"><span class="comment">//            %                  %                  !&gt;          /%</span></span><br><span class="line"><span class="comment">//            %                   %                 !!          % %</span></span><br><span class="line"><span class="comment">//             %                   %                 !          \%</span></span><br><span class="line"><span class="comment">//             %                   %                 !!          %</span></span><br><span class="line"><span class="comment">//              %                   %                '!         %~</span></span><br><span class="line"><span class="comment">//               %                   %                !!       %~</span></span><br><span class="line"><span class="comment">//               %%                  %                `!     %%</span></span><br><span class="line"><span class="comment">//               %%%                  %                %++4MMf</span></span><br><span class="line"><span class="comment">//                ?MMx                 %                %. MMX</span></span><br><span class="line"><span class="comment">//                 *MMMx               %                 !\'MMM&gt;</span></span><br><span class="line"><span class="comment">//                  MMMMMHx    .....xxnH                  %HMMM&gt;</span></span><br><span class="line"><span class="comment">//                   MMMMMMMMMMMMMMMMMMM&gt;                  MMMMX</span></span><br><span class="line"><span class="comment">//                   'MMMMMMMMMMMMMMMMMMk                  'MMMM</span></span><br><span class="line"><span class="comment">//                    'MMMMMMMMMMMMMMMMMM                   MMMM&gt;</span></span><br><span class="line"><span class="comment">//                     ?MMMMMMMMMMMMMMMMMM                  'MMMX</span></span><br><span class="line"><span class="comment">//                      MMMMMMMMMMMMMMMMMMM                  MMMM</span></span><br><span class="line"><span class="comment">//                      XMMMMM</span></span><br></pre></td></tr></table></figure><h4 id="小猪猪"><a class="markdownIt-Anchor" href="#小猪猪"></a> 小猪猪</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//                _,--.       ,--._</span></span><br><span class="line"><span class="comment">//                \  &gt; `|&gt;o&lt;|' &lt;  /</span></span><br><span class="line"><span class="comment">//                 `-.         .-'</span></span><br><span class="line"><span class="comment">//                   / 'e___e` \</span></span><br><span class="line"><span class="comment">//                  (   (o o)   )</span></span><br><span class="line"><span class="comment">//                  _\_  `='  _/_</span></span><br><span class="line"><span class="comment">//                 / /(`-._.-')\ \</span></span><br><span class="line"><span class="comment">//                / /  `.___,'  \_\</span></span><br><span class="line"><span class="comment">//              _/ /    _____    \ \_</span></span><br><span class="line"><span class="comment">//             / _(_,--'     `--._)_ \</span></span><br><span class="line"><span class="comment">//             `'  )______@______(  `'</span></span><br><span class="line"><span class="comment">//           hjw  /               \</span></span><br><span class="line"><span class="comment">//               /_________________\</span></span><br><span class="line"><span class="comment">//                  \     )(     /</span></span><br><span class="line"><span class="comment">//                   \   /  \   /</span></span><br><span class="line"><span class="comment">//                    )  |  |  (</span></span><br><span class="line"><span class="comment">//                   /`-']  [`-'\</span></span><br><span class="line"><span class="comment">//                   `--'    `--'</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><h4 id="丘比特之剑"><a class="markdownIt-Anchor" href="#丘比特之剑"></a> 丘比特之剑</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//                                  (</span><br><span class="line">//                         .-<span class="string">''</span><span class="string">'-..'</span> \                         Who the...??</span><br><span class="line">//               _______ .<span class="string">'       -   \                           yikes!</span></span><br><span class="line"><span class="string">//             &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; );__   ,,,_)   \                      __ /</span></span><br><span class="line"><span class="string">//                &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; ) ;C  /     \                /ZZZ'</span>  )</span><br><span class="line">//                  &lt;&lt;&lt;&lt;&lt;&lt; (.-<span class="string">'-.  )====_)_=======&gt;      .-'</span>``<span class="string">'&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br><span class="line"><span class="string">//                    &lt;&lt;&lt;&lt;&lt; \    '</span><span class="string">''</span><span class="string">''</span><span class="string">''</span>   )           .<span class="string">'    &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br><span class="line"><span class="string">//                    ;  &lt;&lt;&lt;     .......__/       __\_;    ,&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br><span class="line"><span class="string">//               .-'</span><span class="string">''</span>         (         )          / / (<span class="string">'"\__</span></span><br><span class="line"><span class="string">//            .-'</span>              ;.       /            (;/;) /\</span><br><span class="line">//           /  .-<span class="string">'     .     =  .     /</span></span><br><span class="line"><span class="string">//       _-'</span><span class="string">'\_/         '</span>. .<span class="string">'    .   /</span></span><br><span class="line"><span class="string">//    .-'</span>  )  ;\          <span class="string">''</span><span class="string">'.     . /</span></span><br><span class="line"><span class="string">//   ;   .'</span><span class="string">''</span><span class="string">'  `.       '</span>    ;     (</span><br><span class="line">//   O -<span class="string">'        .'</span><span class="string">''</span>       .<span class="string">'                      (__)))</span></span><br><span class="line"><span class="string">//             .'</span>   .-<span class="string">''</span><span class="string">''</span><span class="string">'`                    (  )mikey(__)))</span></span><br><span class="line"><span class="string">//             '</span>o-<span class="string">'                         ( _))(_ _)( _))_))</span></span><br></pre></td></tr></table></figure><h4 id="我在看你"><a class="markdownIt-Anchor" href="#我在看你"></a> 我在看你</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//           _______________________________</span></span><br><span class="line"><span class="comment">//         ,;:::::::|:::::|::::::|::::::::::|:;</span></span><br><span class="line"><span class="comment">//        ,' ###l;;;;;;|;;;;;|;;;;;;;|;####l;;;;</span></span><br><span class="line"><span class="comment">//        ;  ###l;   ;;;;   ;;;  ;;;;; ####l;;|;;;</span></span><br><span class="line"><span class="comment">//        `. ###l     ;;;    ;;   ;;;  ####l;|;:|;;</span></span><br><span class="line"><span class="comment">//         :           ; +   ;  +  ;;    ;;  ;|::|;</span></span><br><span class="line"><span class="comment">//         |  +           ++++++            ;::|::;</span></span><br><span class="line"><span class="comment">//         :     +        ~~~~~~~~~' `.     ;||;;;</span></span><br><span class="line"><span class="comment">//         ;     +                    `    ;::::|;</span></span><br><span class="line"><span class="comment">//        ,'                               ;|;||;;</span></span><br><span class="line"><span class="comment">//       ,'  ____          ____      ;;~~ ;`;;;;|;</span></span><br><span class="line"><span class="comment">//       `,-'  __`-,;;;;;,:____`-. ~~~ ;;  ____ ;</span></span><br><span class="line"><span class="comment">//        `.--'(o)~`;  ::`.  (o)~; `` ~~ ,',--,)</span></span><br><span class="line"><span class="comment">//          `---~  ,'  ```:`--~-;;~~`` ,','  ;,'</span></span><br><span class="line"><span class="comment">//         / `~~~ ,'     :`~~~~~    ,' :,' ;;``.</span></span><br><span class="line"><span class="comment">//         `.__ .'     __` \______,/   :(  ;)  ))</span></span><br><span class="line"><span class="comment">//          ;~~ ;     '~~`  ~~~~~~     \_&#125;    ;,'</span></span><br><span class="line"><span class="comment">//         ,'  .'    _____)        ,'  \_  ;'~,'</span></span><br><span class="line"><span class="comment">//         :   `.__ ' . .  \       :  ///\__,'</span></span><br><span class="line"><span class="comment">//         `. /  .. :. . . .\      :  //</span></span><br><span class="line"><span class="comment">//          : ` \___`_____\ .;     :  //  :</span></span><br><span class="line"><span class="comment">//          `.  ,---`'----,\ ;    ,'  /   ;</span></span><br><span class="line"><span class="comment">//           \  (~~`~~'~~~) `    ,'     ,-'</span></span><br><span class="line"><span class="comment">//            :  `---------'    ,'   _,-'</span></span><br><span class="line"><span class="comment">//            `.            " _,'_,-'   \______</span></span><br><span class="line"><span class="comment">//             :   ~~      _,'--'   ;  (______()</span></span><br><span class="line"><span class="comment">//             `._________;       ; ' : ~~~~~~</span></span><br><span class="line"><span class="comment">//            ;     |`.           '/  `  ;| \ _</span></span><br><span class="line"><span class="comment">//        _,-'     |:::`-.             ,;:|  \ `-._</span></span><br><span class="line"><span class="comment">//     ,-'         |::::::`-----------':::/   :    `--.</span></span><br><span class="line"><span class="comment">// , -'           |::::::::::::::::::::::/    :        `</span></span><br><span class="line"><span class="comment">//                :::::::::::::::::::::::/    :</span></span><br></pre></td></tr></table></figure><h4 id="佛祖保佑"><a class="markdownIt-Anchor" href="#佛祖保佑"></a> 佛祖保佑</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>                            _ooOoo_    </span><br><span class="line"><span class="string">//</span>                           o8888888o    </span><br><span class="line"><span class="string">//</span>                           88<span class="string">" . "</span>88    </span><br><span class="line"><span class="string">//</span>                           <span class="params">(| -_- |)</span>    </span><br><span class="line"><span class="string">//</span>                            O\ = <span class="string">/O</span>    </span><br><span class="line"><span class="string">//</span>                        ____/`<span class="params">---</span>'\____    </span><br><span class="line"><span class="string">//</span>                      .   ' \\| |<span class="string">//</span> `.    </span><br><span class="line"><span class="string">//</span>                       / \\||| : |||<span class="string">//</span> \    </span><br><span class="line"><span class="string">//</span>                     / _||||| -<span class="function">:-</span> |||||- \    </span><br><span class="line"><span class="string">//</span>                       | | \\\ - <span class="string">///</span> | |    </span><br><span class="line"><span class="string">//</span>                     | \_| ''\<span class="params">---/</span>'' | |    </span><br><span class="line"><span class="string">//</span>                      \ <span class="string">.-</span>\__ `-` ___/-. /    </span><br><span class="line"><span class="string">//</span>                   ___`. .' <span class="string">/--.--</span>\ `. . __    </span><br><span class="line"><span class="string">//</span>                .<span class="string">""</span> '&lt; `<span class="string">.___</span>\_&lt;|&gt;_/___.' &gt;'<span class="string">""</span>.    </span><br><span class="line"><span class="string">//</span>               | | : `- \`.;`\ _ /`;.`/ - ` : | |    </span><br><span class="line"><span class="string">//</span>                 \ \ `-. \_ __\ <span class="string">/__</span> _/ <span class="string">.-</span>` / /    </span><br><span class="line"><span class="string">//</span>         ======`-<span class="string">.____</span>`-<span class="string">.___</span>\_____/___.-`____.-'======    </span><br><span class="line"><span class="string">//</span>                            `=<span class="params">---=</span>'    </span><br><span class="line"><span class="string">//</span>    </span><br><span class="line"><span class="string">//</span>         <span class="string">.............................................</span>    </span><br><span class="line"><span class="string">//</span>                  佛祖保佑             永无BUG</span><br></pre></td></tr></table></figure><h4 id="标注键盘"><a class="markdownIt-Anchor" href="#标注键盘"></a> 标注键盘</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐</span><br><span class="line"> * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐</span><br><span class="line"> * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘</span><br><span class="line"> * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐</span><br><span class="line"> * │~ `│! 1│@ 2│<span class="comment"># 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │</span></span><br><span class="line"> * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤</span><br><span class="line"> * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │&#123; [│&#125; ]│ | \ │ │Del│End│PDn│ │<span class="number"> 7 </span>│<span class="number"> 8 </span>│<span class="number"> 9 </span>│   │</span><br><span class="line"> * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │</span><br><span class="line"> * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│" '│ Enter  │               │<span class="number"> 4 </span>│<span class="number"> 5 </span>│<span class="number"> 6 </span>│   │</span><br><span class="line"> * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤</span><br><span class="line"> * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? /│  Shift   │     │ ↑ │     │<span class="number"> 1 </span>│<span class="number"> 2 </span>│<span class="number"> 3 </span>│   │</span><br><span class="line"> * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││</span><br><span class="line"> * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │  <span class="number"> 0 </span>  │ . │←─┘│</span><br><span class="line"> * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h4 id="骷髅头"><a class="markdownIt-Anchor" href="#骷髅头"></a> 骷髅头</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**</span><br><span class="line"> <span class="bullet">*                                                            *</span></span><br><span class="line"> <span class="bullet">*   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *</span></span><br><span class="line"> <span class="bullet">*    |                     ______                     |      *</span></span><br><span class="line"> <span class="bullet">*    |                  .-"      "-.                  |      *</span></span><br><span class="line"> <span class="bullet">*    |                 /            \                 |      *</span></span><br><span class="line"> <span class="bullet">*    |     _          |              |          _     |      *</span></span><br><span class="line"> <span class="bullet">*    |    ( \         |,  .-.  .-.  ,|         / )    |      *</span></span><br><span class="line"> <span class="bullet">*    |     &gt; "=._     | )(__/  \__)( |     _.=" &lt;     |      *</span></span><br><span class="line"> <span class="bullet">*    |    (_/"=._"=._ |/     /\     \| _.="_.="\_)    |      *</span></span><br><span class="line"> <span class="bullet">*    |           "=._"(_     ^^     _)"_.="           |      *</span></span><br><span class="line"> <span class="bullet">*    |               "=\__|IIIIII|__/="               |      *</span></span><br><span class="line"> <span class="bullet">*    |              _.="| \IIIIII/ |"=._              |      *</span></span><br><span class="line"> <span class="bullet">*    |    _     _.="_.="\          /"=._"=._     _    |      *</span></span><br><span class="line"> <span class="bullet">*    |   ( \_.="_.="     `--------`     "=._"=._/ )   |      *</span></span><br><span class="line"> <span class="bullet">*    |    &gt; _.="                            "=._ &lt;    |      *</span></span><br><span class="line"> <span class="bullet">*    |   (_/                                    \_)   |      *</span></span><br><span class="line"> <span class="bullet">*    |                                                |      *</span></span><br><span class="line"> <span class="bullet">*    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *</span></span><br><span class="line"> <span class="bullet">*                                                            *</span></span><br><span class="line"> <span class="bullet">*           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *</span></span><br><span class="line"> <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h4 id="神兽保佑"><a class="markdownIt-Anchor" href="#神兽保佑"></a> 神兽保佑</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ┏┓　　　┏┓</span></span><br><span class="line"><span class="comment">// ┏┛┻━━━┛┻┓</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┃ 　</span></span><br><span class="line"><span class="comment">// ┃　　　━　　　┃</span></span><br><span class="line"><span class="comment">// ┃　┳┛　┗┳　┃</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┃</span></span><br><span class="line"><span class="comment">// ┃　　　┻　　　┃</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┃</span></span><br><span class="line"><span class="comment">// ┗━┓　　　┏━┛</span></span><br><span class="line"><span class="comment">// ┃　　　┃ Code is far away from bug with the animal protecting　　　　　　　　</span></span><br><span class="line"><span class="comment">// ┃　　　┃ 神兽保护，永无BUG！</span></span><br><span class="line"><span class="comment">// ┃　　　┗━━━┓</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┣┓</span></span><br><span class="line"><span class="comment">// ┃　　　　　　　┏┛</span></span><br><span class="line"><span class="comment">// ┗┓┓┏━┳┓┏┛</span></span><br><span class="line"><span class="comment">// ┃┫┫　┃┫┫</span></span><br><span class="line"><span class="comment">// ┗┻┛　┗┻┛</span></span><br></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *　　　　　　　　┏┓　　　┏┓+ +</span><br><span class="line"> *　　　　　　　┏┛┻━━━┛┻┓ + +</span><br><span class="line"> *　　　　　　　┃　　　　　　　┃ 　</span><br><span class="line"> *　　　　　　　┃　　　━　　　┃ ++ + + +</span><br><span class="line"> *　　　　　　 ████━████ ┃+</span><br><span class="line"> *　　　　　　　┃　　　　　　　┃ +</span><br><span class="line"> *　　　　　　　┃　　　┻　　　┃</span><br><span class="line"> *　　　　　　　┃　　　　　　　┃ + +</span><br><span class="line"> *　　　　　　　┗━┓　　　┏━┛</span><br><span class="line"> *　　　　　　　　　┃　　　┃　　　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　┃　　　┃ + + + +</span><br><span class="line"> *　　　　　　　　　┃　　　┃　Code <span class="keyword">is</span> far away <span class="keyword">from</span> bug <span class="keyword">with</span> <span class="keyword">the</span> animal protecting　　　　　　　</span><br><span class="line"> *　　　　　　　　　┃　　　┃ + 神兽保佑,永无bug　　</span><br><span class="line"> *　　　　　　　　　┃　　　┃</span><br><span class="line"> *　　　　　　　　　┃　　　┃　　+　　　　　　　　　</span><br><span class="line"> *　　　　　　　　　┃　 　　┗━━━┓ + +</span><br><span class="line"> *　　　　　　　　　┃ 　　　　　　　┣┓</span><br><span class="line"> *　　　　　　　　　┃ 　　　　　　　┏┛</span><br><span class="line"> *　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + +</span><br><span class="line"> *　　　　　　　　　　┃┫┫　┃┫┫</span><br><span class="line"> *　　　　　　　　　　┗┻┛　┗┻┛+ + + +</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>是不是很炫酷、 喜欢请拿走吧、转载请注明出处哦~~~</p><p>更多内容请参考如下地址： <code>http://www.asciiworld.com/-Halloween,58-.html</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;有毒的代码注释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#有毒的代码注释&quot;&gt;&lt;/a&gt; 有毒的代码注释&lt;/h2&gt;
&lt;h4 id=&quot;鸟&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#鸟&quot;&gt;&lt;/a&gt; 鸟&lt;/h4
      
    
    </summary>
    
      <category term="程序员" scheme="https://jjeian.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
    
      <category term="程序员" scheme="https://jjeian.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="代码注释" scheme="https://jjeian.github.io/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
</feed>
